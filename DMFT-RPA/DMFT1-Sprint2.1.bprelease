<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>DMFT1-Sprint2.1</bpr:name>
    <bpr:release-notes>DMFT-271 TECH - Create RPA process to apply initial clean pass rule to eDMER
DMFT-433 TECH - Configure RPA to integrate with the API's GET endpoint
DMFT-238 TECH - Create RPA process to use the DMFT-API endpoint to update the DMFT-DB</bpr:release-notes>
    <bpr:created>2020-02-20 22:51:51Z</bpr:created>
    <bpr:package-id>1</bpr:package-id>
    <bpr:package-name>DMFT</bpr:package-name>
    <bpr:user-created-by>marzieh</bpr:user-created-by>
    <bpr:contents count="61">
        <process id="d3140278-0670-47f3-9706-277ae31379ea" name="Determine Clean Pass" xmlns="http://www.blueprism.co.uk/product/process"><process name="Determine Clean Pass" version="1.0" bpversion="6.5.0.12573" narrative="This process performs analysis on the eDMERs to determine if they are a Clean Pass." byrefcollection="true"><view><camerax>283</camerax><cameray>-201</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5ab552b1-8426-46d1-8a08-fbdf648fc04c" type="Normal" published="False"><name>Read eDMER from Queue and Extract Data</name><view><camerax>48</camerax><cameray>555</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f28da52e-7191-47cc-9ce5-6b0aa97b1e75" type="Normal" published="False"><name>Extract Data From Questionnaire</name><view><camerax>-217</camerax><cameray>1275</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0c25a6f-294a-44fd-bfc8-b10354ebf4c9" type="Normal" published="False"><name>Extract Data From Resource Item</name><view><camerax>-270</camerax><cameray>435</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd" type="Normal" published="False"><name>Extract Patient Information</name><view><camerax>0</camerax><cameray>360</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f51a1c0e-e761-451a-bb82-df0a6c7513fd" type="Normal" published="False"><name>Extract Reason For Examination and Class Information</name><view><camerax>0</camerax><cameray>570</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8c1b9c3d-c875-4c27-bae0-edb29454bafa" type="Normal" published="False"><name>Extract Vision Field Information</name><view><camerax>0</camerax><cameray>-135</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7a227ec-3739-4695-ad56-0d02cdf34fed" type="Normal" published="False"><name>Extract Vision Acuity Corrected Information</name><view><camerax>231</camerax><cameray>255</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8b0ec712-a5d6-4450-944b-710aa0197896" type="Normal" published="False"><name>Extract Vision Acuity Uncorrected Information</name><view><camerax>0</camerax><cameray>570</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3ad61397-5ca7-4260-9f11-573571ddfb42" type="Normal" published="False"><name>Extract Blood Pressure Informations</name><view><camerax>-167</camerax><cameray>87</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="319a6d13-1edc-4442-b62a-a8a37f2aab19" type="Normal" published="False"><name>Extract Narrative Information</name><view><camerax>0</camerax><cameray>237</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="98d23c06-740d-49c4-84da-e3f44b781e3b" type="Normal" published="False"><name>Extract Date Consent Given Section</name><view><camerax>0</camerax><cameray>150</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a77a96a2-6faf-4c43-9f99-53882dffe938" type="Normal" published="False"><name>Extract Opinion Information</name><view><camerax>0</camerax><cameray>120</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f64323fc-b01e-4085-820c-a1f41a97e5eb" type="Normal" published="False"><name>Extract Recommendation Information</name><view><camerax>0</camerax><cameray>150</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="de99b204-1340-4447-9082-40347c13c051" type="Normal" published="False"><name>Extract History Information</name><view><camerax>0</camerax><cameray>24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4" type="Normal" published="False"><name>Apply Clean Pass Rule and Load into Results Queue</name><view><camerax>195</camerax><cameray>1257</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1b88f3b4-09a5-4942-a891-856dd9029f95" type="Normal" published="False"><name>Determine History</name><view><camerax>0</camerax><cameray>210</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e4944086-e064-41f7-9a7b-119e2ccca7a4" type="Normal" published="False"><name>Determine Visual Acuity Status</name><view><camerax>0</camerax><cameray>270</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="70fe7164-4977-409a-9efd-eacaa88b4768" name="Start" type="Start"><narrative></narrative><displayx>0</displayx><displayy>-345</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>96c75a04-57ea-4ecd-810c-01d71afc6a49</onsuccess></stage><stage stageid="00780584-8512-44b6-83bb-d32767d4db1a" name="End" type="End"><narrative></narrative><displayx>0</displayx><displayy>435</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="aeeb359b-4642-41e2-a8f6-299060036246" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-510</displayx><displayy>-195</displayy><displaywidth>480</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="b554112d-06de-4fe1-afa5-fce04c5e5922" name="Read eDMER from Queue and Extract Data" type="SubSheetInfo"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-450</displayx><displayy>-240</displayy><displaywidth>390</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="a6f4d925-e099-4734-bc28-884c7fc416fe" name="Start" type="Start"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-255</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6b74f8cd-4cc6-4d96-a672-720c63d4cb19</onsuccess></stage><stage stageid="740e701a-5c6e-4ba1-a422-a05260f2f5bf" name="End" type="End"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>960</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="text" name="Fail Reason" stage="Fail Reason" /><output type="flag" name="Success" stage="Success" /><output type="collection" name="History Section Results" stage="History Section Results" /><output type="collection" name="Patient Information Section Results" stage="Patient Information Section Results" /><output type="collection" name="Reason For Examination and Class Section Results" stage="Reason For Examination and Class Section Results" /><output type="collection" name="Vision Acuity Corrected Section Results" stage="Vision Acuity Corrected Section Results" /><output type="collection" name="Vision Acuity Uncorrected Section Results" stage="Vision Acuity Uncorrected Section Results" /><output type="collection" name="Vision Field Section Results" stage="Vision Field Section Results" /><output type="text" name="Blood Pressure" stage="Blood Pressure" /><output type="text" name="Narrative" stage="Narrative" /><output type="text" name="Date Consent Given" stage="Date Consent Given" /><output type="flag" name="Concerns?" stage="Concerns?" /><output type="text" name="eDMER Item ID" stage="eDMER Item ID" /><output type="flag" name="Recommendations?" stage="Recommendations?" /><output type="flag" name="No  Available Items" stage="No  Available Items" /></outputs></stage><stage stageid="96c75a04-57ea-4ecd-810c-01d71afc6a49" name="Read eDMER from Queue and Extract Data" type="SubSheet"><narrative></narrative><displayx>0</displayx><displayy>-225</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="text" name="Fail Reason" friendlyname="Fail Reason" stage="Fail Reason" /><output type="flag" name="Success" friendlyname="Success" stage="Success" /><output type="collection" name="History Section Results" friendlyname="History Section Results" stage="History Section Results" /><output type="collection" name="Patient Information Section Results" friendlyname="Patient Information Section Results" stage="Patient Information Section Results" /><output type="collection" name="Reason For Examination and Class Section Results" friendlyname="Reason For Examination and Class Section Results" stage="Reason For Examination and Class Section Results" /><output type="collection" name="Vision Acuity Corrected Section Results" friendlyname="Vision Acuity Corrected Section Results" stage="Vision Acuity Corrected Section Results" /><output type="collection" name="Vision Acuity Uncorrected Section Results" friendlyname="Vision Acuity Uncorrected Section Results" stage="Vision Acuity Uncorrected Section Results" /><output type="collection" name="Vision Field Section Results" friendlyname="Vision Field Section Results" stage="Vision Field Section Results" /><output type="text" name="Blood Pressure" friendlyname="Blood Pressure" stage="Blood Pressure" /><output type="text" name="Narrative" friendlyname="Narrative" stage="Narrative" /><output type="text" name="Date Consent Given" friendlyname="Date Consent Given" stage="Date Consent Given" /><output type="flag" name="Concerns?" friendlyname="Concerns?" stage="Concerns?" /><output type="text" name="eDMER Item ID" friendlyname="eDMER Item ID" stage="eDMER Item ID" /><output type="flag" name="Recommendations?" friendlyname="Recommendations?" stage="Recommendations?" /><output type="flag" name="No  Available Items" friendlyname="No  Available Items" stage="No  Available Items" /></outputs><onsuccess>7849a4d6-c5e6-4927-81f9-9993a978c6b6</onsuccess><processid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</processid></stage><stage stageid="6b74f8cd-4cc6-4d96-a672-720c63d4cb19" name=":Get Next Itemn in the New eDMER Queue" type="Action"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue" expr="[Process eDMERs - New eDMER Queue]" /><input type="text" name="Key Filter" friendlyname="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" friendlyname="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="eDMER Item ID" /><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="eDMER Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="" /></outputs><onsuccess>4364aa2f-c4a4-484e-9446-7dc7fbeb3ac4</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="0b31cc15-de25-4005-8c5e-8a5165ad62bf" name="Process eDMERs - New eDMER Queue" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-540</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="f96e0b29-548f-44a4-8482-18e800ebbaab" name="Environment Variables" type="Block"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-645</displayx><displayy>-165</displayy><displaywidth>210</displaywidth><displayheight>375</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="50f130fa-3521-4e86-bbb8-c0cf74096dc0" name="Input Variables" type="Block"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-165</displayy><displaywidth>165</displaywidth><displayheight>375</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="639d3c0b-c5c1-46e0-bd2a-59032374f733" name="Runtime Variables" type="Block"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-645</displayx><displayy>240</displayy><displaywidth>390</displaywidth><displayheight>225</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="d7b083d1-5e49-455d-a547-f7349f5459de" name="Output Variables" type="Block"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-645</displayx><displayy>495</displayy><displaywidth>390</displaywidth><displayheight>330</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="1574af42-964e-4ce3-b202-090370b3e398" name="Process eDMERs - Results Queue" type="Data"><narrative></narrative><displayx>-660</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="76bac0b4-6f9c-45a9-9f51-8a194be13342" name="Environment Variables" type="Block"><narrative></narrative><displayx>-750</displayx><displayy>-60</displayy><displaywidth>225</displaywidth><displayheight>300</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="88312109-a008-44bc-8528-7da5867ad4ce" name="Input Variables" type="Block"><narrative></narrative><displayx>-495</displayx><displayy>-60</displayy><displaywidth>225</displaywidth><displayheight>300</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7af1fa81-9a8b-4ac2-b903-5f88e669080e" name="Runtime Variables" type="Block"><narrative></narrative><displayx>-750</displayx><displayy>270</displayy><displaywidth>480</displaywidth><displayheight>330</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3eb1fb11-4635-4360-b04d-0fa9bd84184e" name="Output Variables" type="Block"><narrative></narrative><displayx>-750</displayx><displayy>630</displayy><displaywidth>480</displaywidth><displayheight>180</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="995ab925-b98d-46df-a034-4101049ebb90" name="eDMER Item ID" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>300</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87a05563-25af-43ac-b1c6-7e1dba01bcb3" name="eDMER Data" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>300</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4364aa2f-c4a4-484e-9446-7dc7fbeb3ac4" name="eDMER available in the Queue?" type="Decision"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[eDMER Item ID] &lt;&gt; &quot;&quot;" /><ontrue>b7ee1628-7e24-4085-a725-818baf29fd43</ontrue><onfalse>53f591e3-6d7a-409e-8f26-c376bfe78163</onfalse></stage><stage stageid="64277f93-39bd-46a0-bcc7-4864fed48c3d" name="Anchor1" type="Anchor"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>360</displayx><displayy>150</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>5078026a-fb86-4a47-a63a-bf5064798b2d</onsuccess></stage><stage stageid="5078026a-fb86-4a47-a63a-bf5064798b2d" name="Anchor2" type="Anchor"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>360</displayx><displayy>960</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>740e701a-5c6e-4ba1-a422-a05260f2f5bf</onsuccess></stage><stage stageid="66469312-0d1f-42aa-b2f0-5c3d20c4c6f1" name="Anchor3" type="Anchor"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>960</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>740e701a-5c6e-4ba1-a422-a05260f2f5bf</onsuccess></stage><stage stageid="d1894aaa-bd4c-4e56-b4f7-25aaf94bf628" name="Loop Through the Resources" type="LoopStart"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>300</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>d0e8fc8b-502c-4db8-a30a-1490f628fc8b</onsuccess><groupid>4546bb16-0598-40a4-a4e4-de6f33a12278</groupid><looptype>ForEach</looptype><loopdata>eDMER Resources Collection</loopdata></stage><stage stageid="68e42ed1-806a-4d45-86ee-9d5fb31c17b3" name="Loop Through the Resources" type="LoopEnd"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>555</displayy><displaywidth>300</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>2adbe6ca-65c4-470f-95c6-f6d69d30a86f</onsuccess><groupid>4546bb16-0598-40a4-a4e4-de6f33a12278</groupid></stage><stage stageid="b7ee1628-7e24-4085-a725-818baf29fd43" name="Read the eDMER Bundle" type="Calculation"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>d1894aaa-bd4c-4e56-b4f7-25aaf94bf628</onsuccess><calculation expression="[eDMER Data.entry]" stage="eDMER Resources Collection" /></stage><stage stageid="172beec4-49aa-45a7-abaf-edbdc726cb6d" name="eDMER Resources Collection" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-375</displayx><displayy>300</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d0e8fc8b-502c-4db8-a30a-1490f628fc8b" name="Extract Resource" type="Calculation"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>300</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a841a816-1ddd-410f-a521-82a0e050f4d9</onsuccess><calculation expression="[eDMER Resources Collection.JSON:Array.resource]" stage="Temp Resource Collection" /></stage><stage stageid="bdd5cd93-0587-466a-b369-22988f143135" name="Temp Resource Collection" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>375</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a841a816-1ddd-410f-a521-82a0e050f4d9" name="Questionnaire Resource ?" type="Decision"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>405</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Resource Collection.resourceType]), Upper(&quot;QuestionnaireResponse&quot;)) &lt;&gt; 0" /><ontrue>158e95c0-852e-4eac-b7b9-55bef7a5de4f</ontrue><onfalse>68e42ed1-806a-4d45-86ee-9d5fb31c17b3</onfalse></stage><stage stageid="158e95c0-852e-4eac-b7b9-55bef7a5de4f" name="Anchor5" type="Anchor"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>405</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e068a8c3-477c-4e17-9887-96d027425ee6</onsuccess></stage><stage stageid="5f487251-fda1-4e82-a4a2-c240fa28bc6a" name="Extract Data From Questionnaire" type="SubSheetInfo"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>-255</displayy><displaywidth>330</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="e04cee94-8b18-478c-8aee-b9ec13856dc2" name="Start" type="Start"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-300</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Resource" stage="Resource" /></inputs><onsuccess>3341ed63-98ef-48bf-8d57-537a8482c25e</onsuccess></stage><stage stageid="ca99233a-3c6d-4158-938f-6398e06fb01d" name="End" type="End"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>1380</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="History Section Results" stage="History Section Results" /><output type="collection" name="Patient Information Section Results" stage="Patient Information Section Results" /><output type="collection" name="Reason For Examination and Class Section Results" stage="Reason For Examination and Class Section Results" /><output type="collection" name="Vision Acuity Corrected Section Results" stage="Vision Acuity Corrected Section Results" /><output type="collection" name="Vision Acuity Uncorrected Section Results" stage="Vision Acuity Uncorrected Section Results" /><output type="collection" name="Vision Field Section Results" stage="Vision Field Section Results" /><output type="text" name="Blood Pressure" stage="Blood Pressure" /><output type="flag" name="Concerns?" stage="Concerns?" /><output type="text" name="Date Consent Given" stage="Date Consent Given" /><output type="text" name="Narrative" stage="Narrative" /><output type="flag" name="Recommendations?" stage="Recommendations?" /></outputs></stage><stage stageid="e068a8c3-477c-4e17-9887-96d027425ee6" name="Extract Data From Questionnaire" type="SubSheet"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>690</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Resource" friendlyname="Resource" expr="[Temp Resource Collection]" /></inputs><outputs><output type="collection" name="History Section Results" friendlyname="History Section Results" stage="History Section Results" /><output type="collection" name="Patient Information Section Results" friendlyname="Patient Information Section Results" stage="Patient Information Section Results" /><output type="collection" name="Reason For Examination and Class Section Results" friendlyname="Reason For Examination and Class Section Results" stage="Reason For Examination and Class Section Results" /><output type="collection" name="Vision Acuity Corrected Section Results" friendlyname="Vision Acuity Corrected Section Results" stage="Vision Acuity Corrected Section Results" /><output type="collection" name="Vision Acuity Uncorrected Section Results" friendlyname="Vision Acuity Uncorrected Section Results" stage="Vision Acuity Uncorrected Section Results" /><output type="collection" name="Vision Field Section Results" friendlyname="Vision Field Section Results" stage="Vision Field Section Results" /><output type="text" name="Blood Pressure" friendlyname="Blood Pressure" stage="Blood Pressure" /><output type="flag" name="Concerns?" friendlyname="Concerns?" stage="Concerns?" /><output type="text" name="Date Consent Given" friendlyname="Date Consent Given" stage="Date Consent Given" /><output type="text" name="Narrative" friendlyname="Narrative" stage="Narrative" /><output type="flag" name="Recommendations?" friendlyname="Recommendations?" stage="Recommendations?" /></outputs><onsuccess>66469312-0d1f-42aa-b2f0-5c3d20c4c6f1</onsuccess><processid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</processid></stage><stage stageid="c2da217b-51f9-4f6f-bf9c-f75b9b95818f" name="Resource" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f40e8484-e1a5-484f-a0e1-1adc114b09c2" name="Loop Through the Questionnaire Items" type="LoopStart"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-150</displayy><displaywidth>300</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>d2613138-2edc-48d5-a7aa-068e4dd6c4d6</onsuccess><groupid>bbf1209a-d440-4b16-a3ed-8b2e6f1867a2</groupid><looptype>ForEach</looptype><loopdata>Questionnaire Items</loopdata></stage><stage stageid="533b10bf-012b-4bb8-b90d-205c4d5e79d1" name="Loop Through the Questionnaire Items" type="LoopEnd"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>1275</displayy><displaywidth>300</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>ca99233a-3c6d-4158-938f-6398e06fb01d</onsuccess><groupid>bbf1209a-d440-4b16-a3ed-8b2e6f1867a2</groupid></stage><stage stageid="d2613138-2edc-48d5-a7aa-068e4dd6c4d6" name="Extract Item" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f1687cec-c1fb-41d1-b55d-eecb4c1ed414</onsuccess><calculation expression="[Questionnaire Items.JSON:Array]" stage="Temp Item Collection" /></stage><stage stageid="3341ed63-98ef-48bf-8d57-537a8482c25e" name="Read the questionnaire items" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-225</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f40e8484-e1a5-484f-a0e1-1adc114b09c2</onsuccess><calculation expression="[Resource.item]" stage="Questionnaire Items" /></stage><stage stageid="e77485bf-5856-4e56-a054-89c5fc1b394d" name="Questionnaire Items" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>255</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="908715ce-6705-41c7-94c6-1ae57f41fc99" name="Temp Item Collection" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>255</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5ff58168-a63c-4b99-84fa-49e06cd8b114" name="Success" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a0968a07-bf14-4656-b275-0ceff513b6dd" name="Fail Reason" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2adbe6ca-65c4-470f-95c6-f6d69d30a86f" name="Set Output Fields" type="MultipleCalculation"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>15</displayx><displayy>690</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>740e701a-5c6e-4ba1-a422-a05260f2f5bf</onsuccess><steps><calculation expression="&quot;Questionnaire Resource Not Found In Bundle&quot;" stage="Fail Reason" /><calculation expression="False" stage="Success" /></steps></stage><stage stageid="9e533055-e87b-4dce-92a4-3c3395efc7d7" name="Success" type="Data"><narrative></narrative><displayx>-690</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b5e65d3c-0bd3-49f1-9dae-c54d7236f7d4" name="Fail Reason" type="Data"><narrative></narrative><displayx>-600</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f1687cec-c1fb-41d1-b55d-eecb4c1ed414" name="Resource Item Has information?" type="Action"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>45</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" friendlyname="Input Collection" narrative="The collection to check." expr="[Temp Item Collection]" /><input type="text" name="Field" friendlyname="Field" narrative="The field to check for." expr="&quot;item&quot;" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the collection contains the field." stage="Has Rows?" /></outputs><onsuccess>907d5ed8-106e-402f-97e7-88c8187f067b</onsuccess><resource object="Utility - Collection Manipulation" action="Field Exists" /></stage><stage stageid="0a1e2539-5d3a-40e4-a766-ccf7d8d876e8" name="Has Rows?" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>345</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="907d5ed8-106e-402f-97e7-88c8187f067b" name="Has Information?" type="Decision"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>75</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Has Rows?]" /><ontrue>d59c78b4-62e6-49f3-98b4-4e67fd132aa3</ontrue><onfalse>b6935841-551e-412c-abfb-21def87e555b</onfalse></stage><stage stageid="5006bc67-38a9-4859-a99f-df3ed70e0018" name="Environment Variables" type="Block"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-390</displayx><displayy>-150</displayy><displaywidth>150</displaywidth><displayheight>300</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="212132f7-e2a1-44cf-a0d9-77ddc73555cb" name="Input Variables" type="Block"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>-150</displayy><displaywidth>165</displaywidth><displayheight>300</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="b721d15b-61c1-4149-8770-4a31b63c91fa" name="Runtime Variables" type="Block"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>180</displayy><displaywidth>330</displaywidth><displayheight>390</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="496b9610-06b4-43ba-976c-b375b38b4cd9" name="Output Variables" type="Block"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>600</displayy><displaywidth>345</displaywidth><displayheight>330</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="85150430-9588-4422-a639-367424ff05c2" name="Extract Data From Resource Item" type="SubSheetInfo"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-150</displayy><displaywidth>420</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c9043d36-5dc2-4fac-aa58-d6e609fa2761" name="Start" type="Start"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-450</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Resource Item Collection" stage="Resource Item Collection" /></inputs><onsuccess>4db43db6-cebf-45dc-84c5-cbd5c3966711</onsuccess></stage><stage stageid="134bcab1-c70a-42a3-a0f6-0ec2d581fbae" name="End" type="End"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>1290</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="text" name="Section Name" stage="Section Name" /><output type="collection" name="Extracted Data Collection" stage="Extracted Data Collection" /><output type="flag" name="Extracted Data Flag" stage="Extracted Data Flag" /><output type="text" name="Extracted Data Text" stage="Extracted Data Text" /></outputs></stage><stage stageid="d59c78b4-62e6-49f3-98b4-4e67fd132aa3" name="Extract Data From Resource Item" type="SubSheet"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>180</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Resource Item Collection" friendlyname="Resource Item Collection" expr="[Temp Item Collection]" /></inputs><outputs><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /><output type="collection" name="Extracted Data Collection" friendlyname="Extracted Data Collection" stage="Extracted Data Collection" /><output type="flag" name="Extracted Data Flag" friendlyname="Extracted Data Flag" stage="Extracted Data Flag" /><output type="text" name="Extracted Data Text" friendlyname="Extracted Data Text" stage="Extracted Data Text" /></outputs><onsuccess>cb7ea5f6-ca46-4d21-87a2-0ca4e2053872</onsuccess><processid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</processid></stage><stage stageid="4db43db6-cebf-45dc-84c5-cbd5c3966711" name="Which Form Section?" type="ChoiceStart"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-345</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>5b43ff90-1d07-42e1-90b2-d4694f700555</groupid><choices><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Patient Panel LinkId]"><name>Patient Information Section?</name><distance>105</distance><ontrue>1de75dc0-8244-4aa6-8f31-e04cfda52e35</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Date Consent and Cert Given - Section LinkId]"><name>Date Consent and Cert Given Section?</name><distance>180</distance><ontrue>2fd05475-8012-4b54-b054-ee99974694c2</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Details - Narrative Section LinkId]"><name>Narrative Section?</name><distance>255</distance><ontrue>f61b36be-60a6-4b40-86eb-c083387fa8c4</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Cardiovascular Section LinkId]"><name>History Cardiovascular Section?</name><distance>330</distance><ontrue>00bcc3ed-0947-4760-981c-ee2d1e3fc308</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-CNS Section LinkId]"><name>History CNS Section?</name><distance>405</distance><ontrue>b461f6c4-e630-4f0e-b105-f6d5d83a430d</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Drugs and Alcohol Section LinkId]"><name>History Drugs and Alcohol Section?</name><distance>480</distance><ontrue>a3055411-de22-4220-a4a4-5ad25242f114</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Endocrine Section LinkId]"><name>History Endocrine Section?</name><distance>555</distance><ontrue>31443827-426e-429a-ba4f-0e0c552dc919</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Hearing Section LinkId]"><name>History Hearing Section?</name><distance>630</distance><ontrue>17aa59cd-628a-454d-a3d4-fdec72935497</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Musculoskeletal Section LinkId]"><name>History Musculoskeletal Section?</name><distance>705</distance><ontrue>e80359e3-8622-4299-9b31-31ac58ab88aa</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Other Conditions Section LinkId]"><name>History Other Conditions Section?</name><distance>780</distance><ontrue>23513950-1d6f-4184-8254-936d997ea287</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Psychiatric Section LinkId]"><name>History Psychiatric Section?</name><distance>855</distance><ontrue>5563cf0b-3714-4b21-88ee-9eb24b9f4991</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Respiratory Section LinkId]"><name>History Respiratory Section?</name><distance>930</distance><ontrue>387341cc-d6d2-4cb4-a495-677f8afda134</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - History-Vision Section LinkId]"><name>History Vision Section?</name><distance>1005</distance><ontrue>fbe0d1b0-60ef-413f-9298-90f9820ba2de</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Opinion Section LinkId]"><name>Opinion Section?</name><distance>1080</distance><ontrue>bf9b423c-bfa7-45f6-b8a8-8046c43fcc88</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Reason For Examination and Class Panel LinkId]"><name>Reason For Examination Section?</name><distance>1155</distance><ontrue>4f75b694-495c-438a-8207-ce022123cb58</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Recommendation Section LinkId]"><name>Recommendation Section?</name><distance>1230</distance><ontrue>30becaf8-9ae1-4103-ba58-a1946ac64344</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Vision&amp;Physical-Visual Field Section LinkId]"><name>Vision Field Section?</name><distance>1305</distance><ontrue>f763b92d-2f36-46d4-bed3-afaf7fb0b9a2</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Vision&amp;Physical-Blood Pressure Section LinkId]"><name>Blood Pressure Section?</name><distance>1380</distance><ontrue>427a460d-3a27-4a9a-9679-542de58fb373</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Vision&amp;Physical-Vis Acuity Uncrctd Sect LinkId]"><name>Vision Acuity Uncorrected Section?</name><distance>1455</distance><ontrue>088ac55d-4869-46eb-a8a8-7f949b51e610</ontrue></choice><choice expression="[Resource Item Collection.linkId] = [Process eDMERs - Vision&amp;Physical-Visual Acuity Crctd Sect LinkId]"><name>Vision Acuity Corrected Section?</name><distance>1530</distance><ontrue>9624649b-8f38-4391-9013-5fa6048c3f1e</ontrue></choice></choices></stage><stage stageid="4e78dc0c-da61-4282-ab4e-9d7ea3652c5b" name="Undefined Section?" type="ChoiceEnd"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>1215</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>134bcab1-c70a-42a3-a0f6-0ec2d581fbae</onsuccess><groupid>5b43ff90-1d07-42e1-90b2-d4694f700555</groupid></stage><stage stageid="c41bfef6-fc32-4106-85a9-4ca94d5e14aa" name="Environment Variables" type="Block"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-630</displayx><displayy>120</displayy><displaywidth>420</displaywidth><displayheight>480</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="b7f7c5fd-4129-404f-8455-e755c16bd1c9" name="Process eDMERs - Details - Narrative Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>150</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="0d660d8f-41ac-4659-a13c-c0f6763879ff" name="Process eDMERs - History-Cardiovascular Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>240</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="ab0da83f-7461-461a-afcd-7ee9c9b33bdd" name="Process eDMERs - History-CNS Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>195</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="741cf2ee-1117-45fb-a3bb-6cb02f8b35e7" name="Process eDMERs - History-Drugs and Alcohol Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>330</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="7d868dad-fb64-43ff-a67f-9f8f95b09547" name="Process eDMERs - History-Endocrine Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>465</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="c7622fce-8ef8-4f80-b2a3-90fc55c78ecf" name="Process eDMERs - History-Hearing Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>510</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="7c09bbe2-f390-4f89-8142-87ea60b1012f" name="Process eDMERs - History-Musculoskeletal Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>285</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="1aed10b9-0732-4cdd-8887-9a2578b0521b" name="Process eDMERs - History-Other Conditions Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>375</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="1939d422-e923-4b56-ab22-12a950f77a64" name="Process eDMERs - History-Psychiatric Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>420</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="1a975c96-34fe-4a00-8f9f-06d74d952a90" name="Process eDMERs - History-Respiratory Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>555</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="709c0911-2493-4966-b0b0-69e46660f706" name="Process eDMERs - History-Vision Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>150</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="4a173282-bff0-4e77-9c51-da9342c0573e" name="Process eDMERs - Opinion Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>195</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="d7422999-a2d8-462f-a90c-ee41276184f5" name="Process eDMERs - Patient Panel LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>240</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="3dd633ca-b78b-4b4f-98df-e779aca77e56" name="Process eDMERs - Reason For Examination and Class Panel LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>285</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="43e18d50-193b-434c-bce8-41c90fe3d9dc" name="Process eDMERs - Recommendation Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>330</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="0ed002f0-545f-418e-a522-a06317f63a9e" name="Process eDMERs - Vision&amp;Physical-Blood Pressure Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>375</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="1d0ef904-17ac-423e-9c4a-f086fa285903" name="Process eDMERs - Vision&amp;Physical-Vis Acuity Uncrctd Sect LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>420</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="8e62b66c-dd4b-4069-b9d7-87e4b9b3e0cc" name="Process eDMERs - Vision&amp;Physical-Visual Acuity Crctd Sect LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>465</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="0efb9f96-749d-4dac-a66b-95afef066728" name="Process eDMERs - Vision&amp;Physical-Visual Field Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>510</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="3e1a51fa-0c77-4598-b02c-f16bb155ceac" name="Process eDMERs - Date Consent and Cert Given - Section LinkId" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>555</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="126c4896-ef4a-4228-bb13-e2b1e59a0a9e" name="Input Variables" type="Block"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-630</displayx><displayy>-75</displayy><displaywidth>420</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6eca5587-7cc1-4555-824d-c8d74b99a7b8" name="Resource Item Collection" type="Collection"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="26a5bbb9-2830-45af-92d8-96b7b1df4ee4" name="History Section Results" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>660</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision" type="flag" /><field name="CNS" type="flag" /><field name="Cardiovascular" type="flag" /><field name="Musculosketel" type="flag" /><field name="Drugs and Alcohol" type="flag" /><field name="Other Conditions" type="flag" /><field name="Psychiatric" type="flag" /><field name="Endocrine" type="flag" /><field name="Hearing" type="flag" /><field name="Respiratory" type="flag" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision" type="flag" value="False" /><field name="CNS" type="flag" value="False" /><field name="Cardiovascular" type="flag" value="False" /><field name="Musculosketel" type="flag" value="False" /><field name="Drugs and Alcohol" type="flag" value="False" /><field name="Other Conditions" type="flag" value="False" /><field name="Psychiatric" type="flag" value="False" /><field name="Endocrine" type="flag" value="False" /><field name="Hearing" type="flag" value="False" /><field name="Respiratory" type="flag" value="False" /></row></initialvalue></stage><stage stageid="cb7ea5f6-ca46-4d21-87a2-0ca4e2053872" name="Which Section?" type="ChoiceStart"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>255</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>c3b9c062-f5b6-479d-b887-239c6aa32fd0</groupid><choices><choice expression="[Section Name]=&quot;History Cardiovascular&quot;"><name>History Cardiovascular Section?</name><distance>30</distance><ontrue>88f76528-9cb3-4547-a46e-1cb498d09b25</ontrue></choice><choice expression="[Section Name]=&quot;History CNS&quot;"><name>History CNS Section?</name><distance>75</distance><ontrue>7f973336-00b7-4181-82aa-3a19049479b4</ontrue></choice><choice expression="[Section Name]=&quot;History Drugs and Alcohol&quot;"><name>History Drugs and Alcohol Section?</name><distance>120</distance><ontrue>e29a59f6-6303-4464-9b93-8bd91f4c5534</ontrue></choice><choice expression="[Section Name]=&quot;History Endocrine&quot;"><name>History Endocrine Section?</name><distance>165</distance><ontrue>9424e922-5804-4360-85b1-55e81564c76e</ontrue></choice><choice expression="[Section Name]=&quot;History Hearing&quot;"><name>History Hearing Section?</name><distance>210</distance><ontrue>67856249-4786-46c7-8fa6-4c136b1342b3</ontrue></choice><choice expression="[Section Name]=&quot;History Muskulosketal&quot;"><name>History Musculoskeletal Section?</name><distance>255</distance><ontrue>a242c3a3-07a4-4915-84f0-f305b659529f</ontrue></choice><choice expression="[Section Name]=&quot;History Other&quot;"><name>History Other Conditions Section?</name><distance>300</distance><ontrue>b07f94e2-a5eb-4366-a498-765e61804bc8</ontrue></choice><choice expression="[Section Name]=&quot;History Psychiatric&quot;"><name>History Psychiatric Section?</name><distance>345</distance><ontrue>f9fec530-84d6-4b20-82fd-e3f97b6462c2</ontrue></choice><choice expression="[Section Name]=&quot;History Respiratory&quot;"><name>History Respiratory Section?</name><distance>392.1429</distance><ontrue>ee9035a9-fa3c-41de-b873-2e844f957241</ontrue></choice><choice expression="[Section Name]=&quot;History Vision&quot;"><name>History Vision Section?</name><distance>435.714355</distance><ontrue>48b77a25-85fd-44f5-9d11-f16393b3fc4f</ontrue></choice><choice expression="[Section Name]=&quot;Opinion&quot;"><name>Opinion Section?</name><distance>479.2858</distance><ontrue>f0bbf48c-49f1-436d-9a01-cc80dde7efd1</ontrue></choice><choice expression="[Section Name]=&quot;Patient Information&quot;"><name>Patient Information Section?</name><distance>522.857239</distance><ontrue>d8569810-8890-48cd-8349-d6ac448f3213</ontrue></choice><choice expression="[Section Name]=&quot;Vision Field&quot;"><name>Vision Field Section?</name><distance>570</distance><ontrue>047b1a91-b03c-4f40-83ab-9a65fa818879</ontrue></choice><choice expression="[Section Name]=&quot;Blood Pressure&quot;"><name>Blood Pressure Section?</name><distance>615</distance><ontrue>4bacfb78-f949-417f-92e3-8d2345afa2b4</ontrue></choice><choice expression="[Section Name]=&quot;Vision Acuity Uncorrected&quot;"><name>Vision Acuity Uncorrected Section?</name><distance>660</distance><ontrue>57e85150-ef57-4682-aaf0-5388e911b12f</ontrue></choice><choice expression="[Section Name]=&quot;Vision Acuity Corrected&quot;"><name>Vision Acuity Corrected Section?</name><distance>705</distance><ontrue>1e6fe7dd-82a9-4ade-9413-3d0bc7b5fbdd</ontrue></choice><choice expression="[Section Name]=&quot;Recommendation&quot;"><name>Recommendation Section?</name><distance>750</distance><ontrue>ad27ade7-66e0-4184-a718-7ba4de3a7e8b</ontrue></choice><choice expression="[Section Name]=&quot;Reason and Class&quot;"><name>Reason for Examination and Class Section?</name><distance>795</distance><ontrue>8dbd5523-69eb-4a53-bb04-49f941534cf9</ontrue></choice><choice expression="[Section Name]=&quot;Date Consent&quot;"><name>Date Consent and Certification Given Section?</name><distance>840</distance><ontrue>e2280e97-1787-4bd7-9ef4-0b5bbccce93c</ontrue></choice><choice expression="[Section Name]=&quot;Narrative&quot;"><name>Narrative Section?</name><distance>885</distance><ontrue>c861d330-1d37-4b54-8cd9-63961fa94ee2</ontrue></choice></choices></stage><stage stageid="6305e0bf-7322-4100-a006-367bf34ed59a" name="Undefined Section?" type="ChoiceEnd"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>45</displayx><displayy>1170</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>533b10bf-012b-4bb8-b90d-205c4d5e79d1</onsuccess><groupid>c3b9c062-f5b6-479d-b887-239c6aa32fd0</groupid></stage><stage stageid="8eb45bba-eff5-4bce-b79e-edf03e01d873" name="Section Name" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4f528e-abd1-4676-9cb3-b3311bbef917" name="Extracted Data Collection" type="Collection"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-450</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d7ba3de2-00e9-4bc2-86cf-f7a3c3db7daa" name="Extracted Data Flag" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>765</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d5bdcfa9-0043-473a-8bdf-0face4467d7c" name="Extracted Data Text" type="Data"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-450</displayx><displayy>765</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">""</initialvalue><private /><alwaysinit /></stage><stage stageid="21b8935a-4580-43ca-93fb-9dda6c11deee" name="Extract Patient Information" type="SubSheetInfo"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="345c9907-1686-4cdb-826e-1e5a87a1750a" name="Start" type="Start"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Patient Information" stage="Patient Information" /></inputs><onsuccess>af592fb7-c22a-4f69-a8e1-eaf71dea9c0c</onsuccess></stage><stage stageid="46ac3829-183f-440e-91d5-5e5792bdca07" name="End" type="End"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>360</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="Extracted Patient Data" stage="Extracted Data" /><output type="text" name="Section Name" stage="Section Name" /><output type="text" name="Extracted Data Text" stage="Extracted Data Text" /><output type="flag" name="Extracted Data Flag" stage="Extracted Data Flag" /></outputs></stage><stage stageid="1de75dc0-8244-4aa6-8f31-e04cfda52e35" name="Extract Patient Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-240</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Patient Information" friendlyname="Patient Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="collection" name="Extracted Patient Data" friendlyname="Extracted Patient Data" stage="Extracted Data Collection" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /><output type="text" name="Extracted Data Text" friendlyname="Extracted Data Text" stage="Extracted Data Text" /><output type="flag" name="Extracted Data Flag" friendlyname="Extracted Data Flag" stage="Extracted Data Flag" /></outputs><onsuccess>932b1eb7-5237-4d7f-9a21-7a535a2aec8a</onsuccess><processid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</processid></stage><stage stageid="48ed193e-ef15-4e68-b1e7-9d56ed89c83b" name="Patient Information" type="Collection"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="e6c9d6e5-be69-4734-a25c-fd68e1f4bcc6" name="Look For Information To Extract" type="LoopStart"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>180</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>4a3314e1-f4ff-4bcb-80d8-326118fecd46</onsuccess><groupid>5648cb93-a362-4f95-81b6-309e49df1f00</groupid><looptype>ForEach</looptype><loopdata>Patient Collection</loopdata></stage><stage stageid="457fca10-cb92-47c8-8348-13edad9c33c4" name="Look For Information To Extract" type="LoopEnd"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>270</displayy><displaywidth>180</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>46ac3829-183f-440e-91d5-5e5792bdca07</onsuccess><groupid>5648cb93-a362-4f95-81b6-309e49df1f00</groupid></stage><stage stageid="69bb1177-c05a-4b07-b0d2-044783e372d1" name="Extracted Data" type="Collection"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="DateOfBirth-text" type="text" /><field name="DateOfBirth-date" type="date" /><field name="Age" type="number" /></collectioninfo><initialvalue><singlerow /><row><field name="DateOfBirth-text" type="text" value="" /><field name="DateOfBirth-date" type="date" value="" /><field name="Age" type="number" value="" /></row></initialvalue></stage><stage stageid="f18c750e-19f2-4d43-9b50-3ebecfc3e707" name="Date Of Birth Row?" type="Decision"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Patient Collection Row.linkId]), Upper([Process eDMERs - Date Of Birth Keyword])) &lt;&gt; 0" /><ontrue>4e99a4bf-8220-4bb9-b285-5c5b9cfc28d0</ontrue><onfalse>457fca10-cb92-47c8-8348-13edad9c33c4</onfalse></stage><stage stageid="af592fb7-c22a-4f69-a8e1-eaf71dea9c0c" name="Extract Item" type="Calculation"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>e6c9d6e5-be69-4734-a25c-fd68e1f4bcc6</onsuccess><calculation expression="[Patient Information.item]" stage="Patient Collection" /></stage><stage stageid="153d0838-3db8-4bfb-957a-384d9dd09940" name="Patient Collection" type="Collection"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4a3314e1-f4ff-4bcb-80d8-326118fecd46" name="Read Row" type="Calculation"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f18c750e-19f2-4d43-9b50-3ebecfc3e707</onsuccess><calculation expression="[Patient Collection.JSON:Array]" stage="Temp Patient Collection Row" /></stage><stage stageid="0606f771-d644-4262-beed-b5c52e4f14ed" name="Temp Patient Collection Row" type="Collection"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5a93314f-92dc-4f65-be77-aa7e22f1e530" name="Process eDMERs - Date Of Birth Keyword" type="Data"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="4e99a4bf-8220-4bb9-b285-5c5b9cfc28d0" name="Extract DOB and age" type="MultipleCalculation"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>195</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>cbc94966-ac94-4103-a724-81962d9f77a2</onsuccess><steps><calculation expression="[Temp Patient Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.DateOfBirth-text" /><calculation expression="ToDate([Extracted Data.DateOfBirth-text])" stage="Extracted Data.DateOfBirth-date" /><calculation expression="DateDiff(0, [Extracted Data.DateOfBirth-date], Today())" stage="Extracted Data.Age" /></steps></stage><stage stageid="cbc94966-ac94-4103-a724-81962d9f77a2" name="Anchor4" type="Anchor"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>195</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>46ac3829-183f-440e-91d5-5e5792bdca07</onsuccess></stage><stage stageid="8b6ffd24-a0d2-4d08-ba25-b131ed591f93" name="Input Variables" type="Block"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1174383a-41f1-4816-a6ff-5fb5bbcedb94" name="Runtime Variables" type="Block"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>150</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="be959f50-c47b-4429-a9cb-ac5c2717f285" name="Output Variables" type="Block"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>330</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5eb28fa6-51d2-4bad-8bca-e6cefd7a3465" name="Environment Variables" type="Block"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2a0be49e-7faa-44b7-a462-991ed7821b35" name="Patient Information Section Results" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>660</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="DateOfBirth-text" type="text" /><field name="DateOfBirth-date" type="date" /><field name="Age" type="number" /></collectioninfo><initialvalue><singlerow /><row><field name="DateOfBirth-text" type="text" value="" /><field name="DateOfBirth-date" type="date" value="" /><field name="Age" type="number" value="" /></row></initialvalue></stage><stage stageid="de9dc88f-e6f0-47a3-a5e2-811636f4ce3e" name="Section Name" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>525</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ef97811-92ca-4084-98a1-8b5642758c82" name="Extracted Data Collection" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>360</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7a8645ff-d5cd-4375-8762-1b91def3712d" name="Extracted Data Flag" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>435</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="497568e8-b69e-46f4-a378-ea808fc16687" name="Extracted Data Text" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>450</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="88f76528-9cb3-4547-a46e-1cb498d09b25" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>650cc48f-74be-471d-b210-a14bafe5a28f</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Cardiovascular" /></stage><stage stageid="7f973336-00b7-4181-82aa-3a19049479b4" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>330</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>7572abb0-aaf0-4f83-949f-f49147d14a87</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.CNS" /></stage><stage stageid="e29a59f6-6303-4464-9b93-8bd91f4c5534" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>375</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>2fd49d62-d6dc-4372-a1db-8cd53a5e7d74</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Drugs and Alcohol" /></stage><stage stageid="9424e922-5804-4360-85b1-55e81564c76e" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>420</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>33f9a375-1415-4743-a868-03772dc798fb</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Endocrine" /></stage><stage stageid="67856249-4786-46c7-8fa6-4c136b1342b3" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>465</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>7ac1d753-ade1-4498-957d-841016b3ac85</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Hearing" /></stage><stage stageid="a242c3a3-07a4-4915-84f0-f305b659529f" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>510</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>3d373a6d-5351-4548-aaef-bff6087954b8</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Musculosketel" /></stage><stage stageid="b07f94e2-a5eb-4366-a498-765e61804bc8" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>555</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>9b67fbb2-f221-448b-b27d-58ee3338be3f</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Other Conditions" /></stage><stage stageid="650cc48f-74be-471d-b210-a14bafe5a28f" name="Anchor6" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>285</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>7572abb0-aaf0-4f83-949f-f49147d14a87</onsuccess></stage><stage stageid="7572abb0-aaf0-4f83-949f-f49147d14a87" name="Anchor7" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>330</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>2fd49d62-d6dc-4372-a1db-8cd53a5e7d74</onsuccess></stage><stage stageid="2fd49d62-d6dc-4372-a1db-8cd53a5e7d74" name="Anchor8" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>375</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>33f9a375-1415-4743-a868-03772dc798fb</onsuccess></stage><stage stageid="33f9a375-1415-4743-a868-03772dc798fb" name="Anchor9" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>420</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>7ac1d753-ade1-4498-957d-841016b3ac85</onsuccess></stage><stage stageid="7ac1d753-ade1-4498-957d-841016b3ac85" name="Anchor10" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>465</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>3d373a6d-5351-4548-aaef-bff6087954b8</onsuccess></stage><stage stageid="3d373a6d-5351-4548-aaef-bff6087954b8" name="Anchor11" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>510</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>9b67fbb2-f221-448b-b27d-58ee3338be3f</onsuccess></stage><stage stageid="9b67fbb2-f221-448b-b27d-58ee3338be3f" name="Anchor12" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>555</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>c9fdfd5f-c3c6-411c-9526-5cbbccd200f7</onsuccess></stage><stage stageid="c9fdfd5f-c3c6-411c-9526-5cbbccd200f7" name="Anchor13" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>600</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>8937a598-21f4-4f0f-a539-b9ff98d2b67d</onsuccess></stage><stage stageid="8937a598-21f4-4f0f-a539-b9ff98d2b67d" name="Anchor14" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>645</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>fb8a0069-70fd-4f08-b648-8941039d0715</onsuccess></stage><stage stageid="fb8a0069-70fd-4f08-b648-8941039d0715" name="Anchor15" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>690</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="0000FF" /><onsuccess>7d7f72b7-7481-4cba-9425-4c969e182b2d</onsuccess></stage><stage stageid="7d7f72b7-7481-4cba-9425-4c969e182b2d" name="Anchor16" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>735</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>25366640-3bc1-49d9-b31d-bb38789dd9cf</onsuccess></stage><stage stageid="f1a90d22-eb28-4443-8759-e9c103f4aab5" name="Anchor17" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>825</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>1693b8f2-edb0-48f8-83c2-b3589fb4234b</onsuccess></stage><stage stageid="1693b8f2-edb0-48f8-83c2-b3589fb4234b" name="Anchor18" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>870</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>dbbde2d7-777c-4693-ada1-f1f277a9f452</onsuccess></stage><stage stageid="25366640-3bc1-49d9-b31d-bb38789dd9cf" name="Anchor19" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>780</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>f1a90d22-eb28-4443-8759-e9c103f4aab5</onsuccess></stage><stage stageid="dbbde2d7-777c-4693-ada1-f1f277a9f452" name="Anchor20" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>915</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>558489a9-8285-4359-836c-f361bf61f7f9</onsuccess></stage><stage stageid="558489a9-8285-4359-836c-f361bf61f7f9" name="Anchor21" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>960</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>82b82cb9-acf0-434e-9a66-ce10ab25a727</onsuccess></stage><stage stageid="82b82cb9-acf0-434e-9a66-ce10ab25a727" name="Anchor22" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>1005</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>4104f795-6258-42fe-aff5-a1fa745be65f</onsuccess></stage><stage stageid="e5c50b33-d91d-4d5e-9103-ad337b770066" name="Anchor23" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>1095</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>0bad5f48-0a33-4876-961e-1657fb4069e3</onsuccess></stage><stage stageid="0bad5f48-0a33-4876-961e-1657fb4069e3" name="Anchor24" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>1140</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>18a82be1-4bdb-47fd-b349-d5c6744ee320</onsuccess></stage><stage stageid="4104f795-6258-42fe-aff5-a1fa745be65f" name="Anchor25" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>1050</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>e5c50b33-d91d-4d5e-9103-ad337b770066</onsuccess></stage><stage stageid="f9fec530-84d6-4b20-82fd-e3f97b6462c2" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>600</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>c9fdfd5f-c3c6-411c-9526-5cbbccd200f7</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Psychiatric" /></stage><stage stageid="ee9035a9-fa3c-41de-b873-2e844f957241" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>645</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>8937a598-21f4-4f0f-a539-b9ff98d2b67d</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Respiratory" /></stage><stage stageid="48b77a25-85fd-44f5-9d11-f16393b3fc4f" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>690</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fb8a0069-70fd-4f08-b648-8941039d0715</onsuccess><calculation expression="[Extracted Data Flag]" stage="History Section Results.Vision" /></stage><stage stageid="f0bbf48c-49f1-436d-9a01-cc80dde7efd1" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>735</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>7d7f72b7-7481-4cba-9425-4c969e182b2d</onsuccess><calculation expression="[Extracted Data Flag]" stage="Concerns?" /></stage><stage stageid="d8569810-8890-48cd-8349-d6ac448f3213" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>780</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>25366640-3bc1-49d9-b31d-bb38789dd9cf</onsuccess><calculation expression="[Extracted Data Collection]" stage="Patient Information Section Results" /></stage><stage stageid="047b1a91-b03c-4f40-83ab-9a65fa818879" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>825</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f1a90d22-eb28-4443-8759-e9c103f4aab5</onsuccess><calculation expression="[Extracted Data Collection]" stage="Vision Field Section Results" /></stage><stage stageid="4bacfb78-f949-417f-92e3-8d2345afa2b4" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>870</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>1693b8f2-edb0-48f8-83c2-b3589fb4234b</onsuccess><calculation expression="[Extracted Data Collection.Blood Pressure]" stage="Blood Pressure" /></stage><stage stageid="57e85150-ef57-4682-aaf0-5388e911b12f" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>915</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>dbbde2d7-777c-4693-ada1-f1f277a9f452</onsuccess><calculation expression="[Extracted Data Collection]" stage="Vision Acuity Uncorrected Section Results" /></stage><stage stageid="1e6fe7dd-82a9-4ade-9413-3d0bc7b5fbdd" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>960</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>558489a9-8285-4359-836c-f361bf61f7f9</onsuccess><calculation expression="[Extracted Data Collection]" stage="Vision Acuity Corrected Section Results" /></stage><stage stageid="ad27ade7-66e0-4184-a718-7ba4de3a7e8b" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>1005</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>82b82cb9-acf0-434e-9a66-ce10ab25a727</onsuccess><calculation expression="[Extracted Data Flag]" stage="Recommendations?" /></stage><stage stageid="8dbd5523-69eb-4a53-bb04-49f941534cf9" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>1050</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>4104f795-6258-42fe-aff5-a1fa745be65f</onsuccess><calculation expression="[Extracted Data Collection]" stage="Reason For Examination and Class Section Results" /></stage><stage stageid="e2280e97-1787-4bd7-9ef4-0b5bbccce93c" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>1095</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>e5c50b33-d91d-4d5e-9103-ad337b770066</onsuccess><calculation expression="[Extracted Data Text]" stage="Date Consent Given" /></stage><stage stageid="c861d330-1d37-4b54-8cd9-63961fa94ee2" name="Transfer Data" type="Calculation"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>345</displayx><displayy>1140</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>0bad5f48-0a33-4876-961e-1657fb4069e3</onsuccess><calculation expression="[Extracted Data Text]" stage="Narrative" /></stage><stage stageid="9aca6471-45e4-40b0-808e-05874254c25b" name="Concerns?" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>735</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b5ac3530-eddc-4e16-8dae-2e89e6638784" name="Recommendations?" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-300</displayx><displayy>735</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="636672ae-8c90-465a-a65a-25aa66a18f2a" name="Narrative" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>810</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42ea1fe3-a2e6-4e09-85c4-2b314bb1d769" name="Date Consent Given" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>810</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31533333-b2b5-4f06-a175-36683e41649e" name="Extract Patient Information" type="SubSheetInfo"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="60a1b61e-b3ee-4106-a6f5-321ac4babcd6" name="Start" type="Start"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Reason and Class Information" stage="Reason and Class Information" /></inputs><onsuccess>a2e17d11-21ee-42b5-a5d8-2d985dac11dd</onsuccess></stage><stage stageid="93ba231f-6258-43e0-b08b-05e56b508034" name="End" type="End"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>570</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="Extracted Reason and Class Data" stage="Extracted Data" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="dda318cb-f038-40c2-9fc6-31fda3f0146b" name="Look For Information To Extract" type="LoopStart"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a1044c6a-a523-4bbc-b441-9e20b4c8de11</onsuccess><groupid>e0d2ab87-e9de-461a-8b66-57a02d8c3bbb</groupid><looptype>ForEach</looptype><loopdata>Reason and Class Collection</loopdata></stage><stage stageid="86e03238-08fd-41e6-af47-c6a4d56f03d3" name="Look For Information To Extract" type="LoopEnd"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>420</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>93ba231f-6258-43e0-b08b-05e56b508034</onsuccess><groupid>e0d2ab87-e9de-461a-8b66-57a02d8c3bbb</groupid></stage><stage stageid="b0e3107c-d2a9-49f8-94c4-a7f00f7fbd7a" name="Extracted Data" type="Collection"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Class" type="number" /><field name="DL" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Class" type="number" value="" /><field name="DL" type="text" value="" /></row></initialvalue></stage><stage stageid="a2e17d11-21ee-42b5-a5d8-2d985dac11dd" name="Extract Item" type="Calculation"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>dda318cb-f038-40c2-9fc6-31fda3f0146b</onsuccess><calculation expression="[Reason and Class Information.item]" stage="Reason and Class Collection" /></stage><stage stageid="a315e592-ebc2-4b04-a266-d551f51c068b" name="Reason and Class Collection" type="Collection"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a1044c6a-a523-4bbc-b441-9e20b4c8de11" name="Read Row" type="Calculation"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fd523928-5dac-4ab1-8d0e-99fedd65a613</onsuccess><calculation expression="[Reason and Class Collection.JSON:Array]" stage="Temp Reason and Class Collection Row" /></stage><stage stageid="fa58afb3-0db1-4e6e-968c-381d23c31c9f" name="Temp Reason and Class Collection Row" type="Collection"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="901ea162-26f5-42d8-befb-076da1a0d786" name="Process eDMERs - Class Keyword" type="Data"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="0d4d45bf-f8a8-4373-bd72-46a4334d8cd3" name="Input Variables" type="Block"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="df577a72-1f25-4ed3-beee-5cdde0474548" name="Runtime Variables" type="Block"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>150</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6cf83ce5-5a2b-469c-85f7-b8e004270434" name="Output Variables" type="Block"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>330</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="aa568346-b81f-4c50-bdff-3272f7c553b5" name="Environment Variables" type="Block"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="47321268-33b0-4ef1-be75-e8baaf79420e" name="Reason For Examination and Class Section Results" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>735</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Class" type="number" /><field name="DL" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Class" type="number" value="" /><field name="DL" type="text" value="" /></row></initialvalue></stage><stage stageid="b65fcfdb-e9af-423c-b953-ca47bf4fd849" name="Extract Patient Information" type="SubSheetInfo"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="1f7d96c1-d7a6-4d65-afda-e0971ad22d0d" name="Start" type="Start"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Field Information" stage="Vision Field Information" /></inputs><onsuccess>c919638c-2ab7-461b-81ba-d27629a2e9ac</onsuccess></stage><stage stageid="b0d32084-060d-4c23-b338-fd7884970178" name="End" type="End"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>420</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="Extracted vision Field  Data" stage="Extracted Data" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="142b9a9f-45f8-47e7-9b56-c1175680b039" name="Vision Field Information" type="Collection"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="aa9fede2-2de6-4c99-b6bb-7ef8ceb8dd8c" name="Extracted Data" type="Collection"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>345</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision Field Normal?" type="flag" /><field name="Meets Criteria To Drive?" type="flag" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision Field Normal?" type="flag" value="True" /><field name="Meets Criteria To Drive?" type="flag" value="" /></row></initialvalue></stage><stage stageid="c919638c-2ab7-461b-81ba-d27629a2e9ac" name="Extract Item" type="Calculation"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f9b1ee93-8e07-42ea-8ea7-334015ba937e</onsuccess><calculation expression="[Vision Field Information.item]" stage="Coll1" /></stage><stage stageid="3aa1e853-5109-46c9-af8d-11f676849eba" name="Read Row" type="Calculation"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b558b5d0-3517-45c9-be05-f125e8d53a4f</onsuccess><calculation expression="[Coll1.JSON:Array]" stage="Temp Vision Field Collection Row" /></stage><stage stageid="a92f5711-74ef-4b1e-af45-a9f682711b99" name="Temp Vision Field Collection Row" type="Collection"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="866369ba-fbb8-45d3-92b3-7356f0e1ebbd" name="Process eDMERs - Vision Field Meet Criteria Keyword" type="Data"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="44300ee2-4755-4d73-92cf-b252725ae03e" name="Anchor4" type="Anchor"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>495</displayx><displayy>330</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>138d102b-2052-4b12-b9dc-a18ab82535bb</onsuccess></stage><stage stageid="be27c453-0669-4a68-8ce8-9caee6082adf" name="Input Variables" type="Block"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f85e19ad-e9f4-4848-8b94-93c632d9b0e6" name="Runtime Variables" type="Block"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>135</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c9dfe72e-b2f2-4cf4-92cd-ecda08a58362" name="Output Variables" type="Block"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>285</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bcbdec59-ab0f-4e9e-b135-df0bf0e4ce18" name="Environment Variables" type="Block"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b5c90871-3155-45f9-806a-6732cc96c01e" name="Vision Field Section Results" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-300</displayx><displayy>660</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision Field Normal?" type="flag" /><field name="Meets Criteria To Drive?" type="flag" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision Field Normal?" type="flag" value="" /><field name="Meets Criteria To Drive?" type="flag" value="" /></row></initialvalue></stage><stage stageid="6ca7452e-4e47-4a28-809f-5fac0ae05fbf" name="Blood Pressure" type="Data"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-300</displayx><displayy>810</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c76d2a16-d9eb-4dcb-afeb-0df7edf94d53" name="Extract Vision Acuity Corrected Information" type="SubSheetInfo"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="1a6e701c-bf6f-4584-b94f-6eb0e1af2da9" name="Start" type="Start"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Acuity Corrected Information" stage="Vision Acuity Corrected Information" /></inputs><onsuccess>4f1e5274-91e8-4b8c-ae6f-aeba832f18ca</onsuccess></stage><stage stageid="ddc78580-7987-494a-a078-0a0616c7e0e2" name="End" type="End"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>570</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="Extracted Vision Acuity Corrected Patient Data" stage="Extracted Data" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="3fa91e62-7cf2-4092-be3f-b17faaecae26" name="Vision Acuity Corrected Information" type="Collection"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="6241f7d3-a757-4305-8a8c-9a881defdaae" name="Extracted Data" type="Collection"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision Acuity Corrected?" type="flag" /><field name="Right" type="text" /><field name="Left" type="text" /><field name="Both" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision Acuity Corrected?" type="flag" value="" /><field name="Right" type="text" value="" /><field name="Left" type="text" value="" /><field name="Both" type="text" value="" /></row></initialvalue></stage><stage stageid="4f1e5274-91e8-4b8c-ae6f-aeba832f18ca" name="Extract Item" type="Calculation"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>7d3fa636-e6b7-4880-9db5-62aae1e9936a</onsuccess><calculation expression="[Vision Acuity Corrected Information.item]" stage="Coll2" /></stage><stage stageid="6eb67c63-ce8a-401d-9802-a7fecec124d4" name="Read Row" type="Calculation"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>834a4ab6-569e-418d-8211-df335fb81b87</onsuccess><calculation expression="[Coll2.JSON:Array]" stage="Temp Vision Acuity Corrected  Collection Row" /></stage><stage stageid="b7a917e8-5e08-42ae-9eac-a13ad1f0bc66" name="Temp Vision Acuity Corrected  Collection Row" type="Collection"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cca61721-68dc-4250-b8fe-4c56d1bfbc92" name="Process eDMERs - Vision Acuity Corrected Keyword" type="Data"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="2b8c8c3d-81eb-4dcb-811e-e756917631d0" name="Anchor4" type="Anchor"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>585</displayx><displayy>480</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fdb66ecd-664f-49e5-af31-d9b4abe9245d</onsuccess></stage><stage stageid="53d335e8-4365-4f4d-b72c-d039c46310fe" name="Input Variables" type="Block"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="05a502c5-241c-4cb4-8bf3-a06b1c1fda40" name="Runtime Variables" type="Block"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>150</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fff4f763-84d8-4c23-9d6a-549cad3bc381" name="Output Variables" type="Block"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>330</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c010410f-12cf-4740-8468-a578c25b875b" name="Environment Variables" type="Block"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="510287f2-3bbb-47ef-a16a-6c026a153dc0" name="Vision Acuity Corrected Section Results" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>885</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision Acuity Corrected?" type="flag" /><field name="Right" type="text" /><field name="Left" type="text" /><field name="Both" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision Acuity Corrected?" type="flag" value="" /><field name="Right" type="text" value="" /><field name="Left" type="text" value="" /><field name="Both" type="text" value="" /></row></initialvalue></stage><stage stageid="5f25f1d9-71b7-49b1-a2d9-417434a46bb9" name="Vision Acuity Uncorrected Section Results" type="Collection"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>885</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision Acuity Uncorrected?" type="flag" /><field name="Right" type="text" /><field name="Left" type="text" /><field name="Both" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision Acuity Uncorrected?" type="flag" value="" /><field name="Right" type="text" value="" /><field name="Left" type="text" value="" /><field name="Both" type="text" value="" /></row></initialvalue></stage><stage stageid="18a82be1-4bdb-47fd-b349-d5c6744ee320" name="Anchor27" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>420</displayx><displayy>1275</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>533b10bf-012b-4bb8-b90d-205c4d5e79d1</onsuccess></stage><stage stageid="b6935841-551e-412c-abfb-21def87e555b" name="Anchor28" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-120</displayx><displayy>75</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a0a176e6-e18e-4c16-b7a6-80c8e4d2d830</onsuccess></stage><stage stageid="a0a176e6-e18e-4c16-b7a6-80c8e4d2d830" name="Anchor29" type="Anchor"><subsheetid>f28da52e-7191-47cc-9ce5-6b0aa97b1e75</subsheetid><narrative></narrative><displayx>-120</displayx><displayy>1275</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>533b10bf-012b-4bb8-b90d-205c4d5e79d1</onsuccess></stage><stage stageid="db6f187d-99c8-4638-8c42-e52a60147696" name="Output Variables" type="Block"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>-615</displayx><displayy>630</displayy><displaywidth>405</displaywidth><displayheight>225</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4f75b694-495c-438a-8207-ce022123cb58" name="Extract Reason For Examination and Class Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>810</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Reason and Class Information" friendlyname="Reason and Class Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="collection" name="Extracted Reason and Class Data" friendlyname="Extracted Reason and Class Data" stage="Extracted Data Collection" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>77f75e50-050e-49fb-9acb-e1f57d395db1</onsuccess><processid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</processid></stage><stage stageid="932b1eb7-5237-4d7f-9a21-7a535a2aec8a" name="Anchor26" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-240</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d06ada09-4698-4f24-a441-df8daa5bceb7</onsuccess></stage><stage stageid="d06ada09-4698-4f24-a441-df8daa5bceb7" name="Anchor30" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-165</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>412c4560-deb0-4da0-a0a5-b6b4138eab7b</onsuccess></stage><stage stageid="412c4560-deb0-4da0-a0a5-b6b4138eab7b" name="Anchor31" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-90</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2b992777-7e59-4b7e-a913-5633204b800f</onsuccess></stage><stage stageid="2b992777-7e59-4b7e-a913-5633204b800f" name="Anchor32" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-15</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>868f1872-4db6-4ade-a24f-0b1095e008fa</onsuccess></stage><stage stageid="7e373040-9677-4f98-a7f4-f620a245157e" name="Anchor33" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>585</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>58b3532d-f805-43d7-87ad-b241681adac9</onsuccess></stage><stage stageid="58b3532d-f805-43d7-87ad-b241681adac9" name="Anchor34" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>660</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c7728490-1609-4749-8dff-b64e7e847cbe</onsuccess></stage><stage stageid="c7728490-1609-4749-8dff-b64e7e847cbe" name="Anchor35" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>735</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>77f75e50-050e-49fb-9acb-e1f57d395db1</onsuccess></stage><stage stageid="77f75e50-050e-49fb-9acb-e1f57d395db1" name="Anchor36" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>810</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>92b630b6-6887-4558-a508-536d65d587dc</onsuccess></stage><stage stageid="92b630b6-6887-4558-a508-536d65d587dc" name="Anchor37" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>885</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>76c4ea17-0887-48c2-b5c2-7b688715a44a</onsuccess></stage><stage stageid="76c4ea17-0887-48c2-b5c2-7b688715a44a" name="Anchor38" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>960</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c5ff508c-1ca5-46b3-aefb-55b06622bdc4</onsuccess></stage><stage stageid="c5ff508c-1ca5-46b3-aefb-55b06622bdc4" name="Anchor39" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>1035</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f50a0c72-7f77-41a9-8c48-997e2251f189</onsuccess></stage><stage stageid="f50a0c72-7f77-41a9-8c48-997e2251f189" name="Anchor40" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>1110</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0212942e-0c6b-4984-a648-a491e9c55c89</onsuccess></stage><stage stageid="0212942e-0c6b-4984-a648-a491e9c55c89" name="Anchor41" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>1185</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e52fc0f6-9bc3-4df7-abfa-0de5ab733001</onsuccess></stage><stage stageid="e52fc0f6-9bc3-4df7-abfa-0de5ab733001" name="Anchor42" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>1290</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>134bcab1-c70a-42a3-a0f6-0ec2d581fbae</onsuccess></stage><stage stageid="9624649b-8f38-4391-9013-5fa6048c3f1e" name="Extract Vision Acuity Corrected Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>1185</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Acuity Corrected Information" friendlyname="Vision Acuity Corrected Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="collection" name="Extracted Vision Acuity Corrected Patient Data" friendlyname="Extracted Vision Acuity Corrected Patient Data" stage="Extracted Data Collection" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>0212942e-0c6b-4984-a648-a491e9c55c89</onsuccess><processid>f7a227ec-3739-4695-ad56-0d02cdf34fed</processid></stage><stage stageid="f763b92d-2f36-46d4-bed3-afaf7fb0b9a2" name="Extract Vision Field Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>960</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Field Information" friendlyname="Vision Field Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="collection" name="Extracted vision Field  Data" friendlyname="Extracted vision Field  Data" stage="Extracted Data Collection" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>76c4ea17-0887-48c2-b5c2-7b688715a44a</onsuccess><processid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</processid></stage><stage stageid="e6d44949-4525-4d4e-81b7-74bef51b6260" name="Section Name" type="Data"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-300</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Reason and Class</initialvalue><private /><alwaysinit /></stage><stage stageid="1a8fbc64-4f04-44b8-bda1-01ce0d228b9e" name="Section Name" type="Data"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-300</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Patient Information</initialvalue><private /><alwaysinit /></stage><stage stageid="a9e84f06-cb58-40b8-8bc9-a50f2cec8420" name="Extracted Data Flag" type="Data"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8776cc3e-3bd9-4895-b9ca-1f5a96fad087" name="Extracted Data Text" type="Data"><subsheetid>4ce3f570-8ff9-4365-b1a9-65fc4e0aebfd</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">""</initialvalue><private /><alwaysinit /></stage><stage stageid="b5bbf24b-ba34-4ddd-9ae4-b7ac29bdabd1" name="Reason and Class Information" type="Collection"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ace8c543-bf4f-43f0-8ba3-e5366e7a348f" name="Extract Vision Acuity Uncorrected Information" type="SubSheetInfo"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="22e4d310-c664-46ea-9d89-78740f0b6925" name="Start" type="Start"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Acuity Uncorrected Information" stage="Vision Acuity Uncorrected Information" /></inputs><onsuccess>27bb7e60-a1b1-47cd-ad70-2dab49a475a0</onsuccess></stage><stage stageid="fbbe2a4f-3b8f-4c95-af6c-f2c8ba8e929e" name="End" type="End"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>570</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="Extracted Vision Acuity Uncorrected  Data" stage="Extracted Data" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="6af91953-4ef3-4ed7-b03a-96f540419898" name="Vision Acuity Uncorrected Information" type="Collection"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="c8a47f91-991a-4e18-8f89-fd50944cb334" name="Extracted Data" type="Collection"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Vision Acuity Uncorrected?" type="flag" /><field name="Right" type="text" /><field name="Left" type="text" /><field name="Both" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Vision Acuity Uncorrected?" type="flag" value="" /><field name="Right" type="text" value="" /><field name="Left" type="text" value="" /><field name="Both" type="text" value="" /></row></initialvalue></stage><stage stageid="27bb7e60-a1b1-47cd-ad70-2dab49a475a0" name="Extract Item" type="Calculation"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>0cb154f3-928c-44c0-9e42-831c5f645f69</onsuccess><calculation expression="[Vision Acuity Uncorrected Information.item]" stage="Coll3" /></stage><stage stageid="a06e668c-032f-45d4-a589-2c204a45cb3e" name="Temp Vision Acuity Uncorrected Collection Row" type="Collection"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6836fd9a-7218-4ed0-8d90-60547f087e5c" name="Process eDMERs - Vision Acuity Uncorrected Keyword" type="Data"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="bc4b58aa-3a10-4a06-bfa8-d5578d4d2c45" name="Anchor4" type="Anchor"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>585</displayx><displayy>480</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>07541690-2790-4366-9f82-835f7c79e080</onsuccess></stage><stage stageid="ec79e6ac-db33-4a29-8418-bcf63bdf770f" name="Input Variables" type="Block"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b9de7165-05bf-4808-a310-cdf400d53c79" name="Runtime Variables" type="Block"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>150</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="793223c5-50ba-48bd-95b5-af614a0bb8ff" name="Output Variables" type="Block"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>330</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b5a87f0b-5724-46ee-8002-83145149cb1a" name="Environment Variables" type="Block"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c0a1d48f-5f0d-43aa-a74b-11d56029f966" name="Extract Blood Pressure Informations" type="SubSheetInfo"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="6a04d000-3f66-4980-9c18-650085a360f6" name="Start" type="Start"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Blood Pressure  Information" stage="Blood Pressure Information" /></inputs><onsuccess>d99d5cd6-cd48-47d1-9b56-2e77b53cffcc</onsuccess></stage><stage stageid="3b068457-5d44-4f22-8336-bf915e8cdbc5" name="End" type="End"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>285</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="collection" name="Extracted Blood Pressure Data" stage="Extracted Data" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="e4ce4715-3dcf-47ce-a0cc-0ccddcf2ffd4" name="Blood Pressure Information" type="Collection"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="0b848226-6562-460a-be15-bb50e0f8f2cb" name="Extracted Data" type="Collection"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>330</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Blood Pressure" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Blood Pressure" type="text" value="" /></row></initialvalue></stage><stage stageid="8244ea2a-fdeb-4ff3-b203-a88b0e1a086e" name="Blood Pressure Row?" type="Decision"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Blood Pressure Collection Row.linkId]), Upper([Process eDMERs - Blood Pressure Keyword])) &lt;&gt; 0" /><ontrue>5968a974-fe1a-403a-94fe-c342cd4abb89</ontrue><onfalse>c1e64b9d-469a-4dee-bd73-5050465fe9c9</onfalse></stage><stage stageid="d99d5cd6-cd48-47d1-9b56-2e77b53cffcc" name="Extract Item" type="Calculation"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6792af80-c99c-4da9-8c1a-1d9838603a5b</onsuccess><calculation expression="[Blood Pressure Information.item]" stage="Blood Pressure Collection" /></stage><stage stageid="03729cea-c201-472d-9dab-f5a3f873684b" name="Blood Pressure Collection" type="Collection"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8889f1ee-8052-40c1-b765-9b00da9292c3" name="Read Row" type="Calculation"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>8244ea2a-fdeb-4ff3-b203-a88b0e1a086e</onsuccess><calculation expression="[Blood Pressure Collection.JSON:Array]" stage="Temp Blood Pressure Collection Row" /></stage><stage stageid="810c8898-67fe-46c4-accb-929ad90f979c" name="Temp Blood Pressure Collection Row" type="Collection"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2a7f177a-50e9-4673-8ece-1e82bf6facc5" name="Process eDMERs - Blood Pressure Keyword" type="Data"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="5968a974-fe1a-403a-94fe-c342cd4abb89" name="Extract Blood Pressure" type="MultipleCalculation"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>195</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>2d8a1037-bfcb-4700-a6e1-2404b8071ecc</onsuccess><steps><calculation expression="[Temp Blood Pressure Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Blood Pressure" /></steps></stage><stage stageid="2d8a1037-bfcb-4700-a6e1-2404b8071ecc" name="Anchor4" type="Anchor"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>195</displayx><displayy>285</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>3b068457-5d44-4f22-8336-bf915e8cdbc5</onsuccess></stage><stage stageid="d147edde-8294-4e5c-ba86-9088bccdf5bf" name="Input Variables" type="Block"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0ba8f877-d19a-48cd-aa0f-3f27ac00831c" name="Runtime Variables" type="Block"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>90</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bce364ba-6ce1-4fac-9822-08a72147a266" name="Output Variables" type="Block"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>270</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1852b653-16a6-4e27-9eaa-fd065d11e94d" name="Environment Variables" type="Block"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="215d8c1f-8279-4554-89be-f1c4464b8f23" name="Process eDMERs - Vision Field Normal Keyword" type="Data"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="b558b5d0-3517-45c9-be05-f125e8d53a4f" name="Which Row?" type="ChoiceStart"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>9bed5a08-1d2a-4f4f-ae4e-03d4d246fa9c</groupid><choices><choice expression="InStr(Upper([Temp Vision Field Collection Row.linkId]), Upper([Process eDMERs - Vision Field Meet Criteria Keyword])) &lt;&gt; 0"><name>Meet Criteria Row?</name><distance>45</distance><ontrue>6bed10f1-4efc-469a-b604-d7f091783f52</ontrue></choice><choice expression="InStr(Upper([Temp Vision Field Collection Row.linkId]), Upper([Process eDMERs - Vision Field Normal Keyword])) &lt;&gt; 0"><name>Normal Row?</name><distance>120</distance><ontrue>881e634d-4e4c-49ff-998a-993766150324</ontrue></choice></choices></stage><stage stageid="758807f7-6560-4fe1-9dbb-737a2bf0e8a9" name="Undefined Row" type="ChoiceEnd"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>255</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>138d102b-2052-4b12-b9dc-a18ab82535bb</onsuccess><groupid>9bed5a08-1d2a-4f4f-ae4e-03d4d246fa9c</groupid></stage><stage stageid="6bed10f1-4efc-469a-b604-d7f091783f52" name="Extract Meets Criteria" type="Calculation"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>375</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>8cefd2ae-5cf1-441e-8962-f1973edfd285</onsuccess><calculation expression="[Temp Vision Field Collection Row.answer.JSON:Array.valueBoolean]" stage="Extracted Data.Meets Criteria To Drive?" /></stage><stage stageid="881e634d-4e4c-49ff-998a-993766150324" name="Extract Vision Field Normal?" type="Calculation"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>375</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>d8e27378-27d2-4d73-b90f-94c5b2c38e7f</onsuccess><calculation expression="Upper([Temp Vision Field Collection Row.answer.JSON:Array.valueString]) = &quot;NORMAL&quot;" stage="Extracted Data.Vision Field Normal?" /></stage><stage stageid="8cefd2ae-5cf1-441e-8962-f1973edfd285" name="Anchor43" type="Anchor"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>495</displayx><displayy>135</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>d8e27378-27d2-4d73-b90f-94c5b2c38e7f</onsuccess></stage><stage stageid="d8e27378-27d2-4d73-b90f-94c5b2c38e7f" name="Anchor44" type="Anchor"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>495</displayx><displayy>210</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>44300ee2-4755-4d73-92cf-b252725ae03e</onsuccess></stage><stage stageid="834a4ab6-569e-418d-8211-df335fb81b87" name="Which Row?" type="ChoiceStart"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>522c6890-af0f-47b1-b8d4-1675514ea490</groupid><choices><choice expression="InStr(Upper([Temp Vision Acuity Corrected  Collection Row.linkId]), Upper([Process eDMERs - Vision Acuity Corrected Keyword])) &lt;&gt; 0"><name>Vision Corrected Row?</name><distance>45</distance><ontrue>54df5c02-6f29-4eda-bddb-9db8050e6879</ontrue></choice><choice expression="InStr(Upper([Temp Vision Acuity Corrected  Collection Row.linkId]), Upper(&quot;Left&quot;)) &lt;&gt; 0"><name>Left Row?</name><distance>120</distance><ontrue>9e7b3b83-bac7-4ac3-9a00-21f36f4f4e20</ontrue></choice><choice expression="InStr(Upper([Temp Vision Acuity Corrected  Collection Row.linkId]), Upper(&quot;Right&quot;)) &lt;&gt; 0"><name>Right Row?</name><distance>195</distance><ontrue>4ffe1a5c-b4da-4344-9061-c194f47597f9</ontrue></choice><choice expression="InStr(Upper([Temp Vision Acuity Corrected  Collection Row.linkId]), Upper(&quot;Both&quot;)) &lt;&gt; 0"><name>Both Row?</name><distance>270</distance><ontrue>888c500f-3968-481f-a100-d82ead6d70ae</ontrue></choice></choices></stage><stage stageid="c201898e-a14e-4bd5-b7bb-dc5d89f7e97c" name="Undefined Row" type="ChoiceEnd"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>405</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fdb66ecd-664f-49e5-af31-d9b4abe9245d</onsuccess><groupid>522c6890-af0f-47b1-b8d4-1675514ea490</groupid></stage><stage stageid="54df5c02-6f29-4eda-bddb-9db8050e6879" name="Extract Vision AcuityCorrected?" type="Calculation"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>465</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>45201553-8d45-4b6d-b5a4-11a8c28cf50d</onsuccess><calculation expression="[Temp Vision Acuity Corrected  Collection Row.answer.JSON:Array.valueBoolean]" stage="Extracted Data.Vision Acuity Corrected?" /></stage><stage stageid="9e7b3b83-bac7-4ac3-9a00-21f36f4f4e20" name="Extract Acuity Left" type="Calculation"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>465</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>56d83c37-fb9d-42f0-b5ed-49e86e61d1fe</onsuccess><calculation expression="[Temp Vision Acuity Corrected  Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Left" /></stage><stage stageid="45201553-8d45-4b6d-b5a4-11a8c28cf50d" name="Anchor43" type="Anchor"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>585</displayx><displayy>135</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>56d83c37-fb9d-42f0-b5ed-49e86e61d1fe</onsuccess></stage><stage stageid="56d83c37-fb9d-42f0-b5ed-49e86e61d1fe" name="Anchor44" type="Anchor"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>585</displayx><displayy>210</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a9d4971a-4181-49c9-9178-f74491c632f2</onsuccess></stage><stage stageid="a9d4971a-4181-49c9-9178-f74491c632f2" name="Anchor45" type="Anchor"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>585</displayx><displayy>285</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6f181200-9fad-46b5-bb9c-866774284858</onsuccess></stage><stage stageid="6f181200-9fad-46b5-bb9c-866774284858" name="Anchor46" type="Anchor"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>585</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2b8c8c3d-81eb-4dcb-811e-e756917631d0</onsuccess></stage><stage stageid="4ffe1a5c-b4da-4344-9061-c194f47597f9" name="Extract Acuity Right?" type="Calculation"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>465</displayx><displayy>285</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a9d4971a-4181-49c9-9178-f74491c632f2</onsuccess><calculation expression="[Temp Vision Acuity Corrected  Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Right" /></stage><stage stageid="888c500f-3968-481f-a100-d82ead6d70ae" name="Extract Acuity Both" type="Calculation"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>465</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6f181200-9fad-46b5-bb9c-866774284858</onsuccess><calculation expression="[Temp Vision Acuity Corrected  Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Both" /></stage><stage stageid="a728e20f-7320-4b77-9a08-a4084189f2d1" name="Read Row" type="Calculation"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a473ab75-dc85-4045-8970-680b43873a80</onsuccess><calculation expression="[Coll3.JSON:Array]" stage="Temp Vision Acuity Uncorrected Collection Row" /></stage><stage stageid="a473ab75-dc85-4045-8970-680b43873a80" name="Which Row?" type="ChoiceStart"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>c3d738d1-50ed-4ad8-8b35-d36b1e94531d</groupid><choices><choice expression="InStr(Upper([Temp Vision Acuity Uncorrected Collection Row.linkId]), Upper([Process eDMERs - Vision Acuity Uncorrected Keyword])) &lt;&gt; 0"><name>Vision Uncorrected Row?</name><distance>45</distance><ontrue>3c2c6e96-758b-4ddd-a38a-786a648f8ee8</ontrue></choice><choice expression="InStr(Upper([Temp Vision Acuity Uncorrected Collection Row.linkId]), Upper(&quot;Left&quot;)) &lt;&gt; 0"><name>Left Row?</name><distance>120</distance><ontrue>e2186d47-62f7-405e-ba98-cfb673d289f3</ontrue></choice><choice expression="InStr(Upper([Temp Vision Acuity Uncorrected Collection Row.linkId]), Upper(&quot;Right&quot;)) &lt;&gt; 0"><name>Right Row?</name><distance>195</distance><ontrue>d2cc6d6d-ff23-4bf8-a613-a8b9a3ed789b</ontrue></choice><choice expression="InStr(Upper([Temp Vision Acuity Uncorrected Collection Row.linkId]), Upper(&quot;Both&quot;)) &lt;&gt; 0"><name>Both Row?</name><distance>270</distance><ontrue>50dd6688-8629-4cb2-9d7c-20c858aa2935</ontrue></choice></choices></stage><stage stageid="d3341a5a-90a4-47c3-aaa1-adf930149836" name="Undefined Row?" type="ChoiceEnd"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>405</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>07541690-2790-4366-9f82-835f7c79e080</onsuccess><groupid>c3d738d1-50ed-4ad8-8b35-d36b1e94531d</groupid></stage><stage stageid="3c2c6e96-758b-4ddd-a38a-786a648f8ee8" name="Extract Vision Acuity Uncorrected?" type="Calculation"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>465</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>182f3952-5bc2-4023-9870-b9877cede68d</onsuccess><calculation expression="[Temp Vision Acuity Uncorrected Collection Row.answer.JSON:Array.valueBoolean]" stage="Extracted Data.Vision Acuity Uncorrected?" /></stage><stage stageid="e2186d47-62f7-405e-ba98-cfb673d289f3" name="Extract Acuity Left" type="Calculation"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>465</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>af08cf48-b6c7-4ff9-a444-88b6b902ec7f</onsuccess><calculation expression="[Temp Vision Acuity Uncorrected Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Left" /></stage><stage stageid="182f3952-5bc2-4023-9870-b9877cede68d" name="Anchor43" type="Anchor"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>585</displayx><displayy>135</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>af08cf48-b6c7-4ff9-a444-88b6b902ec7f</onsuccess></stage><stage stageid="af08cf48-b6c7-4ff9-a444-88b6b902ec7f" name="Anchor44" type="Anchor"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>585</displayx><displayy>210</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>cf141fec-6217-42b7-9c77-6e2c9424be15</onsuccess></stage><stage stageid="cf141fec-6217-42b7-9c77-6e2c9424be15" name="Anchor45" type="Anchor"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>585</displayx><displayy>285</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>d0382322-b564-4f98-a43d-e5d8e7d2f5d4</onsuccess></stage><stage stageid="d0382322-b564-4f98-a43d-e5d8e7d2f5d4" name="Anchor46" type="Anchor"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>585</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /><onsuccess>bc4b58aa-3a10-4a06-bfa8-d5578d4d2c45</onsuccess></stage><stage stageid="d2cc6d6d-ff23-4bf8-a613-a8b9a3ed789b" name="Extract Acuity Right?" type="Calculation"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>465</displayx><displayy>285</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>cf141fec-6217-42b7-9c77-6e2c9424be15</onsuccess><calculation expression="[Temp Vision Acuity Uncorrected Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Right" /></stage><stage stageid="50dd6688-8629-4cb2-9d7c-20c858aa2935" name="Extract Acuity Both" type="Calculation"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>465</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>d0382322-b564-4f98-a43d-e5d8e7d2f5d4</onsuccess><calculation expression="[Temp Vision Acuity Uncorrected Collection Row.answer.JSON:Array.valueString]" stage="Extracted Data.Both" /></stage><stage stageid="088ac55d-4869-46eb-a8a8-7f949b51e610" name="Extract Vision Acuity Uncorrected Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>1110</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Acuity Uncorrected Information" friendlyname="Vision Acuity Uncorrected Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="collection" name="Extracted Vision Acuity Uncorrected  Data" friendlyname="Extracted Vision Acuity Uncorrected  Data" stage="Extracted Data Collection" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>f50a0c72-7f77-41a9-8c48-997e2251f189</onsuccess><processid>8b0ec712-a5d6-4450-944b-710aa0197896</processid></stage><stage stageid="427a460d-3a27-4a9a-9679-542de58fb373" name="Extract Blood Pressure Informations" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>1035</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Blood Pressure  Information" friendlyname="Blood Pressure  Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="collection" name="Extracted Blood Pressure Data" friendlyname="Extracted Blood Pressure Data" stage="Extracted Data Collection" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>c5ff508c-1ca5-46b3-aefb-55b06622bdc4</onsuccess><processid>3ad61397-5ca7-4260-9f11-573571ddfb42</processid></stage><stage stageid="84d584f5-ec57-488a-bd40-51f5d1facb86" name="Narrative" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>615</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04ad18bf-93cb-4664-a276-d7e26140553c" name="Date Consent Given" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b50dcda-1737-4729-9c51-1e5ba946af3b" name="Concerns?" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>615</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ce2a072d-85f6-41a6-8a38-50b13493dad3" name="Blood Pressure" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6389c43b-ebea-483d-b524-d47964ed84cb" name="Vision Field Section Results" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>615</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="86d1c89a-ea60-4fb2-ab7e-12d42807f249" name="Vision Acuity Uncorrected Section Results" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f3878aaa-f8c1-4e8d-800b-2c725e761747" name="Vision Acuity Corrected Section Results" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c8c682f6-5f40-415c-8eb3-f58fe922cc49" name="Reason For Examination and Class Section Results" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>615</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9c16ad07-d9de-4312-8683-0b7e892b8dce" name="Patient Information Section Results" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c8d1d023-f530-43b2-a0d1-63fe6f565d59" name="History Section Results" type="Collection"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="26209454-5c13-4d5d-a079-99ef3ba2ccdf" name="Extract Narrative Information" type="SubSheetInfo"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-105</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f61b36be-60a6-4b40-86eb-c083387fa8c4" name="Extract Narrative Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Narrative  Information" friendlyname="Narrative  Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /><output type="text" name="Extracted Narrative Text" friendlyname="Extracted Narrative Text" stage="Extracted Data Text" /></outputs><onsuccess>412c4560-deb0-4da0-a0a5-b6b4138eab7b</onsuccess><processid>319a6d13-1edc-4442-b62a-a8a37f2aab19</processid></stage><stage stageid="128674d0-6175-42a3-867e-1343277f6ae0" name="Coll1" type="Collection"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9b1ee93-8e07-42ea-8ea7-334015ba937e" name="Look for Information to Extract" type="LoopStart"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>3aa1e853-5109-46c9-af8d-11f676849eba</onsuccess><groupid>6269c3f5-fa44-43b6-8aa1-ed2e091af26b</groupid><looptype>ForEach</looptype><loopdata>Coll1</loopdata></stage><stage stageid="138d102b-2052-4b12-b9dc-a18ab82535bb" name="Look for Information to Extract" type="LoopEnd"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>15</displayx><displayy>330</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b0d32084-060d-4c23-b338-fd7884970178</onsuccess><groupid>6269c3f5-fa44-43b6-8aa1-ed2e091af26b</groupid></stage><stage stageid="a0b14dda-0812-4954-a63c-1359899809f6" name="Coll2" type="Collection"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-300</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7d3fa636-e6b7-4880-9db5-62aae1e9936a" name="Look For Information To Extract" type="LoopStart"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6eb67c63-ce8a-401d-9802-a7fecec124d4</onsuccess><groupid>1ea65cd5-0d7c-4e14-b1fd-3f0b5b162c2e</groupid><looptype>ForEach</looptype><loopdata>Coll2</loopdata></stage><stage stageid="fdb66ecd-664f-49e5-af31-d9b4abe9245d" name="Look For Information To Extract" type="LoopEnd"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>15</displayx><displayy>480</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>ddc78580-7987-494a-a078-0a0616c7e0e2</onsuccess><groupid>1ea65cd5-0d7c-4e14-b1fd-3f0b5b162c2e</groupid></stage><stage stageid="0cb154f3-928c-44c0-9e42-831c5f645f69" name="Look For Information To Extract" type="LoopStart"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a728e20f-7320-4b77-9a08-a4084189f2d1</onsuccess><groupid>ead73bff-c14f-47d0-b92f-64b99a881e0a</groupid><looptype>ForEach</looptype><loopdata>Coll3</loopdata></stage><stage stageid="07541690-2790-4366-9f82-835f7c79e080" name="Look For Information To Extract" type="LoopEnd"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>15</displayx><displayy>480</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fbbe2a4f-3b8f-4c95-af6c-f2c8ba8e929e</onsuccess><groupid>ead73bff-c14f-47d0-b92f-64b99a881e0a</groupid></stage><stage stageid="ddd34626-50b1-49dc-87a7-b8acef62df88" name="Coll3" type="Collection"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6792af80-c99c-4da9-8c1a-1d9838603a5b" name="Look For Information to Extract" type="LoopStart"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>8889f1ee-8052-40c1-b765-9b00da9292c3</onsuccess><groupid>b73a5ff6-1241-4247-b199-2e749a23a24f</groupid><looptype>ForEach</looptype><loopdata>Blood Pressure Collection</loopdata></stage><stage stageid="c1e64b9d-469a-4dee-bd73-5050465fe9c9" name="Look For Information to Extract" type="LoopEnd"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>3b068457-5d44-4f22-8336-bf915e8cdbc5</onsuccess><groupid>b73a5ff6-1241-4247-b199-2e749a23a24f</groupid></stage><stage stageid="f2826da8-2c42-4101-9318-de707812e5bb" name="Start" type="Start"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Narrative  Information" stage="Narrative Information" /></inputs><onsuccess>30442856-8d86-40e7-8df7-459792cb44d9</onsuccess></stage><stage stageid="8e585114-5f82-457a-b01f-2635fadfb9f9" name="End" type="End"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>405</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="text" name="Extracted Narrative Text" stage="Narrative" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="2612df26-764a-4be6-bd3d-6da7e1d4ef0c" name="Narrative Row?" type="Decision"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Narrative Collection Row.linkId]), Upper([Process eDMERs - Narrative Keyword])) &lt;&gt; 0" /><ontrue>4717d9eb-9346-4b26-8cd3-937fa74f9a4a</ontrue><onfalse>801dda15-0eaa-4fa7-b72d-3538c022fc3a</onfalse></stage><stage stageid="30442856-8d86-40e7-8df7-459792cb44d9" name="Extract Item" type="Calculation"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>c2cfcd68-9f6d-4506-b56a-1e72ad86f77b</onsuccess><calculation expression="[Narrative Information.item]" stage="Coll4" /></stage><stage stageid="2e94d2f9-9b3b-47ca-8440-7b6d10a6bba6" name="Read Row" type="Calculation"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>135</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>2612df26-764a-4be6-bd3d-6da7e1d4ef0c</onsuccess><calculation expression="[Coll4.JSON:Array]" stage="Temp Narrative Collection Row" /></stage><stage stageid="4717d9eb-9346-4b26-8cd3-937fa74f9a4a" name="Extract Narrative" type="MultipleCalculation"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>330</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6ef309ec-e09b-4cf4-9d12-4a199f7a70b1</onsuccess><steps><calculation expression="[Temp Narrative Collection Row.answer.JSON:Array.valueString]" stage="Narrative" /></steps></stage><stage stageid="6ef309ec-e09b-4cf4-9d12-4a199f7a70b1" name="Anchor4" type="Anchor"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>330</displayx><displayy>405</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>8e585114-5f82-457a-b01f-2635fadfb9f9</onsuccess></stage><stage stageid="c2cfcd68-9f6d-4506-b56a-1e72ad86f77b" name="Look for Information to Extract" type="LoopStart"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>60</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>2e94d2f9-9b3b-47ca-8440-7b6d10a6bba6</onsuccess><groupid>b1997bd1-4ecf-45fa-ba82-e480c5bb931d</groupid><looptype>ForEach</looptype><loopdata>Coll4</loopdata></stage><stage stageid="801dda15-0eaa-4fa7-b72d-3538c022fc3a" name="Look for Information to Extract" type="LoopEnd"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>150</displayx><displayy>315</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>8e585114-5f82-457a-b01f-2635fadfb9f9</onsuccess><groupid>b1997bd1-4ecf-45fa-ba82-e480c5bb931d</groupid></stage><stage stageid="1fcbac2f-5a1b-4d23-bcde-5520ce2cad6f" name="Coll4" type="Collection"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="16ee77f5-639f-4f96-87a9-a2494fee7fba" name="Narrative Information" type="Collection"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-210</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="8b8fb24a-b026-4ec5-8b80-1e7ddb0acc7a" name="Temp Narrative Collection Row" type="Collection"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="307c78f8-5a30-4aff-ba6a-6dae3e10f142" name="Process eDMERs - Narrative Keyword" type="Data"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="65418d2c-77ed-4386-ad49-fd9bf398d450" name="Input Variables" type="Block"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-285</displayx><displayy>-45</displayy><displaywidth>165</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e118dfb9-1f8b-454c-8d53-8c8f1bfe8893" name="Runtime Variables" type="Block"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>105</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="716b993d-5c1b-4fdd-8370-8f198cb794ec" name="Output Variables" type="Block"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>285</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b3f31ddb-40cb-45ba-b0ef-ce46de25e018" name="Environment Variables" type="Block"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>120</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="697c6d09-c001-4a9f-aa22-378957456a8b" name="Extract Date Consent Given Section" type="SubSheetInfo"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-150</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2fd05475-8012-4b54-b054-ee99974694c2" name="Extract Date Consent Given Section" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-165</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Consent Information" friendlyname="Consent Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="text" name="Date Consent Given" friendlyname="Date Consent Given" stage="Extracted Data Text" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>d06ada09-4698-4f24-a441-df8daa5bceb7</onsuccess><processid>98d23c06-740d-49c4-84da-e3f44b781e3b</processid></stage><stage stageid="963b639f-f255-43f1-b598-5b5faabf133c" name="Start" type="Start"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-180</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Consent Information" stage="Consent Information" /></inputs><onsuccess>c58f0fa5-2ce8-4bf5-80d6-e94f3fb0f15d</onsuccess></stage><stage stageid="fd1acb5c-51a5-4f97-93bc-b5c048bfadcd" name="End" type="End"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>405</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="text" name="Date Consent Given" stage="Date Consent Given" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="792b3575-471f-4385-afe8-6ff1d6ddcf2a" name="Consent Row?" type="Decision"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Consent Collection Row.linkId]), Upper([Process eDMERs - Date Consent and Cert Given Keyword])) &lt;&gt; 0" /><ontrue>8b151ac1-2327-4b62-aaf4-d9d1ac52a079</ontrue><onfalse>d612527a-53c6-47c4-af64-4a9c5e1d4844</onfalse></stage><stage stageid="c58f0fa5-2ce8-4bf5-80d6-e94f3fb0f15d" name="Extract Item" type="Calculation"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>38fa56c7-305e-4401-9fe9-8e533963fc80</onsuccess><calculation expression="[Consent Information.item]" stage="Consent Collection" /></stage><stage stageid="4b01d7fb-aba0-4e30-b2cc-b62559afb50a" name="Read Row" type="Calculation"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>75</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>792b3575-471f-4385-afe8-6ff1d6ddcf2a</onsuccess><calculation expression="[Consent Collection.JSON:Array]" stage="Temp Consent Collection Row" /></stage><stage stageid="8b151ac1-2327-4b62-aaf4-d9d1ac52a079" name="Extract Consent Date" type="MultipleCalculation"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>345</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>ea561791-867f-4153-8ccb-5311f1224723</onsuccess><steps><calculation expression="[Temp Consent Collection Row.answer.JSON:Array.valueDateTime]" stage="Date Consent Given" /></steps></stage><stage stageid="ea561791-867f-4153-8ccb-5311f1224723" name="Anchor4" type="Anchor"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>345</displayx><displayy>405</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fd1acb5c-51a5-4f97-93bc-b5c048bfadcd</onsuccess></stage><stage stageid="38fa56c7-305e-4401-9fe9-8e533963fc80" name="Look For Information To Extract" type="LoopStart"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>0</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>4b01d7fb-aba0-4e30-b2cc-b62559afb50a</onsuccess><groupid>6b066f36-e304-4f26-a71c-4ae43febdeb5</groupid><looptype>ForEach</looptype><loopdata>Consent Collection</loopdata></stage><stage stageid="d612527a-53c6-47c4-af64-4a9c5e1d4844" name="Look For Information To Extract" type="LoopEnd"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>315</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fd1acb5c-51a5-4f97-93bc-b5c048bfadcd</onsuccess><groupid>6b066f36-e304-4f26-a71c-4ae43febdeb5</groupid></stage><stage stageid="19b87f5e-2707-4085-ae8a-2474a9bf88e9" name="Consent Collection" type="Collection"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>240</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7e657589-feda-4991-8e64-8f94b4c72ea0" name="Consent Information" type="Collection"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-210</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="906e9945-2c6a-4431-b31c-f04ba6403c95" name="Temp Consent Collection Row" type="Collection"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>240</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ba6d06e-296b-4416-b7d2-9eefb7f87ef4" name="Process eDMERs - Date Consent and Cert Given Keyword" type="Data"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="723dddb6-abd5-4168-828e-4c6787491d34" name="Input Variables" type="Block"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-285</displayx><displayy>-60</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="160f7373-f736-4968-ad1f-29d66521708a" name="Runtime Variables" type="Block"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>180</displayy><displaywidth>300</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="842dad5e-a3b3-4519-8709-70f300373e0d" name="Output Variables" type="Block"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>360</displayy><displaywidth>300</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bbcbb4ee-b40b-4913-9d86-7ce0e5e78fb7" name="Environment Variables" type="Block"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-60</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ac4b0e22-4f2f-49c3-aed3-dcc2e3bcf4d5" name="Extract Opinion Information" type="SubSheetInfo"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-180</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="bf9b423c-bfa7-45f6-b8a8-8046c43fcc88" name="Extract Opinion Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>735</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Opinion Information" friendlyname="Opinion Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="flag" name="Opinion" friendlyname="Opinion" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>c7728490-1609-4749-8dff-b64e7e847cbe</onsuccess><processid>a77a96a2-6faf-4c43-9f99-53882dffe938</processid></stage><stage stageid="fc8ca390-870b-45f2-800b-a5675b92b212" name="Extract Recommendation Information" type="SubSheetInfo"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-135</displayy><displaywidth>330</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="6a489745-184e-4836-bd8d-0acbae375006" name="Start" type="Start"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-225</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Recommendation Information" stage="Recommendation Information" /></inputs><onsuccess>ef7db29f-b6da-4b2c-a301-8bb11c94e2cc</onsuccess></stage><stage stageid="3fd00fd9-aaa9-4e47-a165-02b266e98bc4" name="End" type="End"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>45</displayx><displayy>285</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="Recommendations?" stage="Recommendations?" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="30becaf8-9ae1-4103-ba58-a1946ac64344" name="Extract Recommendation Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>885</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Recommendation Information" friendlyname="Recommendation Information" expr="[Resource Item Collection]" /></inputs><outputs><output type="flag" name="Recommendations?" friendlyname="Recommendations?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>92b630b6-6887-4558-a508-536d65d587dc</onsuccess><processid>f64323fc-b01e-4085-820c-a1f41a97e5eb</processid></stage><stage stageid="da676071-4747-4d0d-b406-0bf373e95193" name="Start" type="Start"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Opinion Information" stage="Opinion Information" /></inputs><onsuccess>09b4c680-c266-4fd5-b1eb-9b70ca927ecf</onsuccess></stage><stage stageid="1428677b-41e7-41ef-b0cd-952ca78fdbf8" name="End" type="End"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>390</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="Opinion" stage="Concerns?" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="bc7a39bd-9554-4ec0-bb0c-2da923d70c8d" name="Opinion Row?" type="Decision"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Opinion Collection Row.linkId]), Upper([Process eDMERs - Opinion Keyword])) &lt;&gt; 0" /><ontrue>f8edde26-c428-4d69-89ea-318437ebf132</ontrue><onfalse>47cfab45-0c5a-4d08-93eb-d2047ca8b01e</onfalse></stage><stage stageid="09b4c680-c266-4fd5-b1eb-9b70ca927ecf" name="Extract Item" type="Calculation"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>107eab70-0fe8-4d6d-97a9-ba43ebe539f9</onsuccess><calculation expression="[Opinion Information.item]" stage="Coll5" /></stage><stage stageid="a085d340-2636-4ce1-80a0-f88ecec0a750" name="Read Row" type="Calculation"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>60</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>bc7a39bd-9554-4ec0-bb0c-2da923d70c8d</onsuccess><calculation expression="[Coll5.JSON:Array]" stage="Temp Opinion Collection Row" /></stage><stage stageid="fdb9b8a4-ff02-45cc-990d-2d2dd317a56c" name="Anchor4" type="Anchor"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>450</displayx><displayy>390</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>1428677b-41e7-41ef-b0cd-952ca78fdbf8</onsuccess></stage><stage stageid="107eab70-0fe8-4d6d-97a9-ba43ebe539f9" name="Look for Information to Extract" type="LoopStart"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-15</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a085d340-2636-4ce1-80a0-f88ecec0a750</onsuccess><groupid>8060584a-2abe-4940-a884-ebc6411a0d1a</groupid><looptype>ForEach</looptype><loopdata>Coll5</loopdata></stage><stage stageid="47cfab45-0c5a-4d08-93eb-d2047ca8b01e" name="Look for Information to Extract" type="LoopEnd"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>150</displayx><displayy>285</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>1428677b-41e7-41ef-b0cd-952ca78fdbf8</onsuccess><groupid>8060584a-2abe-4940-a884-ebc6411a0d1a</groupid></stage><stage stageid="6809a79b-69da-4370-92e4-19df78de98de" name="Coll5" type="Collection"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71c7cec0-af2e-4ee3-a0eb-bd27b62bee7d" name="Opinion Information" type="Collection"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-210</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><noalwaysinit /></stage><stage stageid="f0c95f07-31e9-4acd-a5bd-66021279a2b8" name="Temp Opinion Collection Row" type="Collection"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="34050a97-3017-44ad-9732-eab989d37ec8" name="Process eDMERs - Opinion Keyword" type="Data"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">birthDate</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="51744f52-a202-4c08-a518-b435ad6541c9" name="Input Variables" type="Block"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-285</displayx><displayy>-105</displayy><displaywidth>165</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7b601cb9-4d90-46c5-a8f1-268b837da8c3" name="Runtime Variables" type="Block"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>135</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="72e15a95-eb99-45cc-8b9a-5a9110d9beb2" name="Output Variables" type="Block"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>285</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="63d1d971-0f0b-4a17-a416-147ea12fc40d" name="Environment Variables" type="Block"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0e7606d4-1069-4352-ab65-647e8239fe89" name="Concerns?" type="Data"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>345</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="85e817c1-2405-41c2-8028-eda3664bf50c" name="Set Concerns to Yes" type="Calculation"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>450</displayx><displayy>255</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>fdb9b8a4-ff02-45cc-990d-2d2dd317a56c</onsuccess><calculation expression="True" stage="Concerns?" /></stage><stage stageid="686f972d-b32c-41fe-b30f-70c7a8e9c056" name="Date Consent Given" type="Data"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>420</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bfa2b912-8063-4768-a1ac-6a846359a859" name="Recommendation Information" type="Collection"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2aeafbce-c99c-4e96-9799-97ddc8b52879" name="Recommendations?" type="Data"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>360</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef7db29f-b6da-4b2c-a301-8bb11c94e2cc" name="Convert to String" type="Action"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>45</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Data" friendlyname="Data" expr="[Recommendation Information]" /></inputs><outputs><output type="text" name="JSON" friendlyname="JSON" stage="Recommendation Json" /></outputs><onsuccess>9dbaf68c-5859-40ef-a4d9-a8ad7c2e6891</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="0f7f8ba7-be92-4af2-b5c8-9e2c714e04f8" name="Recommendation Json" type="Data"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>150</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccfd682-538c-460d-9d1a-3859ad7d9438" name="Set Recommendations to False" type="Calculation"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>45</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>3fd00fd9-aaa9-4e47-a165-02b266e98bc4</onsuccess><calculation expression="False" stage="Recommendations?" /></stage><stage stageid="48c73db8-50a3-4eb3-b65a-651737284bd2" name="Set Recommendations to True" type="Calculation"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>285</displayx><displayy>15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>3fd00fd9-aaa9-4e47-a165-02b266e98bc4</onsuccess><calculation expression="True" stage="Recommendations?" /></stage><stage stageid="9dbaf68c-5859-40ef-a4d9-a8ad7c2e6891" name="Any Recommendations?" type="Decision"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>45</displayx><displayy>15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Recommendation Json]), &quot;TRUE&quot;) &lt;&gt; 0" /><ontrue>48c73db8-50a3-4eb3-b65a-651737284bd2</ontrue><onfalse>9ccfd682-538c-460d-9d1a-3859ad7d9438</onfalse></stage><stage stageid="12e3d2fc-03a1-45e2-8e0c-452c690bc49f" name="Input Variables" type="Block"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>-60</displayy><displaywidth>330</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="946d85f3-8edf-4786-b418-68536b861005" name="Runtime Variables" type="Block"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>90</displayy><displaywidth>330</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ae0e733f-7b8f-426b-ac15-a3b2cd6f27aa" name="Output Variables" type="Block"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>270</displayy><displaywidth>330</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c4a12bbd-4c86-4906-9e44-764f1bbd22a5" name="Extract History Information" type="SubSheetInfo"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>-135</displayy><displaywidth>330</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="745b0f12-8b5b-4a32-94f6-50d14f2c88c2" name="Start" type="Start"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-225</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" stage="History Information" /><input type="text" name="History Type Name" stage="Section Name" /></inputs><onsuccess>b6d9f2dd-ae0f-49de-92db-16549e86ed1a</onsuccess></stage><stage stageid="38d4054c-06e8-44b2-823f-4b77d88fe5b8" name="End" type="End"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>45</displayx><displayy>285</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="History?" stage="History?" /><output type="text" name="Section Name" stage="Section Name" /></outputs></stage><stage stageid="808cf004-fa8e-452d-a2a4-4cedd1c6d042" name="History Information" type="Collection"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="96da7840-4995-4c7a-85e8-5aa26556c0f8" name="History?" type="Data"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-285</displayx><displayy>300</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6d9f2dd-ae0f-49de-92db-16549e86ed1a" name="Convert to String" type="Action"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>45</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Data" friendlyname="Data" expr="[History Information]" /></inputs><outputs><output type="text" name="JSON" friendlyname="JSON" stage="History Json" /></outputs><onsuccess>34331840-fe80-4b5b-8795-05ac32bb5881</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="4ad2f627-f6c4-45a8-b4a3-f45a2d918c04" name="History Json" type="Data"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>150</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="17c8efbb-890a-4731-a005-00104506c2ea" name="Set History to False" type="Calculation"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>45</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>38d4054c-06e8-44b2-823f-4b77d88fe5b8</onsuccess><calculation expression="False" stage="History?" /></stage><stage stageid="31b89830-8025-4868-b297-cd97e92f3881" name="Set History  to True" type="Calculation"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>285</displayx><displayy>15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>38d4054c-06e8-44b2-823f-4b77d88fe5b8</onsuccess><calculation expression="True" stage="History?" /></stage><stage stageid="34331840-fe80-4b5b-8795-05ac32bb5881" name="Any History?" type="Decision"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>45</displayx><displayy>15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([History Json]), &quot;TRUE&quot;) &lt;&gt; 0 OR  InStr(Upper([History Json]), &quot;MOCA&quot;) &lt;&gt; 0 OR  InStr(Upper([History Json]), &quot;MMSE&quot;) &lt;&gt; 0" /><ontrue>31b89830-8025-4868-b297-cd97e92f3881</ontrue><onfalse>17c8efbb-890a-4731-a005-00104506c2ea</onfalse></stage><stage stageid="659d654a-a5e7-470a-9d95-fa1bb7f1fe27" name="Input Variables" type="Block"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>-60</displayy><displaywidth>330</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="016ac89c-4807-43e4-942f-a95f64b03505" name="Runtime Variables" type="Block"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>90</displayy><displaywidth>330</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6e7030d3-a858-4d13-bba6-ae3984d766b2" name="Output Variables" type="Block"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>240</displayy><displaywidth>330</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="734f229a-441f-45d5-a572-fa74ce97d1f8" name="Section Name" type="Data"><subsheetid>8c1b9c3d-c875-4c27-bae0-edb29454bafa</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>345</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Vision Field</initialvalue><private /><alwaysinit /></stage><stage stageid="3e93a49a-95dc-4871-a21c-f8c8d2856e18" name="Section Name" type="Data"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Narrative</initialvalue><private /><alwaysinit /></stage><stage stageid="94d4bd2d-9ad3-4adc-be21-9f3233719c62" name="Narrative" type="Data"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54c2dd18-297e-426a-b9a8-5c61fb110fc5" name="Section Name" type="Data"><subsheetid>f7a227ec-3739-4695-ad56-0d02cdf34fed</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Vision Acuity Corrected</initialvalue><private /><alwaysinit /></stage><stage stageid="3f31bc56-ac5f-4688-8c47-a033811be5b7" name="Section Name" type="Data"><subsheetid>8b0ec712-a5d6-4450-944b-710aa0197896</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>375</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Vision Acuity Uncorrected</initialvalue><private /><alwaysinit /></stage><stage stageid="f5097153-3932-41b8-ac55-6c32642e1daa" name="Section Name" type="Data"><subsheetid>3ad61397-5ca7-4260-9f11-573571ddfb42</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>330</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Blood Pressure</initialvalue><private /><alwaysinit /></stage><stage stageid="38a4eff6-7128-4d9e-b6cf-b5155de46092" name="Section Name" type="Data"><subsheetid>98d23c06-740d-49c4-84da-e3f44b781e3b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>420</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Date Consent</initialvalue><private /><alwaysinit /></stage><stage stageid="5da5c8d1-bc19-4510-85dd-1fb61e465e0e" name="Section Name" type="Data"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>-210</displayx><displayy>345</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Opinion</initialvalue><private /><alwaysinit /></stage><stage stageid="d2a33c41-1705-4902-a484-ceadab617aac" name="Section Name" type="Data"><subsheetid>f64323fc-b01e-4085-820c-a1f41a97e5eb</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Recommendation</initialvalue><private /><alwaysinit /></stage><stage stageid="ed32fae5-2ed3-4d27-af27-d40031674192" name="Section Name" type="Data"><subsheetid>de99b204-1340-4447-9082-40347c13c051</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fbe0d1b0-60ef-413f-9298-90f9820ba2de" name="Extract Vision History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>660</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Vision&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>58b3532d-f805-43d7-87ad-b241681adac9</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="387341cc-d6d2-4cb4-a495-677f8afda134" name="Extract Respiratory History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>585</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Respiratory&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>7e373040-9677-4f98-a7f4-f620a245157e</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="868f1872-4db6-4ade-a24f-0b1095e008fa" name="Anchor47" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>60</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>9df37df1-e1d2-429c-ac28-65e7804c9fcc</onsuccess></stage><stage stageid="9df37df1-e1d2-429c-ac28-65e7804c9fcc" name="Anchor48" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>135</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>721c529e-54f9-483f-ab74-a6180bfa4fc8</onsuccess></stage><stage stageid="721c529e-54f9-483f-ab74-a6180bfa4fc8" name="Anchor49" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>210</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c7acae1e-b05b-4e9f-bddf-56dc5aa7a862</onsuccess></stage><stage stageid="c7acae1e-b05b-4e9f-bddf-56dc5aa7a862" name="Anchor50" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>285</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d1451cf5-2a8e-45e3-b231-64452a01189a</onsuccess></stage><stage stageid="d1451cf5-2a8e-45e3-b231-64452a01189a" name="Anchor51" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f1d29419-1049-4250-af56-ca3f5cb6e633</onsuccess></stage><stage stageid="f1d29419-1049-4250-af56-ca3f5cb6e633" name="Anchor52" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>435</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b30dd0b3-f8d1-4b51-bd20-99e076bb2ce7</onsuccess></stage><stage stageid="b30dd0b3-f8d1-4b51-bd20-99e076bb2ce7" name="Anchor53" type="Anchor"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>510</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7e373040-9677-4f98-a7f4-f620a245157e</onsuccess></stage><stage stageid="5563cf0b-3714-4b21-88ee-9eb24b9f4991" name="Extract Psychiatric History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>510</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Psychiatric&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>b30dd0b3-f8d1-4b51-bd20-99e076bb2ce7</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="23513950-1d6f-4184-8254-936d997ea287" name="Extract Other History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>435</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Other&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>f1d29419-1049-4250-af56-ca3f5cb6e633</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="e80359e3-8622-4299-9b31-31ac58ab88aa" name="Extract Muskulosketal History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>360</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Muskulosketal&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>d1451cf5-2a8e-45e3-b231-64452a01189a</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="17aa59cd-628a-454d-a3d4-fdec72935497" name="Extract Hearing History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>285</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Hearing&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>c7acae1e-b05b-4e9f-bddf-56dc5aa7a862</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="31443827-426e-429a-ba4f-0e0c552dc919" name="Extract Endocrine History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>210</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Endocrine&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>721c529e-54f9-483f-ab74-a6180bfa4fc8</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="a3055411-de22-4220-a4a4-5ad25242f114" name="Extract Drugs and Alcohol History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Drugs and Alcohol&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>9df37df1-e1d2-429c-ac28-65e7804c9fcc</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="b461f6c4-e630-4f0e-b105-f6d5d83a430d" name="Extract CNS History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>60</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History CNS&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>868f1872-4db6-4ade-a24f-0b1095e008fa</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="00bcc3ed-0947-4760-981c-ee2d1e3fc308" name="Extract Cardiovascular History Information" type="SubSheet"><subsheetid>a0c25a6f-294a-44fd-bfc8-b10354ebf4c9</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Information" friendlyname="History Information" expr="[Resource Item Collection]" /><input type="text" name="History Type Name" friendlyname="History Type Name" expr="&quot;History Cardiovascular&quot;" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="Extracted Data Flag" /><output type="text" name="Section Name" friendlyname="Section Name" stage="Section Name" /></outputs><onsuccess>2b992777-7e59-4b7e-a913-5633204b800f</onsuccess><processid>de99b204-1340-4447-9082-40347c13c051</processid></stage><stage stageid="85d38bd5-620f-419b-8cfe-c9e524b1551f" name="History Section Results" type="Collection"><narrative></narrative><displayx>-600</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1b11d51d-e525-4059-bd2d-2ba5ac1f5fa5" name="Patient Information Section Results" type="Collection"><narrative></narrative><displayx>-330</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3dbbda56-997d-4bbf-b228-97ef061a11c0" name="Reason For Examination and Class Section Results" type="Collection"><narrative></narrative><displayx>-510</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9671703f-dcd3-456f-a92c-815e06b2e749" name="Vision Acuity Corrected Section Results" type="Collection"><narrative></narrative><displayx>-420</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fe5afbc9-6de0-4a54-b3a9-cf6375292e5f" name="Vision Acuity Uncorrected Section Results" type="Collection"><narrative></narrative><displayx>-420</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="87101fc0-4bdd-4216-97ae-f1155aed4750" name="Vision Field Section Results" type="Collection"><narrative></narrative><displayx>-510</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a42d00e0-0a5c-488e-9a8f-b341d94da9ba" name="Blood Pressure" type="Data"><narrative></narrative><displayx>-690</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="923f1676-ded3-4700-97b8-ba91c9950d32" name="Narrative" type="Data"><narrative></narrative><displayx>-510</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec483292-0e39-4a63-bfe8-66a676858a8b" name="Date Consent Given" type="Data"><narrative></narrative><displayx>-600</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acdc8fc-bf56-407a-ac7b-d35a777abc08" name="Concerns?" type="Data"><narrative></narrative><displayx>-330</displayx><displayy>465</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6533507c-b254-4400-afef-01deb94b16f0" name="Apply Clean Pass Rule and Load into Results Queue" type="SubSheetInfo"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>-315</displayy><displaywidth>330</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c64bc6db-7a5d-4131-a7c4-43ede7dba29f" name="Start" type="Start"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>-165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Section Results" stage="History Section Results" /><input type="collection" name="Patient Information Section Results" stage="Patient Information Section Results" /><input type="collection" name="Reason For Examination and Class Section Results" stage="Reason For Examination and Class Section Results" /><input type="collection" name="Vision Acuity Corrected Section Results" stage="Vision Acuity Corrected Section Results" /><input type="collection" name="Vision Acuity Uncorrected Section Results" stage="Vision Acuity Uncorrected Section Results" /><input type="collection" name="Vision Field Section Results" stage="Vision Field Section Results" /><input type="flag" name="Concerns?" stage="Concerns?" /><input type="text" name="Blood Pressure" stage="Blood Pressure" /><input type="text" name="Narrative" stage="Narrative" /><input type="text" name="Date Consent Given" stage="Date Consent Given" /><input type="flag" name="Recommendations?" stage="Recommendations?" /></inputs><onsuccess>cd903156-3714-4d7c-8d84-d255ae9b0e3c</onsuccess></stage><stage stageid="c54bbe26-e0f7-4098-9b42-41c4866926d3" name="End" type="End"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>1380</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="Successfully Added to Queue" stage="Successfully Added to Queue" /></outputs></stage><stage stageid="2eeeb329-a6f4-4d78-8b1c-13df2c39a888" name="Apply Clean Pass Rule and Load into Results Queue and Load into Results Queue" type="SubSheet"><narrative></narrative><displayx>0</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Section Results" friendlyname="History Section Results" expr="[History Section Results]" /><input type="collection" name="Patient Information Section Results" friendlyname="Patient Information Section Results" expr="[Patient Information Section Results]" /><input type="collection" name="Reason For Examination and Class Section Results" friendlyname="Reason For Examination and Class Section Results" expr="[Reason For Examination and Class Section Results]" /><input type="collection" name="Vision Acuity Corrected Section Results" friendlyname="Vision Acuity Corrected Section Results" expr="[Vision Acuity Corrected Section Results]" /><input type="collection" name="Vision Acuity Uncorrected Section Results" friendlyname="Vision Acuity Uncorrected Section Results" expr="[Vision Acuity Uncorrected Section Results]" /><input type="collection" name="Vision Field Section Results" friendlyname="Vision Field Section Results" expr="[Vision Field Section Results]" /><input type="flag" name="Concerns?" friendlyname="Concerns?" expr="[Concerns?]" /><input type="text" name="Blood Pressure" friendlyname="Blood Pressure" expr="[Blood Pressure]" /><input type="text" name="Narrative" friendlyname="Narrative" expr="[Narrative]" /><input type="text" name="Date Consent Given" friendlyname="Date Consent Given" expr="[Date Consent Given]" /><input type="flag" name="Recommendations?" friendlyname="Recommendations?" expr="[Recommendations?]" /></inputs><outputs><output type="flag" name="Successfully Added to Queue" friendlyname="Successfully Added to Queue" stage="Successfully Added to Results  Queue" /></outputs><onsuccess>f4f0124c-5aa5-477f-a92e-cc2dd30b9125</onsuccess><processid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</processid></stage><stage stageid="0622af54-0935-43f4-8be7-981b6153c163" name="Success Extracting Data?" type="Decision"><narrative></narrative><displayx>0</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>2eeeb329-a6f4-4d78-8b1c-13df2c39a888</ontrue><onfalse>c7c71f72-3b46-41d4-b33b-bb08678ab5a5</onfalse></stage><stage stageid="c7c71f72-3b46-41d4-b33b-bb08678ab5a5" name="Anchor54" type="Anchor"><narrative></narrative><displayx>180</displayx><displayy>0</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2ca25934-04c5-41ad-aaf6-d94fe35d1477</onsuccess></stage><stage stageid="7f95fcdb-cfe2-46db-a2fd-009425bd00b9" name="Anchor55" type="Anchor"><narrative></narrative><displayx>180</displayx><displayy>435</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>00780584-8512-44b6-83bb-d32767d4db1a</onsuccess></stage><stage stageid="6720fc2b-4faf-46c4-b115-fd5901aec326" name="Input Variables" type="Block"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-75</displayy><displaywidth>330</displaywidth><displayheight>315</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="aa1186c0-416b-4872-904c-91d30d88d2af" name="History Section Results" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6073b551-e17c-41f5-a25a-1e30586a7c4a" name="Patient Information Section Results" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="556bb753-f70e-4711-ba67-42f16b105163" name="Reason For Examination and Class Section Results" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5fe26e7b-40d3-4c87-b821-4209156eae57" name="Vision Acuity Corrected Section Results" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="121cea22-c92f-4e14-8a89-fd517ffc5571" name="Vision Acuity Uncorrected Section Results" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f2daf8f9-f530-491b-b423-d8589330b3a0" name="Vision Field Section Results" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d378a5ac-20de-45eb-85f5-fbbb93592b3a" name="Blood Pressure" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c10d8b88-f42a-409e-9c9c-ebbb75859bbd" name="Narrative" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="832df963-c81a-4c57-92bb-f2a2c0aa2704" name="Date Consent Given" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9624052d-aa67-4d8d-92d0-92936e41f2ab" name="Concerns?" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ae59041-074d-4a2f-a392-17a40ebc2914" name="Environment Variables" type="Block"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>-225</displayy><displaywidth>330</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d2764f79-f354-4cbb-84bb-cb790f42e142" name="Runtime Variables" type="Block"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>270</displayy><displaywidth>330</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4132ea14-2062-42c8-894d-6d0292fc048e" name="Output Variables" type="Block"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>465</displayy><displaywidth>330</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cd903156-3714-4d7c-8d84-d255ae9b0e3c" name="Age Over 80?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>-75</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Patient Information Section Results.Age] &gt;= 80" /><ontrue>aa5de0c3-4e49-4ed8-bc62-2e959a0b6174</ontrue><onfalse>add43c46-b46d-4bac-8e5c-87b966f07071</onfalse></stage><stage stageid="10332f18-d2a9-4dd0-9e45-4816edf3b07d" name="Load Into Results Queue" type="Action"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><displayx>195</displayx><displayy>1200</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Process eDMERs - Results Queue]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Results Queue Collection]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="[Results Queue Collection.Driver License Number]&amp;&quot;: &quot;&amp;[Results Queue Collection.Status]" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>557c18f7-000a-4a62-a6c4-b586b21ab4f6</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="2ca25934-04c5-41ad-aaf6-d94fe35d1477" name="Mark Queue Item as Failed" type="Action"><loginhibit onsuccess="true" /><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><displayx>180</displayx><displayy>255</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[eDMER Item ID]" /><input type="text" name="Exception Reason" friendlyname="Exception Reason" narrative="A description of the reason for the exception" expr="[Fail Reason]" /><input type="flag" name="Retry" friendlyname="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="" /><input type="flag" name="Keep Locked" friendlyname="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="" /></inputs><outputs><output type="text" name="New Item ID" friendlyname="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="" /></outputs><onsuccess>7f95fcdb-cfe2-46db-a2fd-009425bd00b9</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="7e9ebf23-af9e-4db1-875f-c9e9f12a67d1" name="eDMER Item ID" type="Data"><narrative></narrative><displayx>-420</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cd7d39d-0e5a-4fac-828e-618cdba835f6" name="Mark Queue Item as Completed" type="Action"><loginhibit onsuccess="true" /><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><displayx>0</displayx><displayy>345</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[eDMER Item ID]" /></inputs><onsuccess>f793ad80-7eaf-4d22-a2d0-724d2de9642a</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="aa5de0c3-4e49-4ed8-bc62-2e959a0b6174" name="Class 5-8 ?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="([Reason For Examination and Class Section Results.Class]&gt;=5)AND([Reason For Examination and Class Section Results.Class]&lt;=8)" /><ontrue>b4d22351-20ba-484c-b011-c5129734021f</ontrue><onfalse>4b29c2d1-acb1-4802-855f-0db406664af4</onfalse></stage><stage stageid="add43c46-b46d-4bac-8e5c-87b966f07071" name="Anchor56" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>-75</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4b29c2d1-acb1-4802-855f-0db406664af4</onsuccess></stage><stage stageid="4b29c2d1-acb1-4802-855f-0db406664af4" name="Anchor57" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>15</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>bde58cf5-8673-482f-945c-0f2f4b5552a1</onsuccess></stage><stage stageid="717dbca3-395e-4d55-ac5c-efc3d651bef0" name="Determine History" type="SubSheetInfo"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>-135</displayy><displaywidth>180</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="6d17dc30-ba65-4eeb-ab81-858fbabc3702" name="Start" type="Start"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>30</displayx><displayy>-90</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Section Results" stage="History Section Results" /></inputs><onsuccess>b884b974-80c8-40fb-8428-3b1ec7212e96</onsuccess></stage><stage stageid="ba8c8cd3-a066-4093-bab5-5ae0ed77e85b" name="End" type="End"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>30</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="History?" stage="History?" /></outputs></stage><stage stageid="b4d22351-20ba-484c-b011-c5129734021f" name="Determine History" type="SubSheet"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="History Section Results" friendlyname="History Section Results" expr="[History Section Results]" /></inputs><outputs><output type="flag" name="History?" friendlyname="History?" stage="History?" /></outputs><onsuccess>48974588-1dd6-4c64-b39c-d750be7697e1</onsuccess><processid>1b88f3b4-09a5-4942-a891-856dd9029f95</processid></stage><stage stageid="b884b974-80c8-40fb-8428-3b1ec7212e96" name="Convert to Json" type="Action"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>30</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Data" friendlyname="Data" expr="[History Section Results]" /></inputs><outputs><output type="text" name="JSON" friendlyname="JSON" stage="History Json" /></outputs><onsuccess>59ebbf73-9c74-4e62-b7e4-adc4dc3b9bec</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="4e6f221a-20ab-483f-a3ec-12fa279d9e2d" name="History Json" type="Data"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="430e4734-ccd4-4702-92c7-9387e2a6a71d" name="History Section Results" type="Collection"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2b2d4e69-6b9c-43fa-9bef-75f3790ba0a7" name="Set History to False" type="Calculation"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>30</displayx><displayy>225</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>ba8c8cd3-a066-4093-bab5-5ae0ed77e85b</onsuccess><calculation expression="False" stage="History?" /></stage><stage stageid="1c33f66a-c8fc-495e-90b5-7ac9a6155e7a" name="Set History  to True" type="Calculation"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>270</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f8265fd2-1eee-40f8-9912-18829170c4c0</onsuccess><calculation expression="True" stage="History?" /></stage><stage stageid="59ebbf73-9c74-4e62-b7e4-adc4dc3b9bec" name="Any History?" type="Decision"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>30</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([History Json]), &quot;TRUE&quot;) &lt;&gt; 0" /><ontrue>1c33f66a-c8fc-495e-90b5-7ac9a6155e7a</ontrue><onfalse>2b2d4e69-6b9c-43fa-9bef-75f3790ba0a7</onfalse></stage><stage stageid="075418c4-4ee7-46fa-8945-48845dc2d986" name="History?" type="Data"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5406c3d-4987-4495-9a24-b0eb9d52a60a" name="History?" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-90</displayx><displayy>315</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48974588-1dd6-4c64-b39c-d750be7697e1" name="History?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>180</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[History?]" /><ontrue>bde58cf5-8673-482f-945c-0f2f4b5552a1</ontrue><onfalse>94251e40-cec5-4760-b964-331a1a65e8f1</onfalse></stage><stage stageid="bde58cf5-8673-482f-945c-0f2f4b5552a1" name="Anchor58" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>dcf1c869-b5c3-4381-b833-d41956e336be</onsuccess></stage><stage stageid="d3bd716c-04ea-4c93-b961-434c96eca436" name="Anchor59" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>660</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>533f2002-48fc-4aea-ae9d-1b3a39149001</onsuccess></stage><stage stageid="dcf1c869-b5c3-4381-b833-d41956e336be" name="Anchor60" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>5babb30c-c2d1-4fa8-b20f-798b949d577f</onsuccess></stage><stage stageid="f4800a71-a705-4af9-96c3-56d9d8f085de" name="Concerns?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>660</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Concerns?]" /><ontrue>d3bd716c-04ea-4c93-b961-434c96eca436</ontrue><onfalse>2702d4db-3f7e-4789-ad75-036c807b9dde</onfalse></stage><stage stageid="6b84cdaf-9799-492a-b1da-8e5b5bec8540" name="Vision and Physical Meets Driving Criteria?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>360</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Vision Field Section Results.Meets Criteria To Drive?]" /><ontrue>b288d7f2-6ec3-4b12-9445-95319608a3cc</ontrue><onfalse>dcf1c869-b5c3-4381-b833-d41956e336be</onfalse></stage><stage stageid="29e8bafb-2d26-4372-826f-8fb4ba17607f" name="Vision Field Normal and valid Uncorrected Acuity and meets criteria?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>510</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Vision Field Section Results.Vision Field Normal?] AND [Valid Uncorrected Acuity] AND [Vision Field Section Results.Meets Criteria To Drive?]" /><ontrue>a8074e8c-f510-4cbf-92a3-4f72a8f60422</ontrue><onfalse>5babb30c-c2d1-4fa8-b20f-798b949d577f</onfalse></stage><stage stageid="533f2002-48fc-4aea-ae9d-1b3a39149001" name="Anchor61" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>780</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>9f467c70-27c6-4ff3-80ce-0263efce4e4b</onsuccess></stage><stage stageid="9f467c70-27c6-4ff3-80ce-0263efce4e4b" name="Anchor62" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>870</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>09e1bc62-601c-40d6-a33f-76833e7d6a07</onsuccess></stage><stage stageid="b288d7f2-6ec3-4b12-9445-95319608a3cc" name="Anchor63" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>360</displayx><displayy>585</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a8074e8c-f510-4cbf-92a3-4f72a8f60422</onsuccess></stage><stage stageid="84e78b52-47d5-4cf9-98a1-4ff9b61538ea" name="Determine Visual Acuity Status" type="SubSheetInfo"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>-150</displayy><displaywidth>300</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="33590352-881e-4df1-8553-9731f3d4585d" name="Start" type="Start"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Acuity Uncorrected Section Results" stage="Vision Acuity Uncorrected Section Results" /></inputs><onsuccess>13e24aad-6d2b-44eb-8c2a-49b3f78f040d</onsuccess></stage><stage stageid="cf7c7c8e-1d97-4603-b140-50461cf35560" name="End" type="End"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>15</displayx><displayy>270</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="Valid?" stage="Valid?" /><output type="flag" name="Section Marked?" stage="Section Marked?" /></outputs></stage><stage stageid="94251e40-cec5-4760-b964-331a1a65e8f1" name="Determine Uncorrected Visual Acuity Status" type="SubSheet"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>270</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="collection" name="Vision Acuity Uncorrected Section Results" friendlyname="Vision Acuity Uncorrected Section Results" expr="[Vision Acuity Uncorrected Section Results]" /></inputs><outputs><output type="flag" name="Valid?" friendlyname="Valid?" stage="Valid Uncorrected Acuity" /><output type="flag" name="Section Marked?" friendlyname="Section Marked?" stage="Uncorrected Acuity Section Marked?" /></outputs><onsuccess>01730626-9966-4da8-9770-e86d33ac503f</onsuccess><processid>e4944086-e064-41f7-9a7b-119e2ccca7a4</processid></stage><stage stageid="c64e8bba-b68d-4635-bd07-7393b5ae18e2" name="Vision Acuity Uncorrected Section Results" type="Collection"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-390</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="dd872f48-041c-48bf-9f6f-ce919b2ca52e" name="Valid acuity both?" type="Decision"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Numerator]/[Denominator] &gt;= (20/50)" /><ontrue>9f40e31c-71ff-48dc-910c-94c29f9fbab4</ontrue><onfalse>1de1244d-796f-42cb-a2eb-99d9b6e01ab4</onfalse></stage><stage stageid="9fc9ce78-a264-44b5-bfc3-ac59086f3fdc" name="Exttract Numbers" type="MultipleCalculation"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>dd872f48-041c-48bf-9f6f-ce919b2ca52e</onsuccess><steps><calculation expression="InStr([Vision Acuity Uncorrected Section Results.Both], &quot;/&quot;)" stage="Position of slash" /><calculation expression="ToNumber(Left([Vision Acuity Uncorrected Section Results.Both], [Position of slash] - 1))" stage="Numerator" /><calculation expression="ToNumber(Right([Vision Acuity Uncorrected Section Results.Both], Len([Vision Acuity Uncorrected Section Results.Both]) - [Position of slash]))" stage="Denominator" /></steps></stage><stage stageid="7fd82f72-d019-4db8-afd5-0a41fd5a698d" name="Position of slash" type="Data"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ffe3588-3b8e-49bb-a2d8-e92919cfe633" name="Numerator" type="Data"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9867cb42-b00d-4e5a-bdb5-02116e9dbd84" name="Denominator" type="Data"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd670722-1aad-40c2-b62a-c801d2cc762b" name="Valid?" type="Data"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f40e31c-71ff-48dc-910c-94c29f9fbab4" name="Set to Valid" type="Calculation"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>cf7c7c8e-1d97-4603-b140-50461cf35560</onsuccess><calculation expression="True" stage="Valid?" /></stage><stage stageid="1de1244d-796f-42cb-a2eb-99d9b6e01ab4" name="Set to Invalid" type="Calculation"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>9eb8aa68-e50c-4a71-9bb5-9447ab1b85fe</onsuccess><calculation expression="False" stage="Valid?" /></stage><stage stageid="9eb8aa68-e50c-4a71-9bb5-9447ab1b85fe" name="Anchor65" type="Anchor"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>270</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>cf7c7c8e-1d97-4603-b140-50461cf35560</onsuccess></stage><stage stageid="13e24aad-6d2b-44eb-8c2a-49b3f78f040d" name="This section is marked?" type="Decision"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-90</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="Trim([Vision Acuity Uncorrected Section Results.Both]) &lt;&gt; &quot;&quot;" /><ontrue>9fc9ce78-a264-44b5-bfc3-ac59086f3fdc</ontrue><onfalse>83c05fd4-7c45-4e9a-a7a3-6cd853fcd633</onfalse></stage><stage stageid="b6f516da-ac5d-4883-a011-3996394e0038" name="Section Marked?" type="Data"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>360</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="83c05fd4-7c45-4e9a-a7a3-6cd853fcd633" name="Set section not marked" type="Calculation"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b972f0e2-dba0-40f9-9b35-8e0ac3bce924</onsuccess><calculation expression="False" stage="Section Marked?" /></stage><stage stageid="b972f0e2-dba0-40f9-9b35-8e0ac3bce924" name="Anchor66" type="Anchor"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>270</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>cf7c7c8e-1d97-4603-b140-50461cf35560</onsuccess></stage><stage stageid="fe454255-56a9-42b7-a83a-6e89a93c0d77" name="Uncorrected Acuity Section Marked?" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>315</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f01511b-0b82-446d-9dd6-aa9bfc8efc99" name="Valid Uncorrected Acuity" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-270</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="01730626-9966-4da8-9770-e86d33ac503f" name="Uncorrected Acuity Section Marked?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>360</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Uncorrected Acuity Section Marked?]" /><ontrue>29e8bafb-2d26-4372-826f-8fb4ba17607f</ontrue><onfalse>6b84cdaf-9799-492a-b1da-8e5b5bec8540</onfalse></stage><stage stageid="a8074e8c-f510-4cbf-92a3-4f72a8f60422" name="Anchor67" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>585</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f4800a71-a705-4af9-96c3-56d9d8f085de</onsuccess></stage><stage stageid="f8edde26-c428-4d69-89ea-318437ebf132" name="Concerns?" type="Decision"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>450</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="InStr(Upper([Temp Opinion Collection Row.answer.JSON:Array.valueString]), &quot;YES&quot;) &lt;&gt;0" /><ontrue>85e817c1-2405-41c2-8028-eda3664bf50c</ontrue><onfalse>fc972d68-1577-4ad9-a106-d6e8c5625296</onfalse></stage><stage stageid="fc972d68-1577-4ad9-a106-d6e8c5625296" name="Set Concerns to No" type="Calculation"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>600</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a4675daa-1296-4b18-950f-3016b1141288</onsuccess><calculation expression="False" stage="Concerns?" /></stage><stage stageid="a4675daa-1296-4b18-950f-3016b1141288" name="Anchor64" type="Anchor"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative></narrative><displayx>600</displayx><displayy>390</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>fdb9b8a4-ff02-45cc-990d-2d2dd317a56c</onsuccess></stage><stage stageid="5db8b37c-6718-46b9-be83-e5b1f93a6265" name="Recommendations?" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>765</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e937bf38-5c91-4cb9-a70d-14d2eb5a92bd" name="Recommendations?" type="Data"><narrative></narrative><displayx>-330</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5babb30c-c2d1-4fa8-b20f-798b949d577f" name="Anchor68" type="Anchor"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>510</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d3bd716c-04ea-4c93-b961-434c96eca436</onsuccess></stage><stage stageid="2702d4db-3f7e-4789-ad75-036c807b9dde" name="Recommendations?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>780</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Recommendations?]" /><ontrue>533f2002-48fc-4aea-ae9d-1b3a39149001</ontrue><onfalse>205a488d-53ef-4e6c-997c-8b6ae325c1ff</onfalse></stage><stage stageid="3e2c55df-30d4-4ac7-bc1c-ac647f59824b" name="Recommendations?" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8265fd2-1eee-40f8-9912-18829170c4c0" name="Anchor69" type="Anchor"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>270</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ba8c8cd3-a066-4093-bab5-5ae0ed77e85b</onsuccess></stage><stage stageid="205a488d-53ef-4e6c-997c-8b6ae325c1ff" name="Narrative?" type="Decision"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>870</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="Trim([Narrative]) &lt;&gt; &quot;&quot;" /><ontrue>9f467c70-27c6-4ff3-80ce-0263efce4e4b</ontrue><onfalse>7cfa4112-2fe4-49a2-a444-a8b62bebe40c</onfalse></stage><stage stageid="7cfa4112-2fe4-49a2-a444-a8b62bebe40c" name="Set Status to Clean-Pass" type="Calculation"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>990</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>49d5326a-5de5-4f0d-94cc-d07ee8e860c7</onsuccess><calculation expression="&quot;CLEAN_PASS&quot;" stage="Results Queue Collection.Status" /></stage><stage stageid="09e1bc62-601c-40d6-a33f-76833e7d6a07" name="Set Status to Non-Clean-Pass" type="Calculation"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>480</displayx><displayy>1110</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>49d5326a-5de5-4f0d-94cc-d07ee8e860c7</onsuccess><calculation expression="&quot;NON_CLEAN_PASS&quot;" stage="Results Queue Collection.Status" /></stage><stage stageid="36bbe994-2fad-420e-8ad6-de3bf2b324e2" name="Results Queue Collection" type="Collection"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>315</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="Status" type="text" /><field name="Driver License Number" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="Status" type="text" value="" /><field name="Driver License Number" type="text" value="" /></row></initialvalue></stage><stage stageid="49d5326a-5de5-4f0d-94cc-d07ee8e860c7" name="Add Driver License to Queue Collection" type="Calculation"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>1110</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>10332f18-d2a9-4dd0-9e45-4816edf3b07d</onsuccess><calculation expression="[Reason For Examination and Class Section Results.DL]" stage="Results Queue Collection.Driver License Number" /></stage><stage stageid="557c18f7-000a-4a62-a6c4-b586b21ab4f6" name="Set Succes to True" type="Calculation"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>195</displayx><displayy>1290</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>c54bbe26-e0f7-4098-9b42-41c4866926d3</onsuccess><calculation expression="True" stage="Successfully Added to Queue" /></stage><stage stageid="739c6318-25c0-4e9c-8659-e11d2f69d4fb" name="Successfully Added to Queue" type="Data"><subsheetid>a82d7aa2-c5b6-43d5-ae96-2b38c435b0b4</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>540</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="aa2571be-85f4-4382-87ee-32ae803e0ee0" name="Process eDMERs - DL Keyword" type="Data"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>-420</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="fd523928-5dac-4ab1-8d0e-99fedd65a613" name="Which Row?" type="ChoiceStart"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>152b508a-e28d-447b-91a8-b04d2b145edc</groupid><choices><choice expression="InStr(Upper([Temp Reason and Class Collection Row.linkId]), Upper([Process eDMERs - Class Keyword])) &lt;&gt; 0"><name>Class Row</name><distance>60</distance><ontrue>0dd19fa1-5b6a-4be9-b37d-dffc1932db22</ontrue></choice><choice expression="InStr(Upper([Temp Reason and Class Collection Row.linkId]), Upper([Process eDMERs - DL Keyword])) &lt;&gt; 0"><name>Driver License Row</name><distance>135</distance><ontrue>7694e2bf-85d2-4559-b847-a13fe580333b</ontrue></choice></choices></stage><stage stageid="b7d4a92d-ddbe-482d-bb9b-298e8e9336ff" name="Undefined Row?" type="ChoiceEnd"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>15</displayx><displayy>330</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>86e03238-08fd-41e6-af47-c6a4d56f03d3</onsuccess><groupid>152b508a-e28d-447b-91a8-b04d2b145edc</groupid></stage><stage stageid="0dd19fa1-5b6a-4be9-b37d-dffc1932db22" name="Extract Class" type="Calculation"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>285</displayx><displayy>180</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>7d48aeb7-fffa-45f4-a78d-36f8d214fbb1</onsuccess><calculation expression="[Temp Reason and Class Collection Row.answer.JSON:Array.valueDecimal]" stage="Extracted Data.Class" /></stage><stage stageid="7694e2bf-85d2-4559-b847-a13fe580333b" name="Extract DL" type="Calculation"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>285</displayx><displayy>255</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>dfd83ec7-de6f-4847-86d3-ac6f04731ec9</onsuccess><calculation expression="[Temp Reason and Class Collection Row.answer.JSON:Array.valueDecimal]" stage="Extracted Data.DL" /></stage><stage stageid="7d48aeb7-fffa-45f4-a78d-36f8d214fbb1" name="Anchor70" type="Anchor"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>450</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>dfd83ec7-de6f-4847-86d3-ac6f04731ec9</onsuccess></stage><stage stageid="dfd83ec7-de6f-4847-86d3-ac6f04731ec9" name="Anchor71" type="Anchor"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>450</displayx><displayy>255</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>53e7472b-b366-4b88-a66c-a0fb4acacfff</onsuccess></stage><stage stageid="53e7472b-b366-4b88-a66c-a0fb4acacfff" name="Anchor72" type="Anchor"><subsheetid>f51a1c0e-e761-451a-bb82-df0a6c7513fd</subsheetid><narrative></narrative><displayx>450</displayx><displayy>420</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>86e03238-08fd-41e6-af47-c6a4d56f03d3</onsuccess></stage><stage stageid="a15fcd99-5a6f-4412-b1fc-dd44b514e8fc" name="Successfully Added to Results  Queue" type="Data"><narrative></narrative><displayx>-690</displayx><displayy>540</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4f0124c-5aa5-477f-a92e-cc2dd30b9125" name="Success Determining Clean Pass?" type="Decision"><narrative></narrative><displayx>0</displayx><displayy>255</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Successfully Added to Results  Queue]" /><ontrue>5cd7d39d-0e5a-4fac-828e-618cdba835f6</ontrue><onfalse>2ca25934-04c5-41ad-aaf6-d94fe35d1477</onfalse></stage><stage stageid="31f3b02f-5eb5-41e0-8c86-1c5a5b0faf83" name="Input Variables" type="Block"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>-30</displayy><displaywidth>180</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e407b91e-35f1-4321-afd7-d16fb5fa923c" name="Runtime Variables" type="Block"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>150</displayy><displaywidth>180</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2f1510b4-2a33-4a96-a8bf-50ec64c3af3f" name="Output Variables" type="Block"><subsheetid>1b88f3b4-09a5-4942-a891-856dd9029f95</subsheetid><narrative></narrative><displayx>-315</displayx><displayy>330</displayy><displaywidth>180</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="82cf2001-5cff-4bc4-84c4-39d648a09f63" name="Input Variables" type="Block"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>-60</displayy><displaywidth>300</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5ea7d259-4aba-41cf-b996-88f29a033631" name="Runtime Variables" type="Block"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>105</displayy><displaywidth>300</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a2c3fca6-4cb5-4388-8835-95360294c00d" name="Output Variables" type="Block"><subsheetid>e4944086-e064-41f7-9a7b-119e2ccca7a4</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>300</displayy><displaywidth>300</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="42771ea2-9b74-4a81-8e3f-4c770a97a971" name="Block1" type="Block"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-75</displayy><displaywidth>525</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d6e230e8-6dc2-4dca-a940-d29298bcee33" name="No Narrative Available" type="Recover"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>465</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>0f2cafbd-1f4a-4b13-a5f1-2e3038615db5</onsuccess></stage><stage stageid="0f2cafbd-1f4a-4b13-a5f1-2e3038615db5" name="No Narrative Available" type="Resume"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>465</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>cc4b5a83-18a2-47d4-b3c2-9309a31f5009</onsuccess></stage><stage stageid="cc4b5a83-18a2-47d4-b3c2-9309a31f5009" name="Set Narrative as Empty" type="Calculation"><subsheetid>319a6d13-1edc-4442-b62a-a8a37f2aab19</subsheetid><narrative></narrative><displayx>465</displayx><displayy>405</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6ef309ec-e09b-4cf4-9d12-4a199f7a70b1</onsuccess><calculation expression="&quot;&quot;" stage="Narrative" /></stage><stage stageid="9679ea6d-4e6d-4214-8472-3ddf7a8978bc" name="Note1" type="Note"><subsheetid>a77a96a2-6faf-4c43-9f99-53882dffe938</subsheetid><narrative>To Do:

Identify if the answer to concerns cabn be narrative or not.</narrative><displayx>-585</displayx><displayy>-15</displayy><displaywidth>240</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="14" style="Regular" color="FF0000" /></stage><stage stageid="53f591e3-6d7a-409e-8f26-c376bfe78163" name="Set No Available Items to True" type="Calculation"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>360</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>64277f93-39bd-46a0-bcc7-4864fed48c3d</onsuccess><calculation expression="True" stage="No  Available Items" /></stage><stage stageid="a4be8722-4bcb-4331-9aac-330be35634a6" name="No  Available Items" type="Data"><subsheetid>5ab552b1-8426-46d1-8a08-fbdf648fc04c</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>765</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0522588a-b76d-4e4c-92a1-eb5e056d3080" name="No  Available Items" type="Data"><narrative></narrative><displayx>-675</displayx><displayy>315</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7849a4d6-c5e6-4927-81f9-9993a978c6b6" name="No Available dmers  to Process?" type="Decision"><narrative></narrative><displayx>0</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[No  Available Items]" /><ontrue>d5f832da-e192-4fad-8642-721115e91a38</ontrue><onfalse>0622af54-0935-43f4-8be7-981b6153c163</onfalse></stage><stage stageid="d5f832da-e192-4fad-8642-721115e91a38" name="Anchor73" type="Anchor"><narrative></narrative><displayx>300</displayx><displayy>-105</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>76abb7a2-2ec6-4f79-a448-23757a1e176f</onsuccess></stage><stage stageid="76abb7a2-2ec6-4f79-a448-23757a1e176f" name="Anchor74" type="Anchor"><narrative></narrative><displayx>300</displayx><displayy>435</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7f95fcdb-cfe2-46db-a2fd-009425bd00b9</onsuccess></stage><stage stageid="f793ad80-7eaf-4d22-a2d0-724d2de9642a" name="Anchor75" type="Anchor"><narrative></narrative><displayx>-165</displayx><displayy>345</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8e962f59-6a16-404e-b38a-ff747193bd90</onsuccess></stage><stage stageid="8e962f59-6a16-404e-b38a-ff747193bd90" name="Anchor76" type="Anchor"><narrative></narrative><displayx>-165</displayx><displayy>-225</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>96c75a04-57ea-4ecd-810c-01d71afc6a49</onsuccess></stage></process></process>
        <process id="c9f6ddba-a007-4380-8b38-7dcc7889681b" name="Load eDMERs into Queue" published="true" xmlns="http://www.blueprism.co.uk/product/process"><process name="Load eDMERs into Queue" version="1.0" bpversion="6.5.0.12573" narrative="This process applies business rules to eDMERs and determines whether it's a clean-pass or not." byrefcollection="true"><view><camerax>102</camerax><cameray>-101</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="dbdc8112-3a17-4634-9b8d-1599b24b5d2c" type="Normal" published="False"><name>Load eDMERs into Queue</name><view><camerax>-2</camerax><cameray>-282</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81cc37bd-696a-4315-896a-a5bb9d1f0f91" type="Normal" published="False"><name>Validate Get Request Return Code</name><view><camerax>102</camerax><cameray>-33</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b970c91-95db-4ea0-abdf-734f03743d2b" type="Normal" published="False"><name>Send Email Notification on API Issue</name><view><camerax>-79</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bb64089e-4959-4b1c-b34a-aa502797c955" type="Normal" published="False"><name>Validate eDMER</name><view><camerax>102</camerax><cameray>-30</cameray><zoom version="2">1.5625</zoom></view></subsheet><stage stageid="8b9884f4-2c3a-4532-8591-1d59568f6deb" name="Start" type="Start"><narrative></narrative><displayx>15</displayx><displayy>-195</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Arial" size="14" style="Regular" color="000000" /><onsuccess>af81878f-8db7-4d05-b7ad-8affbe9cf3c5</onsuccess></stage><stage stageid="df8b3d39-7cc5-4ea2-bade-6c20579e40c0" name="End" type="End"><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Arial" size="14" style="Regular" color="000000" /></stage><stage stageid="cae2c38c-8cb2-4861-b6ce-88750bbc41f9" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-345</displayx><displayy>-255</displayy><displaywidth>270</displaywidth><displayheight>120</displayheight><font family="Arial" size="14" style="Regular" color="000000" /></stage><stage stageid="1630e763-7a61-4a55-b55e-af7e1b8bbb25" name="Load eDMERs into Queue" type="SubSheetInfo"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-810</displayx><displayy>-285</displayy><displaywidth>480</displaywidth><displayheight>180</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="608f5624-d646-4c71-8b78-a613936aed2c" name="Start" type="Start"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>-480</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b684ba67-ab73-42a7-8396-e6e2c6bfd4f1</onsuccess></stage><stage stageid="a4986cd7-d8de-4014-8b42-bfcc3e68c9b3" name="End" type="End"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>180</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="af81878f-8db7-4d05-b7ad-8affbe9cf3c5" name="Load eDMERs into Queue" type="SubSheet"><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Arial" size="14" style="Regular" color="000000" /><onsuccess>df8b3d39-7cc5-4ea2-bade-6c20579e40c0</onsuccess><processid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</processid></stage><stage stageid="bfa242d5-9b30-4da3-87d2-09254b561880" name="eDMER" type="Collection"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-630</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8df86d9d-5cc9-4422-9d91-77b8bbee37ff" name="Input Variables" type="Block"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-1050</displayx><displayy>-150</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="5cba1657-73d6-4025-b350-5810e2b4a6c6" name="Runtime" type="Block"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-1050</displayx><displayy>105</displayy><displaywidth>480</displaywidth><displayheight>315</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="bb1408ad-255a-44af-9fa3-00ba90c9d682" name="Environment Variables" type="Block"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-885</displayx><displayy>-150</displayy><displaywidth>315</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="eb7a277d-9644-4c12-9d94-71641f94a075" name="Add To New eDMER Queue" type="Action"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><loginhibit onsuccess="true" /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><displayx>-135</displayx><displayy>75</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue to add items to" expr="[Process eDMERs - New eDMER Queue]" /><input type="collection" name="Data" friendlyname="Data" narrative="A collection containing the data, one row for each item to be added" expr="[eDMER]" /><input type="datetime" name="Defer Until" friendlyname="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" friendlyname="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" friendlyname="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="[New eDMER Response.id]" /><input type="text" name="Status" friendlyname="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" friendlyname="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="New eDMER Queue Item ID" /></outputs><onsuccess>3cf0b1dc-c4a5-4873-92f6-825c1c4f21ba</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="c33ff5bf-1885-4263-bdbc-5504cf1c7c4c" name="Process eDMERs - New eDMER Queue" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-810</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="abc377ec-77e8-455c-a0ad-ed1413bd6124" name="Process eDMERs - Invalid eDMER Queue" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-810</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><alwaysinit /></stage><stage stageid="0b2b5a70-b6c1-436d-a685-d1468fb8f354" name="New eDMER Queue Item ID" type="Collection"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-870</displayx><displayy>225</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" description="The Item ID of the work queue item" /></collectioninfo></stage><stage stageid="7a1b5e15-aa00-4b4d-a419-10b49e75a18a" name="Validate Get Request Return Code" type="SubSheetInfo"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>-255</displayy><displaywidth>210</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="f52bd614-8fbc-4854-b82a-b034cd375d13" name="Start" type="Start"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-300</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Get Response Status Code" stage="Get Response Status Code" /></inputs><onsuccess>55bb959e-b9fa-488e-8965-5771cce2f838</onsuccess></stage><stage stageid="88900d16-5179-478f-a90a-8da6862d0c54" name="End" type="End"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>15</displayx><displayy>375</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="Valid Response Code" stage="Valid Response Code" /><output type="flag" name="New eDMER Exists" stage="New eDMER Exists" /></outputs></stage><stage stageid="55bb959e-b9fa-488e-8965-5771cce2f838" name="Return code ?" type="ChoiceStart"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><groupid>2baca188-1b82-4602-8f51-203516337f59</groupid><choices><choice expression="[Get Response Status Code] = &quot;200&quot;"><name>Success 200</name><distance>60</distance><ontrue>b83b09e0-a092-4cb1-a76d-549abef0a238</ontrue></choice><choice expression="[Get Response Status Code] = &quot;204&quot;"><name>No New eDMERs 204</name><distance>165</distance><ontrue>3382d3c8-e972-473f-adfa-dc2dbdfc9fc7</ontrue></choice></choices></stage><stage stageid="3251df73-9e1d-463d-becd-360b0e0af353" name="Invalid/Exception" type="ChoiceEnd"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>ca0e23ad-20d4-4eda-85be-103e02d2f7f1</onsuccess><groupid>2baca188-1b82-4602-8f51-203516337f59</groupid></stage><stage stageid="1754624c-9468-4fec-996b-0a5115d01f9f" name="Get Response Status Code" type="Data"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62406dff-b27e-48da-af43-6396d8c1495f" name="Valid Response Code" type="Data"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>240</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6127ab9a-18cd-47cc-9277-8bddce5e73e4" name="Input Variables" type="Block"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-615</displayx><displayy>-135</displayy><displaywidth>210</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="7e52e7c5-590f-4dee-a018-0a7971ba7648" name="Output Variables" type="Block"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-615</displayx><displayy>195</displayy><displaywidth>210</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="4012e990-a171-46e1-8801-a750e257398a" name="Runtime Variables" type="Block"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-615</displayx><displayy>30</displayy><displaywidth>210</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="3e6e423d-a1fe-44da-902c-c4958a516d58" name="New eDMER Exists" type="Data"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>-465</displayx><displayy>240</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b83b09e0-a092-4cb1-a76d-549abef0a238" name="Set Output Results" type="MultipleCalculation"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>aa85f931-95d6-404b-ab49-f84cfb3faea9</onsuccess><steps><calculation expression="True" stage="New eDMER Exists" /><calculation expression="True" stage="Valid Response Code" /></steps></stage><stage stageid="3382d3c8-e972-473f-adfa-dc2dbdfc9fc7" name="Set Output Results" type="MultipleCalculation"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>210</displayx><displayy>15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>7b7049e6-ca18-48bc-ace9-7d3198720116</onsuccess><steps><calculation expression="False" stage="New eDMER Exists" /><calculation expression="True" stage="Valid Response Code" /></steps></stage><stage stageid="ca0e23ad-20d4-4eda-85be-103e02d2f7f1" name="Set Output Results" type="MultipleCalculation"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>15</displayx><displayy>225</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>364e409d-f671-4742-a177-3479fc8da8f1</onsuccess><steps><calculation expression="False" stage="New eDMER Exists" /><calculation expression="False" stage="Valid Response Code" /></steps></stage><stage stageid="364e409d-f671-4742-a177-3479fc8da8f1" name="Anchor1" type="Anchor"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>15</displayx><displayy>300</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>88900d16-5179-478f-a90a-8da6862d0c54</onsuccess></stage><stage stageid="aa85f931-95d6-404b-ab49-f84cfb3faea9" name="Anchor2" type="Anchor"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-90</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7b7049e6-ca18-48bc-ace9-7d3198720116</onsuccess></stage><stage stageid="7b7049e6-ca18-48bc-ace9-7d3198720116" name="Anchor3" type="Anchor"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>405</displayx><displayy>15</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d756e687-75bb-48f4-94e3-f61819596bf9</onsuccess></stage><stage stageid="d756e687-75bb-48f4-94e3-f61819596bf9" name="Anchor4" type="Anchor"><subsheetid>81cc37bd-696a-4315-896a-a5bb9d1f0f91</subsheetid><narrative></narrative><displayx>405</displayx><displayy>300</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>364e409d-f671-4742-a177-3479fc8da8f1</onsuccess></stage><stage stageid="279f2c69-c6b1-43de-98e1-16bf453fdc4e" name="Send Email Notification on API Issue" type="SubSheetInfo"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>-300</displayy><displaywidth>270</displaywidth><displayheight>180</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="c5c926be-c210-4b87-a4c1-1f5640c84372" name="Start" type="Start"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>0</displayx><displayy>-255</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>d1d7f0a5-3889-4081-8c0f-970f97749414</onsuccess></stage><stage stageid="090d45bd-89d9-47f5-a099-fe067fdf4e3d" name="End" type="End"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>0</displayx><displayy>135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="e7cfbc32-d17b-4dfa-a625-306a52364ee7" name="Send Email Notification on API Issue" type="SubSheet"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b1fcad0c-dc8d-45b4-9f0e-f39bb02b82ef</onsuccess><processid>4b970c91-95db-4ea0-abdf-734f03743d2b</processid></stage><stage stageid="b1fcad0c-dc8d-45b4-9f0e-f39bb02b82ef" name="Anchor6" type="Anchor"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>255</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a4986cd7-d8de-4014-8b42-bfcc3e68c9b3</onsuccess></stage><stage stageid="6453a001-dadb-4786-9ce7-353992af7a29" name="New eDMER available to Process?" type="Decision"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>-210</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Number of New eDMERs] &gt; 0" /><ontrue>aec9c112-ef9a-425f-a54a-99c2bfe791c4</ontrue><onfalse>e9a81723-1048-4d33-87ea-fbf8b898a55d</onfalse></stage><stage stageid="e9a81723-1048-4d33-87ea-fbf8b898a55d" name="Anchor7" type="Anchor"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-210</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6bf515aa-1dbe-44e5-910e-2fe68e0fb466</onsuccess></stage><stage stageid="0bbc9731-d432-4676-bc10-e347dab0b255" name="Validate eDMER" type="SubSheetInfo"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-480</displayx><displayy>-180</displayy><displaywidth>210</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="e7746bfa-4eff-4f9e-bd69-878cb8a7c750" name="Start" type="Start"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-195</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="eDMER Status" stage="eDMER Status" /></inputs><onsuccess>5182941f-951a-4043-b424-eda40153a45e</onsuccess></stage><stage stageid="8c56ae0a-8a3f-44c5-8ba5-528dece2dac4" name="End" type="End"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>15</displayx><displayy>240</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><outputs><output type="flag" name="Valid eDMER" stage="Valid eDMER" /><output type="text" name="Reason" stage="Reason" /></outputs></stage><stage stageid="5182941f-951a-4043-b424-eda40153a45e" name="eDMER has Valid Status?" type="Decision"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="Trim(Upper([eDMER Status])) = &quot;NEW&quot;" /><ontrue>99c163da-169b-440c-8367-5e0f293bef33</ontrue><onfalse>8febdbde-e28e-4f81-b371-9f2c99352e4c</onfalse></stage><stage stageid="5deb050f-b1d5-4d50-b128-e19d70bfab97" name="eDMER Status" type="Data"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10f9247b-d637-45b2-89f2-942a07db40a6" name="Valid eDMER" type="Data"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-510</displayx><displayy>315</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="99c163da-169b-440c-8367-5e0f293bef33" name="Set eDMER to Valid" type="Calculation"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>c1a66671-b656-4714-8de5-c44e74edcd1d</onsuccess><calculation expression="True" stage="Valid eDMER" /></stage><stage stageid="c1a66671-b656-4714-8de5-c44e74edcd1d" name="Anchor9" type="Anchor"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8c56ae0a-8a3f-44c5-8ba5-528dece2dac4</onsuccess></stage><stage stageid="23cb6df0-c6ad-4c48-a6c7-662a1bc3b7c1" name="Anchor10" type="Anchor"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>225</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c1a66671-b656-4714-8de5-c44e74edcd1d</onsuccess></stage><stage stageid="0a5222d2-c175-4b70-be10-608f5ea1d000" name="Input Variables" type="Block"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>-75</displayy><displaywidth>210</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="194e7167-1f9c-4c67-9c29-f4c36de07cd2" name="Runtime Variables" type="Block"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>90</displayy><displaywidth>210</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c6a79710-1e6d-414d-9416-66ee6cd992c2" name="Output Variables" type="Block"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>270</displayy><displaywidth>210</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6bf515aa-1dbe-44e5-910e-2fe68e0fb466" name="Anchor11" type="Anchor"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a4986cd7-d8de-4014-8b42-bfcc3e68c9b3</onsuccess></stage><stage stageid="3cf0b1dc-c4a5-4873-92f6-825c1c4f21ba" name="Anchor12" type="Anchor"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>75</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>92b8e5c8-cb37-4a64-9a89-23829152a3b8</onsuccess></stage><stage stageid="92b8e5c8-cb37-4a64-9a89-23829152a3b8" name="Anchor13" type="Anchor"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>-390</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b684ba67-ab73-42a7-8396-e6e2c6bfd4f1</onsuccess></stage><stage stageid="35096cd7-e051-4ea8-827a-00421679bdae" name="Input Variables" type="Block"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-690</displayx><displayy>-165</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3c0e1b4c-5ac4-4c16-9748-ecf19f4db44c" name="Runtime Variables" type="Block"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-690</displayx><displayy>90</displayy><displaywidth>270</displaywidth><displayheight>240</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="17042b08-17f7-4e57-a568-03302f1571b6" name="Output Variables" type="Block"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-690</displayx><displayy>375</displayy><displaywidth>270</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="df97dff1-3091-45cc-90b7-05ead13d278e" name="Reason" type="Data"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>-435</displayx><displayy>315</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8febdbde-e28e-4f81-b371-9f2c99352e4c" name="Set eDMER to Invalid" type="MultipleCalculation"><subsheetid>bb64089e-4959-4b1c-b34a-aa502797c955</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>23cb6df0-c6ad-4c48-a6c7-662a1bc3b7c1</onsuccess><steps><calculation expression="False" stage="Valid eDMER" /><calculation expression="&quot;The eDMER is not New and may have been processed previously.&quot;" stage="Reason" /></steps></stage><stage stageid="fdecbffa-7cf5-44f1-9659-f39e5910f69d" name="Utility - JSON::JSON to Collection" type="Action"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>510</displayx><displayy>-300</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="3366FF" /><inputs><input type="text" name="json" friendlyname="json" expr="[Clean Pass Bundle]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="eDMER" /></outputs><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="549cea49-950d-4d9a-a709-849d1b07846b" name="eDMER json" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>630</displayx><displayy>-375</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="3366FF" /><datatype>text</datatype><initialvalue xml:space="preserve">{"resourceType":"Bundle","id":"74998bce-e200-43d7-8b7b-80338b17e3f5","type":"message","timestamp":"2020-02-05T19:37:01.5843379+00:00","entry":[{"resource":{"resourceType":"Patient","id":"patient1","identifier":[{"system":"https://fhir.infoway-inforoute.ca/registry/NamingSystem/bc-patient-healthcare-identifier"}],"active":true,"name":[{"use":"official"}],"telecom":[{"system":"phone","use":"mobile"}],"gender":"other","address":[{"use":"home","line":["4444 Werner St."],"country":"CA"}]}},{"resource":{"resourceType":"QuestionnaireResponse","item":[{"linkId":"columns7PatientInformation"},{"linkId":"columns7Provider","item":[{"linkId":"practitioner-nameGiven","answer":[{"valueString":"Ai"}]},{"linkId":"practitioner-nameFamily","answer":[{"valueString":"Bolit"}]},{"linkId":"practitioner-identifier","answer":[{"valueDecimal":77788812}]},{"linkId":"practitioner-contactTelecom","answer":[{"valueString":"(604) 777-8889"}]},{"linkId":"providerAddress","item":[{"linkId":"addressType2","answer":[{"valueString":"http://hl7.org/fhir/ValueSet/address-use"}]},{"linkId":"streetAddress3","answer":[{"valueString":"Suite 200"}]},{"linkId":"streetAddress4","answer":[{"valueString":"1212 W. Broadway St."}]},{"linkId":"city2","answer":[{"valueString":"Vancouver"}]},{"linkId":"province2","answer":[{"valueString":"BC"}]},{"linkId":"postalCode2","answer":[{"valueString":"V2A1L1"}]}]}]},{"linkId":"relationshipWithPatient","item":[{"linkId":"relationshipwithPatient","item":[{"linkId":"familyPhysicianOrNp","answer":[{"valueBoolean":true}]},{"linkId":"locum","answer":[{"valueBoolean":true}]},{"linkId":"walkIn","answer":[{"valueBoolean":false}]},{"linkId":"firstVisit","answer":[{"valueBoolean":true}]},{"linkId":"np","answer":[{"valueBoolean":false}]},{"linkId":"specialist","answer":[{"valueBoolean":false}]}]}]},{"linkId":"patient","item":[{"linkId":"patient-identifier","answer":[{"valueString":"98961112221"}]},{"linkId":"patient-nameFamily","answer":[{"valueString":"Zomarev"}]},{"linkId":"patient-nameGiven","answer":[{"valueString":"Pavel"}]},{"linkId":"patient-nameGiven-middle","answer":[{"valueString":"V."}]},{"linkId":"patient-birthDate","answer":[{"valueDateTime":"1930-12-29"}]},{"linkId":"patient-Gender","answer":[{"valueString":"other"}]},{"linkId":"patient-contactTelecom","answer":[{"valueString":"(778) 111-2220"}]},{"linkId":"patientAddress","item":[{"linkId":"address.use","answer":[{"valueString":"home"}]},{"linkId":"streetAddress1","answer":[{"valueString":"Apt 111."}]},{"linkId":"address.line2","answer":[{"valueString":"4444 Werner St."}]},{"linkId":"city","answer":[{"valueString":"Revelstoke"}]},{"linkId":"province","answer":[{"valueString":"BC"}]},{"linkId":"postalCode","answer":[{"valueString":"V6A1W1"}]}]}]},{"linkId":"panel","item":[{"linkId":"ReasonforExamination","answer":[{"valueString":"Lyft license"}]},

{"linkId":"patientDriversLicenseNumber","answer":[{"valueDecimal":77788899}]},

{"linkId":"columns7MedicalIssued","answer":[{"valueDateTime":"2020-01-06"}]},{"linkId":"columns7Class","answer":[{"valueDecimal":5}]}]},{"linkId":"panel2","item":[{"linkId":"vision","item":[{"linkId":"acuityLoss","answer":[{"valueBoolean":false}]},{"linkId":"fieldDefect","answer":[{"valueBoolean":false}]},{"linkId":"eyeDisease","answer":[{"valueBoolean":false}]},{"linkId":"other","answer":[{"valueBoolean":false}]}]},{"linkId":"visionOther","answer":[{"valueString":"visvis"}]}]},{"linkId":"panel3","item":[{"linkId":"hearing","item":[{"linkId":"hearingLoss","answer":[{"valueBoolean":false}]},{"linkId":"vertigo","answer":[{"valueBoolean":false}]},{"linkId":"other","answer":[{"valueBoolean":false}]}]},{"linkId":"vertigoDetails","answer":[{"valueString":"withoutWarnings"}]},{"linkId":"dateoflastvertigoepisode","answer":[{"valueDateTime":"2020-01-07"}]},{"linkId":"other","answer":[{"valueString":"fdffdfdfdfd"}]}]},{"linkId":"panel4","item":[{"linkId":"syncope","answer":[{"valueBoolean":false}]},{"linkId":"cad","answer":[{"valueBoolean":false}]},{"linkId":"nyhaFunctionalClass","answer":[{"valueString":"aaa"}]},{"linkId":"arrhythmia","answer":[{"valueBoolean":false}]},{"linkId":"pacemaker","answer":[{"valueBoolean":false}]},{"linkId":"icd","answer":[{"valueBoolean":false}]},{"linkId":"congestiveheartfailure","answer":[{"valueBoolean":false}]},{"linkId":"aneurysm","answer":[{"valueBoolean":false}]},{"linkId":"aneurysmSite","answer":[{"valueString":"no ane"}]},{"linkId":"aneurysmSize","answer":[{"valueString":"xoxo"}]},{"linkId":"peripheralvasculardisease","answer":[{"valueBoolean":false}]},{"linkId":"cvOther","answer":[{"valueBoolean":false}]},{"linkId":"cvotherdetails","answer":[{"valueString":"no dets"}]}]},{"linkId":"HistoryPanel4","item":[{"linkId":"columnsCvatia","answer":[{"valueBoolean":false}]},{"linkId":"columnsCvatiaDate","answer":[{"valueDateTime":"2020-01-06"}]},{"linkId":"columnsSeizureDisorder","answer":[{"valueBoolean":false}]},{"linkId":"columnsSeizuredisorder","answer":[{"valueString":"provoked"}]},{"linkId":"columnsDateofLastSeizure","answer":[{"valueDateTime":"2019-12-29"}]},{"linkId":"columnsNarcolepsy","answer":[{"valueBoolean":false}]},{"linkId":"columnsCongenitalConditionCerebralPalsyetc","answer":[{"valueBoolean":false}]},{"linkId":"columnsProgressiveDeficitParkinsonsMsalSetc","answer":[{"valueBoolean":false}]},{"linkId":"columnsStabledeficitParaplegiaNerveDamageetc","answer":[{"valueBoolean":false}]},{"linkId":"columnsCognitiveImpairment","answer":[{"valueBoolean":false}]},{"linkId":"columnsDementiaDiagnosis","answer":[{"valueBoolean":false}]},{"linkId":"columnsGdsGlobalDementiaScale","answer":[{"valueDecimal":2232323233232323}]},{"linkId":"columnsSignificantHeadInjury","answer":[{"valueBoolean":false}]},{"linkId":"columnsOther6","answer":[{"valueBoolean":false}]},{"linkId":"columnsOtherpleasespecify","answer":[{"valueString":"no cns"}]}]},{"linkId":"HistoryPanel6","item":[{"linkId":"columnsOxygenrequiredwhendriving","answer":[{"valueBoolean":false}]},{"linkId":"columnsObstructivesleepapnea","answer":[{"valueBoolean":false}]},{"linkId":"columnsCpapCompliant","answer":[{"valueBoolean":false}]},{"linkId":"columnsCpapCompliantdetails","answer":[{"valueString":"no cpap"}]},{"linkId":"columnsApneaHyponeaIndexAhi","answer":[{"valueBoolean":false}]},{"linkId":"columnsEpworthScore","answer":[{"valueBoolean":false}]},{"linkId":"columnsEpworthScore2","answer":[{"valueDecimal":11121}]}]},{"linkId":"HistoryPanel8","item":[{"linkId":"historyPanel8Diabetes","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8SevereHypoglycemia","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8HypoglycemiaUnawareness","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8StableBgControl","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8OtherEndocrine","answer":[{"valueBoolean":false}]},{"linkId":"columnsOther7","answer":[{"valueString":"no endo"}]}]},{"linkId":"columnsHx1Panel","item":[{"linkId":"amputation","answer":[{"valueBoolean":false}]},{"linkId":"limb","answer":[{"valueString":"sssdfsdfdsfd"}]},{"linkId":"date","answer":[{"valueDateTime":"2020-01-06"}]},{"linkId":"weakness","answer":[{"valueBoolean":false}]},{"linkId":"rangeofmotionloss","answer":[{"valueBoolean":false}]},{"linkId":"musculoskeletalOther","answer":[{"valueBoolean":false}]},{"linkId":"other2","answer":[{"valueString":"o mos"}]}]},{"linkId":"HistoryPanel7","item":[{"linkId":"historyPanel7Psychosis","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7SevereDepression","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7Impairedjudgmentinsight","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7MedicationnonCompliance","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7Stablepsychiatriccondition","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7OtherPsych","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel9","item":[{"linkId":"columnsAlcoholordrugabuseinpast2Years","answer":[{"valueBoolean":false}]},{"linkId":"columnsAlcoholrelatedseizure","answer":[{"valueBoolean":false}]},{"linkId":"columnsPrescribeddrugsthatcouldimpair","answer":[{"valueBoolean":false}]}]},{"linkId":"historyOtherConditions","item":[{"linkId":"columnsOtherConditions","answer":[{"valueString":"otherSeeGuide"}]},{"linkId":"historyOtherConditionsOther","answer":[{"valueString":"no notes"}]}]},{"linkId":"visionScreeningVisualAcuityUncorrected2","item":[{"linkId":"visionScreeningVisualAcuityUncorrected","answer":[{"valueBoolean":false}]},{"linkId":"visionScreeningUncorrectedRight","answer":[{"valueString":"20/50"}]},{"linkId":"visionScreeningUncorrectedLeft","answer":[{"valueString":"20/50"}]},{"linkId":"visionScreeningUncorrectedBoth","answer":[{"valueString":"20/50"}]}]},{"linkId":"visionScreeningVisualAcuityCorrected2","item":[{"linkId":"visionScreeningVisualAcuityCorrected","answer":[{"valueBoolean":false}]},{"linkId":"visionScreeningCorrectedRight","answer":[{"valueString":"20/50"}]},{"linkId":"visionScreeningCorrectedLeft","answer":[{"valueString":"20/50"}]},{"linkId":"visionScreeningCorrectedBoth","answer":[{"valueString":"20/50"}]}]},{"linkId":"visionScreeningVisualField","item":[{"linkId":"visionScreeningVisualFieldNormal","answer":[{"valueString":"normal"}]},{"linkId":"visionScreeningMeetCriteriaYes","answer":[{"valueBoolean":true}]}]},{"linkId":"visionScreeningBloodPressure","item":[{"linkId":"visionScreeningBloodPressureValue","answer":[{"valueString":"200/100"}]}]},{"linkId":"panel5","item":[{"linkId":"doespatienthaveaconditionthatmayaffectdriving","answer":[{"valueString":"no"}]},{"linkId":"recommendfollowupinYears","answer":[{"valueDecimal":2}]}]},{"linkId":"panel6","item":[{"linkId":"columns4Panel2Narrative","answer":[{"valueString":""}]}]},{"linkId":"columns5Panel","item":[{"linkId":"specialistConsult","answer":[{"valueBoolean":false}]},{"linkId":"roadtesttoassess","answer":[{"valueBoolean":false}]},{"linkId":"roadtesttoassessdetails","answer":[{"valueString":"2"}]},{"linkId":"restrictions","answer":[{"valueBoolean":false}]},{"linkId":"reasonandTypeofRestrictions","answer":[{"valueString":"sasas"}]}]},{"linkId":"columns5Panel2","item":[{"linkId":"columns5Panel2DateConsentandCertificationGiven","answer":[{"valueDateTime":"2020-01-15"}]}]}]}}]}</initialvalue><private /><alwaysinit /></stage><stage stageid="4af1b60c-d6ad-413d-aca4-96fb0f8c93c6" name="Send Email Message" type="Action"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>0</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="To" friendlyname="To" expr="[Process eDMERs - Failure email recepient addresses]" /><input type="text" name="CC" friendlyname="CC" expr="" /><input type="text" name="BCC" friendlyname="BCC" expr="" /><input type="text" name="Subject" friendlyname="Subject" expr="[Email Subject]" /><input type="text" name="Body" friendlyname="Body" expr="[Email Message]" /><input type="text" name="Attachements" friendlyname="Attachements" expr="" /></inputs><onsuccess>090d45bd-89d9-47f5-a099-fe067fdf4e3d</onsuccess><resource object="DMFT - Email messages" action="Send Email" /></stage><stage stageid="7c696558-07d1-4eea-8d99-789c4220cf13" name="Process eDMERs - Failure email recepient addresses" type="Data"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><loginhibit /><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="d1d7f0a5-3889-4081-8c0f-970f97749414" name="Prepare Email Subject and Message" type="MultipleCalculation"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>0</displayx><displayy>-150</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>4af1b60c-d6ad-413d-aca4-96fb0f8c93c6</onsuccess><steps><calculation expression="&quot;Invalid Response Received From DMFT API&quot;" stage="Email Subject" /><calculation expression="&quot;Failed Attempt to Query for eDMERs through the DMFT API&quot;" stage="Email Message" /></steps></stage><stage stageid="05d3e65b-cd9a-4cbd-b945-ffdf4d16cc9a" name="Environment Variables" type="Block"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-540</displayx><displayy>-165</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9891fd7e-edad-46aa-ad93-e12ccebb8988" name="Email Subject" type="Data"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="284069f0-9bc4-454c-a5ad-e80c4b1b835c" name="Email Message" type="Data"><subsheetid>4b970c91-95db-4ea0-abdf-734f03743d2b</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f38d133d-5925-48da-969a-7b1d053164f1" name="Note1" type="Note"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative>To Do:

Add exception handling and success data items in each page/process.

In case of each exception, send email to support.</narrative><displayx>540</displayx><displayy>-45</displayy><displaywidth>390</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="14" style="Regular" color="FF0000" /></stage><stage stageid="2cc5a5ab-e6e5-4dc9-818e-3d43743752dd" name="non clean pass json" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>630</displayx><displayy>-300</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="3366FF" /><datatype>text</datatype><initialvalue xml:space="preserve">{"resourceType":"Bundle","id":"2012d604-ae0b-47e5-8b8d-23fdb549324a","type":"collection","timestamp":"2020-02-19T21:41:49.7644787+00:00","entry":[{"resource":{"resourceType":"Patient","id":"patient1","identifier":[{"system":"https://fhir.infoway-inforoute.ca/registry/NamingSystem/bc-patient-healthcare-identifier","value":"69042923-d915-40e1-b1e0-7692a08ff171"}],"active":true,"name":[{"use":"official","family":"Alc?ntar","given":["David"]}],"telecom":[{"system":"phone","value":"555-618-7408","use":"home"}],"gender":"male","birthDate":"1960-08-07","address":[{"use":"home","line":["559 Funk Mill Suite 66"],"city":"Woburn","state":"Massachusetts","postalCode":"01801","country":"CA"}]}},{"resource":{"resourceType":"Practitioner","identifier":[{"system":"https://ehealthbc.ca/API/FHIR/NamingSystem/ca-bc-msp","value":"93370"}],"active":true,"name":[{"use":"official","family":"Orn","given":["Albertine"]}],"address":[{"use":"home","line":["66B CONCORD STREET"],"city":"WILMINGTON","state":"MA","postalCode":"1887","country":"CA"}]}},{"resource":{"resourceType":"QuestionnaireResponse","meta":{"lastUpdated":"2020-02-19T21:41:49.7659401+00:00","source":"RSBC Driver's Medical Exam","tag":[{"system":"machineName","code":"poc-phsaformrepository:roadsafetydmer"},{"system":"name","code":"roadsafetydmer"},{"system":"project","code":"5cfe73398a40823c62361cde"},{"system":"created","code":"2020-02-06"},{"system":"modified","code":"2020-02-13"},{"system":"_vid","code":"0"},{"system":"tags","code":"anami,common,publish"}]},"item":[{"linkId":"patientInformation","text":"Patient Information","item":[{"linkId":"patient.identifier.value","text":"BC Personal Health Number","answer":[{"valueString":"69042923-d915-40e1-b1e0-7692a08ff171"}]},{"linkId":"patient.name.family","text":"Patient Last Name","answer":[{"valueString":"Alc?ntar"}]},{"linkId":"patient.name.given","text":"Patient First Name","answer":[{"valueString":"David"}]},{"linkId":"patient.BirthDate","text":"Date of Birth","answer":[{"valueString":"1960-08-07"}]},{"linkId":"patient.gender","text":"Gender","answer":[{"valueString":"male"}]},{"linkId":"patient.telecom.value","text":"Phone Number","answer":[{"valueString":"555-618-7408"}]},{"linkId":"patientInformationAddress","text":"Address","item":[{"linkId":"address.use","text":"Address Type","answer":[{"valueString":"home"}]},{"linkId":"address.line2","text":"Street Address 2","answer":[{"valueString":"559 Funk Mill Suite 66"}]},{"linkId":"address.city","text":"City","answer":[{"valueString":"Woburn"}]},{"linkId":"address.state","text":"Province","answer":[{"valueString":"Massachusetts"}]},{"linkId":"address.postalCode","text":"Postal Code","answer":[{"valueString":"01801"}]}]}]},{"linkId":"providerInformation","text":"Provider Information","item":[{"linkId":"practitioner.name.given","text":"Provider First Name","answer":[{"valueString":"Albertine"}]},{"linkId":"practitioner.name.family","text":"Provider Last Name","answer":[{"valueString":"Orn"}]},{"linkId":"practitioner.identifier.type","text":"Provider Identifier Type","answer":[{"valueString":"mspid"}]},{"linkId":"practitioner.identifier.mspId","text":"MSP ID#","answer":[{"valueString":"93370"}]},{"linkId":"providerInformationAddress","text":"Address","item":[{"linkId":"address.use","text":"Address Type","answer":[{"valueString":"work"}]},{"linkId":"address.line2","text":"Street Address 2","answer":[{"valueString":"66B CONCORD STREET"}]},{"linkId":"address.city","text":"City","answer":[{"valueString":"WILMINGTON"}]},{"linkId":"address.state","text":"Province","answer":[{"valueString":"MA"}]},{"linkId":"address.postalCode","text":"Postal Code","answer":[{"valueString":"1887"}]}]}]},{"linkId":"examinationDate","text":"Examination Date","answer":[{"valueDateTime":"2020-02-19"}]},{"linkId":"relationshipwithPatient","text":"Provider's Relationship with Patient","item":[{"linkId":"familyPhysicianOrNp","answer":[{"valueBoolean":true}]},{"linkId":"locum","answer":[{"valueBoolean":false}]},{"linkId":"walkIn","answer":[{"valueBoolean":false}]},{"linkId":"firstVisit","answer":[{"valueBoolean":false}]},{"linkId":"np","answer":[{"valueBoolean":false}]},{"linkId":"specialist","answer":[{"valueBoolean":false}]}]},{"linkId":"panel","text":"","item":[{"linkId":"ReasonforExamination","text":"Reason for Examination","answer":[{"valueString":"Diabetes"}]},{"linkId":"patientDriversLicenseNumber","text":"Driver's License Number","answer":[{"valueDecimal":7162534}]},{"linkId":"columns7MedicalIssued","text":"Medical Issued","answer":[{"valueDateTime":"2020-02-01"}]},{"linkId":"columns7Class","text":"Current License Class","answer":[{"valueDecimal":5}]}]},{"linkId":"panel2","text":"VISION","item":[{"linkId":"vision","text":"VISION","item":[{"linkId":"acuityLoss","answer":[{"valueBoolean":false}]},{"linkId":"fieldDefect","answer":[{"valueBoolean":false}]},{"linkId":"eyeDisease","answer":[{"valueBoolean":false}]},{"linkId":"other","answer":[{"valueBoolean":false}]}]}]},{"linkId":"panel3","text":"HEARING","item":[{"linkId":"hearing","text":"HEARING","item":[{"linkId":"hearingLoss","answer":[{"valueBoolean":false}]},{"linkId":"vertigo","answer":[{"valueBoolean":false}]},{"linkId":"other","answer":[{"valueBoolean":false}]}]}]},{"linkId":"panel4","text":"CARDIOVASCULAR","item":[{"linkId":"syncope","text":"Syncope","answer":[{"valueBoolean":false}]},{"linkId":"cad","text":"CAD","answer":[{"valueBoolean":false}]},{"linkId":"arrhythmia","text":"Arrhythmia","answer":[{"valueBoolean":false}]},{"linkId":"pacemaker","text":"Pacemaker","answer":[{"valueBoolean":false}]},{"linkId":"icd","text":"ICD","answer":[{"valueBoolean":false}]},{"linkId":"congestiveheartfailure","text":"Congestive heart failure","answer":[{"valueBoolean":false}]},{"linkId":"aneurysm","text":"Aneurysm","answer":[{"valueBoolean":false}]},{"linkId":"peripheralvasculardisease","text":"Peripheral vascular disease","answer":[{"valueBoolean":false}]},{"linkId":"cvOther","text":"Cardiovascular - Other","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel4","text":"CNS","item":[{"linkId":"columnsCvatia","text":"CVA/TIA","answer":[{"valueBoolean":false}]},{"linkId":"columnsSeizureDisorder","text":"Seizure Disorder","answer":[{"valueBoolean":false}]},{"linkId":"columnsCongenitalConditionCerebralPalsyetc","text":"Congenital Condition (Cerebral Palsy, etc.)","answer":[{"valueBoolean":false}]},{"linkId":"columnsNarcolepsy","text":"Narcolepsy","answer":[{"valueBoolean":false}]},{"linkId":"columnsProgressiveDeficitParkinsonsMsalSetc","text":"Progressive Deficit (Parkinson's, MS, ALS, etc.)","answer":[{"valueBoolean":false}]},{"linkId":"columnsStabledeficitParaplegiaNerveDamageetc","text":"Stable deficit (Paraplegia, Nerve Damage, etc.)","answer":[{"valueBoolean":false}]},{"linkId":"columnsDementiaDiagnosis","text":"Dementia Diagnosis","answer":[{"valueBoolean":false}]},{"linkId":"columnsSignificantHeadInjury","text":"Significant Head Injury","answer":[{"valueBoolean":false}]},{"linkId":"columnsOther6","text":"Other (CNS)","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel6","text":"RESPIRATORY (section 8)","item":[{"linkId":"columnsOxygenrequiredwhendriving","text":"Oxygen required when driving","answer":[{"valueBoolean":false}]},{"linkId":"columnsObstructivesleepapnea","text":"Obstructive sleep apnea","answer":[{"valueBoolean":false}]},{"linkId":"columnsApneaHyponeaIndexAhi","text":"Apnea Hyponea Index(AHI)","answer":[{"valueBoolean":false}]},{"linkId":"columnsEpworthScore","text":"Epworth Score","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel8","text":"ENDOCRINE (Section 9)","item":[{"linkId":"historyPanel8Diabetes","text":"Diabetes","answer":[{"valueBoolean":true}]},{"linkId":"historyPanel8SevereHypoglycemia","text":"Severe Hypoglycemia","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8HypoglycemiaUnawareness","text":"Hypoglycemia Unawareness","answer":[{"valueBoolean":true}]},{"linkId":"columnsHypoglycemiaUnawarenessDate","text":"Hypoglycemia Unawareness Date","answer":[{"valueDateTime":"2020-01-08"}]},{"linkId":"historyPanel8StableBgControl","text":"Stable BG Control","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8OtherEndocrine","text":"Other (Endocrine)","answer":[{"valueBoolean":false}]}]},{"linkId":"columnsHx1Panel","text":"MUSCULOSKELETAL","item":[{"linkId":"amputation","text":"Amputation","answer":[{"valueBoolean":false}]},{"linkId":"weakness","text":"Weakness","answer":[{"valueBoolean":false}]},{"linkId":"rangeofmotionloss","text":"Range of motion loss","answer":[{"valueBoolean":false}]},{"linkId":"musculoskeletalOther","text":"Other","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel7","text":"PSYCHIATRIC (Section 12)","item":[{"linkId":"historyPanel7Psychosis","text":"Psychosis","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7SevereDepression","text":"Severe Depression","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7Impairedjudgmentinsight","text":"Impaired judgment, insight","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7MedicationnonCompliance","text":"Medication non-compliance","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7Stablepsychiatriccondition","text":"Stable psychiatric condition","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7OtherPsych","text":"Other (Psych)","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel9","text":"DRUGS AND ALCOHOL (Sections 13 and 14)","item":[{"linkId":"columnsAlcoholordrugabuseinpast2Years","text":"Alcohol or drug abuse in past 2 years","answer":[{"valueBoolean":false}]},{"linkId":"columnsAlcoholrelatedseizure","text":"Alcohol related seizure","answer":[{"valueBoolean":false}]},{"linkId":"columnsPrescribeddrugsthatcouldimpair","text":"Prescribed drugs that could impair","answer":[{"valueBoolean":false}]}]},{"linkId":"historyOtherConditions","text":"OTHER CONDITIONS"},{"linkId":"visionScreeningVisualAcuityUncorrected2","text":"Visual Acuity - Uncorrected","item":[{"linkId":"visionScreeningVisualAcuityUncorrected","text":"Uncorrected","answer":[{"valueBoolean":true}]},{"linkId":"visionScreeningUncorrectedBoth","text":"Both","answer":[{"valueString":"20/30"}]}]},{"linkId":"visionScreeningVisualAcuityCorrected2","text":"Visual Acuity - Corrected","item":[{"linkId":"visionScreeningVisualAcuityCorrected","text":"Corrected","answer":[{"valueBoolean":true}]},{"linkId":"visionScreeningCorrectedBoth","text":"Both","answer":[{"valueString":"20/20"}]}]},{"linkId":"visionScreeningVisualField","text":"Visual Field","item":[{"linkId":"visionScreeningMeetCriteriaYes","text":"Yes","answer":[{"valueBoolean":true}]}]},{"linkId":"visionScreeningBloodPressure","text":"Blood Pressure","item":[{"linkId":"visionScreeningBloodPressureValue","text":"Blood Pressure","answer":[{"valueString":"140/90"}]}]},{"linkId":"panel5","text":"","item":[{"linkId":"doespatienthaveaconditionthatmayaffectdriving","text":"Does patient have a condition that may affect driving?","answer":[{"valueString":"mayInFuture"}]},{"linkId":"recommendfollowupinYears","text":"Recommend follow up (in number of  years)","answer":[{"valueDecimal":1}]}]},{"linkId":"panel6","text":""},{"linkId":"columns5Panel","text":"","item":[{"linkId":"specialistConsult","text":"Specialist Consult","answer":[{"valueBoolean":false}]},{"linkId":"roadtesttoassess","text":"Road test to assess","answer":[{"valueBoolean":false}]},{"linkId":"restrictions","text":"Restrictions","answer":[{"valueBoolean":false}]}]},{"linkId":"columns5Panel2","text":"","item":[{"linkId":"columns5Panel2DateConsentandCertificationGiven","text":"Date Consent and Certification Given","answer":[{"valueDateTime":"2020-02-19"}]}]}]}}]}</initialvalue><private /><alwaysinit /></stage><stage stageid="b8bd2e64-3675-4828-b216-922b030af726" name="Clean Pass Bundle" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>615</displayx><displayy>-225</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="3366FF" /><datatype>text</datatype><initialvalue xml:space="preserve">{"resourceType":"Bundle","id":"4073c583-42cb-4b62-99f3-03c206080e99","type":"collection","timestamp":"2020-02-19T21:29:44.6810642+00:00","entry":[{"resource":{"resourceType":"Patient","id":"patient1","identifier":[{"system":"https://fhir.infoway-inforoute.ca/registry/NamingSystem/bc-patient-healthcare-identifier","value":"b46f2034-a0c8-4086-9f14-a7e926e701d4"}],"active":true,"name":[{"use":"official","family":"Armstrong","given":["Oswaldo"]}],"telecom":[{"system":"phone","value":"555-740-2421","use":"home"}],"gender":"male","birthDate":"1934-12-05","address":[{"use":"home","line":["710 Stroman Brook"],"city":"Wrentham","state":"Massachusetts","postalCode":"02093","country":"CA"}]}},{"resource":{"resourceType":"Practitioner","identifier":[{"system":"https://ehealthbc.ca/API/FHIR/NamingSystem/ca-bc-msp","value":"93370"}],"active":true,"name":[{"use":"official","family":"Orn","given":["Albertine"]}],"address":[{"use":"home","line":["66B CONCORD STREET"],"city":"WILMINGTON","state":"MA","postalCode":"1887","country":"CA"}]}},{"resource":{"resourceType":"QuestionnaireResponse","meta":{"lastUpdated":"2020-02-19T21:29:44.7751467+00:00","source":"RSBC Driver's Medical Exam","tag":[{"system":"machineName","code":"poc-phsaformrepository:roadsafetydmer"},{"system":"name","code":"roadsafetydmer"},{"system":"project","code":"5cfe73398a40823c62361cde"},{"system":"created","code":"2020-02-06"},{"system":"modified","code":"2020-02-13"},{"system":"_vid","code":"0"},{"system":"tags","code":"anami,common,publish"}]},"item":[{"linkId":"patientInformation","text":"Patient Information","item":[{"linkId":"patient.identifier.value","text":"BC Personal Health Number","answer":[{"valueString":"b46f2034-a0c8-4086-9f14-a7e926e701d4"}]},{"linkId":"patient.name.family","text":"Patient Last Name","answer":[{"valueString":"Armstrong"}]},{"linkId":"patient.name.given","text":"Patient First Name","answer":[{"valueString":"Oswaldo"}]},{"linkId":"patient.BirthDate","text":"Date of Birth","answer":[{"valueString":"1934-12-05"}]},{"linkId":"patient.gender","text":"Gender","answer":[{"valueString":"male"}]},{"linkId":"patient.telecom.value","text":"Phone Number","answer":[{"valueString":"555-740-2421"}]},{"linkId":"patientInformationAddress","text":"Address","item":[{"linkId":"address.use","text":"Address Type","answer":[{"valueString":"home"}]},{"linkId":"address.line2","text":"Street Address 2","answer":[{"valueString":"710 Stroman Brook"}]},{"linkId":"address.city","text":"City","answer":[{"valueString":"Wrentham"}]},{"linkId":"address.state","text":"Province","answer":[{"valueString":"Massachusetts"}]},{"linkId":"address.postalCode","text":"Postal Code","answer":[{"valueString":"02093"}]}]}]},{"linkId":"providerInformation","text":"Provider Information","item":[{"linkId":"practitioner.name.given","text":"Provider First Name","answer":[{"valueString":"Albertine"}]},{"linkId":"practitioner.name.family","text":"Provider Last Name","answer":[{"valueString":"Orn"}]},{"linkId":"practitioner.identifier.type","text":"Provider Identifier Type","answer":[{"valueString":"mspid"}]},{"linkId":"practitioner.identifier.mspId","text":"MSP ID#","answer":[{"valueString":"93370"}]},{"linkId":"providerInformationAddress","text":"Address","item":[{"linkId":"address.use","text":"Address Type","answer":[{"valueString":"work"}]},{"linkId":"address.line2","text":"Street Address 2","answer":[{"valueString":"66B CONCORD STREET"}]},{"linkId":"address.city","text":"City","answer":[{"valueString":"WILMINGTON"}]},{"linkId":"address.state","text":"Province","answer":[{"valueString":"MA"}]},{"linkId":"address.postalCode","text":"Postal Code","answer":[{"valueString":"1887"}]}]}]},{"linkId":"examinationDate","text":"Examination Date","answer":[{"valueDateTime":"2020-02-19"}]},{"linkId":"relationshipwithPatient","text":"Provider's Relationship with Patient","item":[{"linkId":"familyPhysicianOrNp","answer":[{"valueBoolean":true}]},{"linkId":"locum","answer":[{"valueBoolean":false}]},{"linkId":"walkIn","answer":[{"valueBoolean":false}]},{"linkId":"firstVisit","answer":[{"valueBoolean":false}]},{"linkId":"np","answer":[{"valueBoolean":false}]},{"linkId":"specialist","answer":[{"valueBoolean":false}]}]},{"linkId":"panel","text":"","item":[{"linkId":"ReasonforExamination","text":"Reason for Examination","answer":[{"valueString":"Age DMER"}]},{"linkId":"patientDriversLicenseNumber","text":"Driver's License Number","answer":[{"valueDecimal":7654321}]},{"linkId":"columns7MedicalIssued","text":"Medical Issued","answer":[{"valueDateTime":"2020-02-01"}]},{"linkId":"columns7Class","text":"Current License Class","answer":[{"valueDecimal":5}]}]},{"linkId":"panel2","text":"VISION","item":[{"linkId":"vision","text":"VISION","item":[{"linkId":"acuityLoss","answer":[{"valueBoolean":false}]},{"linkId":"fieldDefect","answer":[{"valueBoolean":false}]},{"linkId":"eyeDisease","answer":[{"valueBoolean":false}]},{"linkId":"other","answer":[{"valueBoolean":false}]}]}]},{"linkId":"panel3","text":"HEARING","item":[{"linkId":"hearing","text":"HEARING","item":[{"linkId":"hearingLoss","answer":[{"valueBoolean":false}]},{"linkId":"vertigo","answer":[{"valueBoolean":false}]},{"linkId":"other","answer":[{"valueBoolean":false}]}]}]},{"linkId":"panel4","text":"CARDIOVASCULAR","item":[{"linkId":"syncope","text":"Syncope","answer":[{"valueBoolean":false}]},{"linkId":"cad","text":"CAD","answer":[{"valueBoolean":false}]},{"linkId":"arrhythmia","text":"Arrhythmia","answer":[{"valueBoolean":false}]},{"linkId":"pacemaker","text":"Pacemaker","answer":[{"valueBoolean":false}]},{"linkId":"icd","text":"ICD","answer":[{"valueBoolean":false}]},{"linkId":"congestiveheartfailure","text":"Congestive heart failure","answer":[{"valueBoolean":false}]},{"linkId":"aneurysm","text":"Aneurysm","answer":[{"valueBoolean":false}]},{"linkId":"peripheralvasculardisease","text":"Peripheral vascular disease","answer":[{"valueBoolean":false}]},{"linkId":"cvOther","text":"Cardiovascular - Other","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel4","text":"CNS","item":[{"linkId":"columnsCvatia","text":"CVA/TIA","answer":[{"valueBoolean":false}]},{"linkId":"columnsSeizureDisorder","text":"Seizure Disorder","answer":[{"valueBoolean":false}]},{"linkId":"columnsCongenitalConditionCerebralPalsyetc","text":"Congenital Condition (Cerebral Palsy, etc.)","answer":[{"valueBoolean":false}]},{"linkId":"columnsNarcolepsy","text":"Narcolepsy","answer":[{"valueBoolean":false}]},{"linkId":"columnsProgressiveDeficitParkinsonsMsalSetc","text":"Progressive Deficit (Parkinson's, MS, ALS, etc.)","answer":[{"valueBoolean":false}]},{"linkId":"columnsStabledeficitParaplegiaNerveDamageetc","text":"Stable deficit (Paraplegia, Nerve Damage, etc.)","answer":[{"valueBoolean":false}]},{"linkId":"columnsDementiaDiagnosis","text":"Dementia Diagnosis","answer":[{"valueBoolean":false}]},{"linkId":"columnsSignificantHeadInjury","text":"Significant Head Injury","answer":[{"valueBoolean":false}]},{"linkId":"columnsOther6","text":"Other (CNS)","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel6","text":"RESPIRATORY (section 8)","item":[{"linkId":"columnsOxygenrequiredwhendriving","text":"Oxygen required when driving","answer":[{"valueBoolean":false}]},{"linkId":"columnsObstructivesleepapnea","text":"Obstructive sleep apnea","answer":[{"valueBoolean":false}]},{"linkId":"columnsApneaHyponeaIndexAhi","text":"Apnea Hyponea Index(AHI)","answer":[{"valueBoolean":false}]},{"linkId":"columnsEpworthScore","text":"Epworth Score","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel8","text":"ENDOCRINE (Section 9)","item":[{"linkId":"historyPanel8Diabetes","text":"Diabetes","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8SevereHypoglycemia","text":"Severe Hypoglycemia","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8HypoglycemiaUnawareness","text":"Hypoglycemia Unawareness","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8StableBgControl","text":"Stable BG Control","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel8OtherEndocrine","text":"Other (Endocrine)","answer":[{"valueBoolean":false}]}]},{"linkId":"columnsHx1Panel","text":"MUSCULOSKELETAL","item":[{"linkId":"amputation","text":"Amputation","answer":[{"valueBoolean":false}]},{"linkId":"weakness","text":"Weakness","answer":[{"valueBoolean":false}]},{"linkId":"rangeofmotionloss","text":"Range of motion loss","answer":[{"valueBoolean":false}]},{"linkId":"musculoskeletalOther","text":"Other","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel7","text":"PSYCHIATRIC (Section 12)","item":[{"linkId":"historyPanel7Psychosis","text":"Psychosis","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7SevereDepression","text":"Severe Depression","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7Impairedjudgmentinsight","text":"Impaired judgment, insight","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7MedicationnonCompliance","text":"Medication non-compliance","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7Stablepsychiatriccondition","text":"Stable psychiatric condition","answer":[{"valueBoolean":false}]},{"linkId":"historyPanel7OtherPsych","text":"Other (Psych)","answer":[{"valueBoolean":false}]}]},{"linkId":"HistoryPanel9","text":"DRUGS AND ALCOHOL (Sections 13 and 14)","item":[{"linkId":"columnsAlcoholordrugabuseinpast2Years","text":"Alcohol or drug abuse in past 2 years","answer":[{"valueBoolean":false}]},{"linkId":"columnsAlcoholrelatedseizure","text":"Alcohol related seizure","answer":[{"valueBoolean":false}]},{"linkId":"columnsPrescribeddrugsthatcouldimpair","text":"Prescribed drugs that could impair","answer":[{"valueBoolean":false}]}]},{"linkId":"historyOtherConditions","text":"OTHER CONDITIONS"},{"linkId":"visionScreeningVisualAcuityUncorrected2","text":"Visual Acuity - Uncorrected","item":[{"linkId":"visionScreeningVisualAcuityUncorrected","text":"Uncorrected","answer":[{"valueBoolean":true}]},{"linkId":"visionScreeningUncorrectedBoth","text":"Both","answer":[{"valueString":"20/30"}]}]},{"linkId":"visionScreeningVisualAcuityCorrected2","text":"Visual Acuity - Corrected","item":[{"linkId":"visionScreeningVisualAcuityCorrected","text":"Corrected","answer":[{"valueBoolean":true}]},{"linkId":"visionScreeningCorrectedBoth","text":"Both","answer":[{"valueString":"20/20"}]}]},{"linkId":"visionScreeningVisualField","text":"Visual Field","item":[{"linkId":"visionScreeningVisualFieldNormal","text":"Visual Field Normal","answer":[{"valueString":"normal"}]},{"linkId":"visionScreeningMeetCriteriaYes","text":"Yes","answer":[{"valueBoolean":true}]}]},{"linkId":"visionScreeningBloodPressure","text":"Blood Pressure","item":[{"linkId":"visionScreeningBloodPressureValue","text":"Blood Pressure","answer":[{"valueString":"120/80"}]}]},{"linkId":"panel5","text":"","item":[{"linkId":"doespatienthaveaconditionthatmayaffectdriving","text":"Does patient have a condition that may affect driving?","answer":[{"valueString":"no"}]}]},{"linkId":"panel6","text":""},{"linkId":"columns5Panel","text":"","item":[{"linkId":"specialistConsult","text":"Specialist Consult","answer":[{"valueBoolean":false}]},{"linkId":"roadtesttoassess","text":"Road test to assess","answer":[{"valueBoolean":false}]},{"linkId":"restrictions","text":"Restrictions","answer":[{"valueBoolean":false}]}]},{"linkId":"columns5Panel2","text":"","item":[{"linkId":"columns5Panel2DateConsentandCertificationGiven","text":"Date Consent and Certification Given","answer":[{"valueDateTime":"2020-02-19"}]}]}]}}]}</initialvalue><private /><alwaysinit /></stage><stage stageid="b684ba67-ab73-42a7-8396-e6e2c6bfd4f1" name="GET List of New DMERs through API" type="Action"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>-135</displayx><displayy>-390</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The adress of the API method." expr="[Process eDMERs - List New URL]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="New List of eDMERs" /></outputs><onsuccess>66a76b65-4a7a-4091-b67a-b53fc74fd97c</onsuccess><resource object="Webservices - REST" action="Get" /></stage><stage stageid="fb020c02-1a15-4ead-8a8c-e3377a35020a" name="New List of eDMERs" type="Collection"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-975</displayx><displayy>150</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="26f1c653-5aed-440f-9f86-40b24c50ee99" name="Block1" type="Block"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>-435</displayy><displaywidth>570</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="be39812c-0b09-4641-a7c7-f191a3a0872f" name="Recover1" type="Recover"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-390</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>cb3d9f8e-7dde-40e5-9ec3-152d00684f05</onsuccess></stage><stage stageid="cb3d9f8e-7dde-40e5-9ec3-152d00684f05" name="Resume1" type="Resume"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>e7cfbc32-d17b-4dfa-a625-306a52364ee7</onsuccess></stage><stage stageid="57ba8feb-8d12-42e1-8451-1b35f09926fe" name="Exception getting New eDMER List" type="Exception"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-390</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><exception localized="yes" type="System Exception" detail="&quot;Exception getting New eDMER List&quot;" /></stage><stage stageid="0ffe3dd0-9a67-4e41-ac97-12875ac288e9" name="New eDMER Response" type="Collection"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-750</displayx><displayy>150</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aec9c112-ef9a-425f-a54a-99c2bfe791c4" name="GET New DMERs through API" type="Action"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>-135</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The adress of the API method." expr="[Process eDMERs - Get New URL]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="New eDMER Response" /></outputs><onsuccess>683d05cb-ecf5-49ac-9403-6ca1521f476f</onsuccess><resource object="Webservices - REST" action="Get" /></stage><stage stageid="ace0a866-fa2a-4f0d-944d-217095aa9258" name="Block1" type="Block"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>-150</displayy><displaywidth>360</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd603374-866b-4c23-92fe-6841f5e1c44c" name="Recover1" type="Recover"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b7a11a12-591d-4a78-ad11-0eab4ae3666c</onsuccess></stage><stage stageid="b7a11a12-591d-4a78-ad11-0eab4ae3666c" name="Resume1" type="Resume"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>e7cfbc32-d17b-4dfa-a625-306a52364ee7</onsuccess></stage><stage stageid="ee53ce54-c73a-4a06-a967-5f43f4f47e85" name="Exception getting New eDMER" type="Exception"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>0</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><exception localized="yes" type="System Exception" detail="&quot;Exception getting New eDMER&quot;" /></stage><stage stageid="66a76b65-4a7a-4091-b67a-b53fc74fd97c" name="Count New eDMERs" type="Action"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>-135</displayx><displayy>-285</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;New List of eDMERs&quot;" /></inputs><outputs><output type="number" name="Count" friendlyname="Count" narrative="The number of rows counted in the collection" stage="Number of New eDMERs" /></outputs><onsuccess>6453a001-dadb-4786-9ce7-353992af7a29</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="eaf8c347-cc46-4bcc-92cc-cb60f49bd711" name="Number of New eDMERs" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-855</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="007a395c-71c2-4b9e-8a42-c7d701696e8b" name="Process eDMERs - List New URL" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-675</displayx><displayy>-90</displayy><displaywidth>180</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="68b90781-1359-4249-858b-4ec23d8870f1" name="Process eDMERs - Get New URL" type="Data"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-675</displayx><displayy>0</displayy><displaywidth>180</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="683d05cb-ecf5-49ac-9403-6ca1521f476f" name="extract eDMER" type="Calculation"><subsheetid>dbdc8112-3a17-4634-9b8d-1599b24b5d2c</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>eb7a277d-9644-4c12-9d94-71641f94a075</onsuccess><calculation expression="[New eDMER Response.dmer]" stage="eDMER" /></stage></process></process>
        <process id="3fd61e05-593b-43a0-ada4-c37717418d0a" name="Process eDMERs" xmlns="http://www.blueprism.co.uk/product/process"><process name="Process eDMERs" version="1.0" bpversion="6.5.0.12573" narrative="This is the Master process for processing eDMERs" byrefcollection="true"><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="e5fa52df-875b-495a-bf1a-2d11c95e8ecb" name="Start" type="Start"><narrative></narrative><displayx>15</displayx><displayy>-195</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>e7526b58-fbb5-46b2-8060-8a888ae4daf4</onsuccess></stage><stage stageid="c4c64b3a-9134-49d2-bb19-3e1b9f509c15" name="End" type="End"><narrative></narrative><displayx>15</displayx><displayy>240</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="75014413-7320-4bb8-bb6b-c86783a81752" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-315</displayx><displayy>-165</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="e7526b58-fbb5-46b2-8060-8a888ae4daf4" name="Receive new eDMER" type="Process"><narrative></narrative><displayx>15</displayx><displayy>-90</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f6314828-82ee-466e-a30a-1ecbdc6061a8</onsuccess><processid>c9f6ddba-a007-4380-8b38-7dcc7889681b</processid></stage><stage stageid="f6314828-82ee-466e-a30a-1ecbdc6061a8" name="Check for  Clean Pass" type="Process"><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>b02a44ce-c1f7-4dac-9b34-fb4e8be29ed9</onsuccess><processid>d3140278-0670-47f3-9706-277ae31379ea</processid></stage><stage stageid="b02a44ce-c1f7-4dac-9b34-fb4e8be29ed9" name="Update Status of eDMER" type="Process"><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>c4c64b3a-9134-49d2-bb19-3e1b9f509c15</onsuccess><processid>58c6fe3e-c09a-494d-8a30-966d13429374</processid></stage></process></process>
        <process id="58c6fe3e-c09a-494d-8a30-966d13429374" name="Update Status of eDMER" xmlns="http://www.blueprism.co.uk/product/process"><process name="Update Status of eDMER" version="1.0" bpversion="6.5.0.12573" narrative="This process uses the clean pass determination process' results to update the database through a PUT Request" byrefcollection="true"><view><camerax>-108</camerax><cameray>161</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="86844878-09c6-4887-88b7-82fee50e9792" type="Normal" published="False"><name>Send Email Notification on API Issue</name><view><camerax>-79</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="1062f0f8-83f6-452a-b91a-47fe4d519c4c" name="Start" type="Start"><narrative></narrative><displayx>15</displayx><displayy>-165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>249a48f5-61c4-490b-a184-98d9347c4872</onsuccess></stage><stage stageid="03a6ccf0-8ac7-4f7f-9459-ccfae3a49735" name="End" type="End"><narrative></narrative><displayx>30</displayx><displayy>390</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="52f9154c-d47a-4808-9258-5d9577605c30" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-450</displayx><displayy>-120</displayy><displaywidth>390</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="94516ca4-2c0d-4fa6-9b25-fa3f6b5e1938" name="Send Email Notification on API Issue" type="SubSheetInfo"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>-300</displayy><displaywidth>270</displaywidth><displayheight>180</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="14e01159-f2e6-4fcd-8c58-07fc279d0106" name="Start" type="Start"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>0</displayx><displayy>-255</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>6361e33c-d866-4ac0-8ed7-5238eb5d7af1</onsuccess></stage><stage stageid="8409d91a-3652-4ec3-996e-2fdac70fa3d0" name="End" type="End"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>0</displayx><displayy>135</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="374d4299-8b67-4071-9aa7-895c62bf465d" name="Input Variables" type="Block"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-690</displayx><displayy>-165</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="52e732c8-51af-4b37-b7fa-42a56f19a84c" name="Runtime Variables" type="Block"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-690</displayx><displayy>90</displayy><displaywidth>270</displaywidth><displayheight>240</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="560207a9-3db3-482c-9719-897824f627a5" name="Output Variables" type="Block"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-690</displayx><displayy>375</displayy><displaywidth>270</displaywidth><displayheight>135</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="014b70a7-31f1-40f9-9c8e-1864b73ef7ab" name="Send Email Message" type="Action"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><loginhibit onsuccess="true" /><narrative></narrative><displayx>0</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="To" friendlyname="To" expr="[Process eDMERs - Failure email recepient addresses]" /><input type="text" name="CC" friendlyname="CC" expr="" /><input type="text" name="BCC" friendlyname="BCC" expr="" /><input type="text" name="Subject" friendlyname="Subject" expr="[Email Subject]" /><input type="text" name="Body" friendlyname="Body" expr="[Email Message]" /><input type="text" name="Attachements" friendlyname="Attachements" expr="" /></inputs><onsuccess>8409d91a-3652-4ec3-996e-2fdac70fa3d0</onsuccess><resource object="DMFT - Email messages" action="Send Email" /></stage><stage stageid="4288aa9b-a81d-47af-a641-6b6061a678ea" name="Process eDMERs - Failure email recepient addresses" type="Data"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><loginhibit /><narrative></narrative><displayx>-480</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="6361e33c-d866-4ac0-8ed7-5238eb5d7af1" name="Prepare Email Subject and Message" type="MultipleCalculation"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>0</displayx><displayy>-150</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>014b70a7-31f1-40f9-9c8e-1864b73ef7ab</onsuccess><steps><calculation expression="&quot;Invalid Response Received From DMFT API&quot;" stage="Email Subject" /><calculation expression="&quot;Failed Attempt to Update eDMER Status through the DMFT API&quot;" stage="Email Message" /></steps></stage><stage stageid="b43241aa-61c9-4e59-b368-17e8fd0c35f9" name="Environment Variables" type="Block"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-540</displayx><displayy>-165</displayy><displaywidth>120</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="56b4263d-adc8-4c26-8a16-5699845fcc50" name="Email Subject" type="Data"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-495</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="979ef73a-c20d-4ad8-baed-cd2cbb52dbeb" name="Email Message" type="Data"><subsheetid>86844878-09c6-4887-88b7-82fee50e9792</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4dd6c36-c63f-4766-95b9-87975222cd7d" name="Send Email Notification on API Issue" type="SubSheet"><narrative></narrative><displayx>405</displayx><displayy>390</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>03a6ccf0-8ac7-4f7f-9459-ccfae3a49735</onsuccess><processid>86844878-09c6-4887-88b7-82fee50e9792</processid></stage><stage stageid="858348d1-5be9-4129-8f1e-4bb38ca2ae10" name="Update the status of eDMER  through API" type="Action"><narrative></narrative><displayx>15</displayx><displayy>165</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The adress of the API method." expr="[Process eDMERs - PUT URL]&amp;&quot;id=&quot;&amp;[Result Data.Driver License Number]&amp;&quot;&amp;status=&quot;&amp;[Result Data.Status]" /><input type="collection" name="Data" friendlyname="Data" narrative="The data to be passed to the REST API." expr="" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="PUT Response" /></outputs><onsuccess>aaf405cf-105c-478c-a951-feb35fe7143e</onsuccess><resource object="Webservices - REST" action="Put" /></stage><stage stageid="54d9c8fc-a84e-48ae-b9b8-6b029b0bd5f9" name="Block1" type="Block"><narrative></narrative><displayx>-75</displayx><displayy>120</displayy><displaywidth>570</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="76d5bc0d-29ed-4924-8304-a2aa1f74d6ad" name="Recover1" type="Recover"><narrative></narrative><displayx>405</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>f56e58e5-9223-41ea-96b0-ef61f68979a5</onsuccess></stage><stage stageid="f56e58e5-9223-41ea-96b0-ef61f68979a5" name="Resume1" type="Resume"><narrative></narrative><displayx>405</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><onsuccess>a4dd6c36-c63f-4766-95b9-87975222cd7d</onsuccess></stage><stage stageid="84cf4b10-d1b8-4487-9a54-e2127a5658e7" name="Exception updating eDMER Status" type="Exception"><narrative></narrative><displayx>255</displayx><displayy>165</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><exception localized="yes" type="System Exception" detail="&quot;Exception updating eDMER Status&quot;" /></stage><stage stageid="249a48f5-61c4-490b-a184-98d9347c4872" name="Get Next Itemn in the Results Queue" type="Action"><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><displayx>15</displayx><displayy>-75</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" friendlyname="Queue Name" narrative="The name of the queue" expr="[Process eDMERs - Results Queue]" /><input type="text" name="Key Filter" friendlyname="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" friendlyname="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Result Item ID" /><output type="collection" name="Data" friendlyname="Data" narrative="The data associated with the item - a single collection row." stage="Result Data" /><output type="text" name="Status" friendlyname="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" friendlyname="Attempts" narrative="The number of attempts already made to work this item." stage="" /></outputs><onsuccess>cc23e11c-001d-4e58-b9ec-1f7bc3720d47</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="cc23e11c-001d-4e58-b9ec-1f7bc3720d47" name="eDMER available in the Queue?" type="Decision"><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><decision expression="[Result Item ID] &lt;&gt; &quot;&quot;" /><ontrue>858348d1-5be9-4129-8f1e-4bb38ca2ae10</ontrue><onfalse>ac4c0752-a788-4e5d-9173-9bbae7aa613c</onfalse></stage><stage stageid="05bac5b2-1542-4500-8e10-f26ff31c1e44" name="Environment Variables" type="Block"><narrative></narrative><displayx>-645</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>375</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="d71d16ab-304c-4c87-89ec-58025b507340" name="Input Variables" type="Block"><narrative></narrative><displayx>-420</displayx><displayy>-45</displayy><displaywidth>165</displaywidth><displayheight>375</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="bfde2724-7c00-421c-947f-304ed28c39fb" name="Runtime Variables" type="Block"><narrative></narrative><displayx>-645</displayx><displayy>360</displayy><displaywidth>390</displaywidth><displayheight>225</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="bc9586d0-1fd7-448a-9048-52c0d973ca55" name="Output Variables" type="Block"><narrative></narrative><displayx>-645</displayx><displayy>615</displayy><displaywidth>390</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="599fe41e-1d3d-4709-a8bd-4cea3c138b95" name="Process eDMERs - Results Queue" type="Data"><narrative></narrative><displayx>-555</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="d4fb5598-1447-460c-ac13-93a61fa50df3" name="Process eDMERs - PUT URL" type="Data"><narrative></narrative><displayx>-555</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="41e0bbca-19c1-4462-bad8-4c0ad9f45d70" name="Result Item ID" type="Data"><narrative></narrative><displayx>-570</displayx><displayy>420</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d4787d8e-4ac2-4e7c-b580-10388bf3bdb9" name="Result Data" type="Collection"><narrative></narrative><displayx>-330</displayx><displayy>420</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ac4c0752-a788-4e5d-9173-9bbae7aa613c" name="Anchor1" type="Anchor"><narrative></narrative><displayx>-90</displayx><displayy>30</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7dfb549b-bfdf-45b3-ba15-db257be20d58</onsuccess></stage><stage stageid="7dfb549b-bfdf-45b3-ba15-db257be20d58" name="Anchor2" type="Anchor"><narrative></narrative><displayx>-90</displayx><displayy>390</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>03a6ccf0-8ac7-4f7f-9459-ccfae3a49735</onsuccess></stage><stage stageid="b895a23b-bd96-4b52-ae96-7580816bf706" name="Anchor3" type="Anchor"><narrative></narrative><displayx>-180</displayx><displayy>-75</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>249a48f5-61c4-490b-a184-98d9347c4872</onsuccess></stage><stage stageid="33769c33-0ebe-4eba-81a3-42e7e4e7b8ed" name="Anchor4" type="Anchor"><narrative></narrative><displayx>-180</displayx><displayy>270</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b895a23b-bd96-4b52-ae96-7580816bf706</onsuccess></stage><stage stageid="32114c43-f0e6-4f39-8ac8-97e5e08bb7d2" name="PUT Response" type="Collection"><narrative></narrative><displayx>-450</displayx><displayy>420</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aaf405cf-105c-478c-a951-feb35fe7143e" name="Mark eDMER Result Queue Item as complete" type="Action"><loginhibit onsuccess="true" /><narrative>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><displayx>15</displayx><displayy>270</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" friendlyname="Item ID" narrative="The ID of the item to mark" expr="[Result Item ID]" /></inputs><onsuccess>33769c33-0ebe-4eba-81a3-42e7e4e7b8ed</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage></process></process>
        <object id="a7b9bdca-487e-46b4-bf24-b19ab823b7e0" name="DMFT - Email messages" xmlns="http://www.blueprism.co.uk/product/process"><process name="DMFT - Email messages" version="1.0" bpversion="6.5.0.12573" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>75162467-20da-4130-927c-185b21be0c8f</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="69ecb1eb-4bb0-422f-b44e-b579da47c534" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9c2b08aa-2410-4319-9472-53c87f6adb97" type="Normal" published="True"><name>Send Email</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="dc0ab5a0-30c1-4a09-8919-b6934c443d88" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7c50c95d-3080-4f3d-93a4-88aa6326227b</onsuccess></stage><stage stageid="7c50c95d-3080-4f3d-93a4-88aa6326227b" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c692fb3f-d8dc-4a63-a2b3-4db73a5112ff" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="f5859185-99d4-4b7b-9f4a-7ee1e3599e67" name="Clean Up" type="SubSheetInfo"><subsheetid>69ecb1eb-4bb0-422f-b44e-b579da47c534</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="1bcf7f1d-a676-4760-803c-14169e0c5609" name="Start" type="Start"><subsheetid>69ecb1eb-4bb0-422f-b44e-b579da47c534</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>23494737-6ca3-4623-8c74-3aefaec7e619</onsuccess></stage><stage stageid="23494737-6ca3-4623-8c74-3aefaec7e619" name="End" type="End"><subsheetid>69ecb1eb-4bb0-422f-b44e-b579da47c534</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="8a444882-208f-4cf0-9c3f-c0df886ad579" name="Send Email" type="SubSheetInfo"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>-195</displayy><displaywidth>210</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="06343192-61a7-4e24-bb7e-105e19d91726" name="Start" type="Start"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-165</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /><inputs><input type="text" name="To" stage="To" /><input type="text" name="CC" stage="CC" /><input type="text" name="BCC" stage="BCC" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="text" name="Attachements" stage="Attachements" /></inputs><onsuccess>dc6758dc-2645-4f27-9602-4faba1e9f8c5</onsuccess></stage><stage stageid="2af5d722-2021-4a80-be72-f2cb183b7023" name="End" type="End"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="14" style="Regular" color="000000" /></stage><stage stageid="e9562c73-4b10-4983-830f-4dc86b674d17" name="Note1" type="Note"><subsheetid>69ecb1eb-4bb0-422f-b44e-b579da47c534</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="e9012012-ac8f-4318-ab9c-74e1c316cb58" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="dc6758dc-2645-4f27-9602-4faba1e9f8c5" name="MS Outlook Email VBO::Send Email" type="Action"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" friendlyname="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" expr="[To]" /><input type="text" name="CC" friendlyname="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="[CC]" /><input type="text" name="BCC" friendlyname="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" expr="[BCC]" /><input type="text" name="Subject" friendlyname="Subject" narrative="Optional. Any alphanumeric value allowed." expr="[Subject]" /><input type="text" name="Message" friendlyname="Message" narrative="Optional, HTML or plain text" expr="[Body]" /><input type="text" name="Attachments" friendlyname="Attachments" narrative="Optional, Semi-Colon-separated file paths. Default blank." expr="[Attachements]" /></inputs><onsuccess>2af5d722-2021-4a80-be72-f2cb183b7023</onsuccess><resource object="MS Outlook Email VBO" action="Send Email" /></stage><stage stageid="8309d543-734a-40a3-98fc-609aa71effcb" name="To" type="Data"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-465</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f051e9b-ff81-40c7-afa0-4f416dcf1396" name="CC" type="Data"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34d87d6d-0a64-45c6-b410-7b4eb770f03c" name="BCC" type="Data"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="183e488d-9c17-47f2-8b83-3ce6c477294d" name="Subject" type="Data"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-405</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58de0bbf-9307-43ba-8876-b9c3ebdae277" name="Body" type="Data"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-465</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ba6d71b-d585-4931-94c1-b0533d0191ae" name="Attachements" type="Data"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><narrative></narrative><displayx>-345</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6403f833-bb4b-433d-abc7-5fb9387f01ba" name="Input Variables" type="Block"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><loginhibit /><narrative></narrative><displayx>-510</displayx><displayy>-105</displayy><displaywidth>210</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="54bed805-8468-42b3-be89-34c91abb2331" name="Runtime Variables" type="Block"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><loginhibit /><narrative></narrative><displayx>-510</displayx><displayy>105</displayy><displaywidth>210</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="14" style="Regular" color="7FB2E5" /></stage><stage stageid="641e3ea3-d6c8-4f4a-99e6-90e35a3f85e5" name="Output Variables" type="Block"><subsheetid>9c2b08aa-2410-4319-9472-53c87f6adb97</subsheetid><loginhibit /><narrative></narrative><displayx>-510</displayx><displayy>345</displayy><displaywidth>210</displaywidth><displayheight>165</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" name="Email - POP3/SMTP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Email - POP3/SMTP" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Retrieve email via POP3 protocol and send using SMTP protocol" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>011d2f54-1ac9-4681-a6e7-993aa460851d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67bff276-3cf2-4985-a957-e462b800ac3b" type="Normal" published="True"><name>Get Message</name><view><camerax>0</camerax><cameray>79</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cc1b4ba2-0510-4980-92bd-d6312072c5bf" type="Normal" published="True"><name>Send Message</name><view><camerax>0</camerax><cameray>14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e" type="Normal" published="True"><name>Delete Message</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="849d1a37-179b-40ae-9683-4ebb0d951576" type="Normal" published="True"><name>Delete Messages</name><view><camerax>0</camerax><cameray>160</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4688b112-6575-4f8a-980c-713566729518" type="Normal" published="False"><name>Number From ID</name><view><camerax>0</camerax><cameray>64</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="544abb24-e623-4adb-a24d-3a5dba6164ba" type="Normal" published="True"><name>Configure</name><view><camerax>63</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="954d358e-45d9-44b3-b56a-87e1c21f9d0f" type="Normal" published="False"><name>Connect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c8b9e601-7444-4385-b2aa-6709658ad472" type="Normal" published="False"><name>Disconnect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f" type="Normal" published="True"><name>List Messages</name><view><camerax>0</camerax><cameray>64</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="803f1a2c-38f9-4614-97aa-5ca66d454d2d" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>-27</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f87d36b8-5544-47f1-bd36-115a2493fdcd" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a378f6c1-35f0-4954-9186-e304278d369e</onsuccess></stage><stage stageid="a378f6c1-35f0-4954-9186-e304278d369e" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="65d9a6b9-33b9-4e6b-8211-7aa840ca5eee" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference></references><imports><import>System</import><import>System.IO</import><import>System.Net</import><import>System.Net.Mail</import><import>System.Net.Mime</import><import>System.Net.Sockets</import><import>System.Net.Security</import><import>System.Collections.Generic</import><import>System.Collections.Specialized</import><import>System.Text</import><import>System.Security.Cryptography</import><import>System.Globalization</import><import>System.Text.RegularExpressions</import><import>System.Data</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[Pop3Client _rclient;

/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message structure
/// and deliver some answer given some question.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
/// <typeparam name="TQuestion">This is the type of the question you want to have answered.</typeparam>
public interface IQuestionAnswerMessageTraverser<TQuestion, TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message, TQuestion question);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart, TQuestion question);
}

///<summary>
/// Finds all the <see cref="MessagePart"/>s which have a given MediaType using a depth first traversal.
///</summary>
internal class FindAllMessagePartsWithMediaType : IQuestionAnswerMessageTraverser<string, List<MessagePart>>
{
    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        List<MessagePart> results = new List<MessagePart>();

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            results.Add(messagePart);

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                List<MessagePart> result = VisitMessagePart(part, question);
                results.AddRange(result);
            }
        }

        return results;
    }
}

///<summary>
/// Finds the first <see cref="MessagePart"/> which have a given MediaType in a depth first traversal.
///</summary>
internal class FindFirstMessagePartWithMediaType : IQuestionAnswerMessageTraverser<string, MessagePart>
{
    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            return messagePart;

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                MessagePart result = VisitMessagePart(part, question);
                if (result != null)
                    return result;
            }
        }

        return null;
    }
}

/// <summary>
/// Finds all <see cref="MessagePart"/>s which are considered to be attachments
/// </summary>
internal class AttachmentFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsAttachment)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message hierarchy structure
/// and deliver some answer.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
public interface IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart);
}

/// <summary>
/// This is an abstract class which handles traversing of a <see cref="Message"/> tree structure.<br/>
/// It runs through the message structure using a depth-first traversal.
/// </summary>
/// <typeparam name="TAnswer">The answer you want from traversing the message tree structure</typeparam>
public abstract class AnswerMessageTraverser<TAnswer> : IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want an answer for a full message.
    /// </summary>
    /// <param name="message">The message you want to traverse</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="message"/> is <see langword="null"/></exception>
    public TAnswer VisitMessage(Message message)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart);
    }

    /// <summary>
    /// Call this method when you want to find an answer for a <see cref="MessagePart"/>
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> part you want an answer from.</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="messagePart"/> is <see langword="null"/></exception>
    public TAnswer VisitMessagePart(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.IsMultiPart)
        {
            List<TAnswer> leafAnswers = new List<TAnswer>(messagePart.MessageParts.Count);
            foreach (MessagePart part in messagePart.MessageParts)
            {
                leafAnswers.Add(VisitMessagePart(part));
            }
            return MergeLeafAnswers(leafAnswers);
        }

        return CaseLeaf(messagePart);
    }

    /// <summary>
    /// For a concrete implementation an answer must be returned for a leaf <see cref="MessagePart"/>, which are
    /// MessageParts that are not <see cref="MessagePart.IsMultiPart">MultiParts.</see>
    /// </summary>
    /// <param name="messagePart">The message part which is a leaf and thereby not a MultiPart</param>
    /// <returns>An answer</returns>
    protected abstract TAnswer CaseLeaf(MessagePart messagePart);

    /// <summary>
    /// For a concrete implementation, when a MultiPart <see cref="MessagePart"/> has fetched it's answers from it's children, these
    /// answers needs to be merged. This is the responsibility of this method.
    /// </summary>
    /// <param name="leafAnswers">The answer that the leafs gave</param>
    /// <returns>A merged answer</returns>
    protected abstract TAnswer MergeLeafAnswers(List<TAnswer> leafAnswers);
}

///<summary>
/// An abstract class that implements the MergeLeafAnswers method.<br/>
/// The method simply returns the union of all answers from the leaves.
///</summary>
public abstract class MultipleMessagePartFinder : AnswerMessageTraverser<List<MessagePart>>
{
    /// <summary>
    /// Adds all the <paramref name="leafAnswers"/> in one big answer
    /// </summary>
    /// <param name="leafAnswers">The answers to merge</param>
    /// <returns>A list with has all the elements in the <paramref name="leafAnswers"/> lists</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="leafAnswers"/> is <see langword="null"/></exception>
    protected override List<MessagePart> MergeLeafAnswers(List<List<MessagePart>> leafAnswers)
    {
        if (leafAnswers == null)
            throw new ArgumentNullException("leafAnswers");

        // We simply create a list with all the answer generated from the leaves
        List<MessagePart> mergedResults = new List<MessagePart>();

        foreach (List<MessagePart> leafAnswer in leafAnswers)
        {
            mergedResults.AddRange(leafAnswer);
        }

        return mergedResults;
    }
}

/// <summary>
/// Finds all text/[something] versions in a Message hierarchy
/// </summary>
internal class TextVersionFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsText)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This class is responsible for decoding parameters that has been encoded with:<br/>
/// <list type="bullet">
/// <item>
///    <b>Continuation</b><br/>
///    This is where a single parameter has such a long value that it could
///    be wrapped while in transit. Instead multiple parameters is used on each line.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Type: text/html; boundary="someVeryLongStringHereWhichCouldBeWrappedInTransit"</c><br/>
///    To: <c>Content-Type: text/html; boundary*0="someVeryLongStringHere" boundary*1="WhichCouldBeWrappedInTransit"</c><br/>
/// </item>
/// <item>
///    <b>Encoding</b><br/>
///    Sometimes other characters then ASCII characters are needed in parameters.<br/>
///    The parameter is then given a different name to specify that it is encoded.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅ"</c><br/>
///    To: <c>Content-Disposition attachment; filename*="ISO-8859-1'en-us'specialCharsC6D8C0"</c><br/>
///    This encoding is almost the same as <see cref="EncodedWord"/> encoding, and is used to decode the value.<br/>
/// </item>
/// <item>
///    <b>Continuation and Encoding</b><br/>
///    Both Continuation and Encoding can be used on the same time.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅWhichIsSoLong"</c><br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1*="WhichIsSoLong"</c><br/>
///    This could also be encoded as:<br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1="WhichIsSoLong"</c><br/>
///    Notice that <c>filename*1</c> does not have an <c>*</c> after it - denoting it IS NOT encoded.<br/>
///    There are some rules about this:<br/>
///    <list type="number">
///      <item>The encoding must be mentioned in the first part (filename*0*), which has to be encoded.</item>
///      <item>No other part must specify an encoding, but if encoded it uses the encoding mentioned in the first part.</item>
///      <item>Parts may be encoded or not in any order.</item>
///    </list>
///    <br/>
/// </item>
/// </list>
/// More information and the specification is available in <see href="http://tools.ietf.org/html/rfc2231">RFC 2231</see>.
/// </summary>
internal static class Rfc2231Decoder
{
    /// <summary>
    /// Decodes a string of the form:<br/>
    /// <c>value0; key1=value1; key2=value2; key3=value3</c><br/>
    /// The returned List of key value pairs will have the key as key and the decoded value as value.<br/>
    /// The first value0 will have a key of <see cref="string.Empty"/>.<br/>
    /// <br/>
    /// If continuation is used, then multiple keys will be merged into one key with the different values
    /// decoded into on big value for that key.<br/>
    /// Example:<br/>
    /// <code>
    /// title*0=part1
    /// title*1=part2
    /// </code>
    /// will have key and value of:<br></br>
    /// <c>title=decode(part1)decode(part2)</c>
    /// </summary>
    /// <param name="toDecode">The string to decode.</param>
    /// <returns>A list of decoded key value pairs.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static List<KeyValuePair<string, string>> Decode(string toDecode)
		{
			if(toDecode == null)
				throw new ArgumentNullException("toDecode");

			// Normalize the input to take account for missing semicolons after parameters.
			// Example
			// text/plain; charset=\"iso-8859-1\" name=\"somefile.txt\" or
            // text/plain;\tcharset=\"iso-8859-1\"\tname=\"somefile.txt\"
			// is normalized to
			// text/plain; charset=\"iso-8859-1\"; name=\"somefile.txt\"
			// Only works for parameters inside quotes
			// \s = matches whitespace
			toDecode = Regex.Replace(toDecode, "=\\s*\"(?<value>[^\"]*)\"\\s", "=\"${value}\"; ");

			// Normalize 
			// Since the above only works for parameters inside quotes, we need to normalize
			// the special case with the first parameter.
			// Example:
			// attachment filename="foo"
			// is normalized to
			// attachment; filename="foo"
			// ^ = matches start of line (when not inside square bracets [])
			toDecode = Regex.Replace(toDecode, @"^(?<first>[^;\s]+)\s(?<second>[^;\s]+)", "${first}; ${second}");

			// Split by semicolon, but only if not inside quotes
			List<string> splitted = Utility.SplitStringWithCharNotInsideQuotes(toDecode.Trim(), ';');

			List<KeyValuePair<string, string>> collection = new List<KeyValuePair<string, string>>(splitted.Count);

			foreach (string part in splitted)
			{
				// Empty strings should not be processed
				if (part.Trim().Length == 0)
					continue;

				string[] keyValue = part.Trim().Split(new char[] {'='}, 2);
				if(keyValue.Length == 1)
				{
					collection.Add(new KeyValuePair<string, string>("", keyValue[0]));
				} else if (keyValue.Length == 2)
				{
					collection.Add(new KeyValuePair<string, string>(keyValue[0], keyValue[1]));
				} else
				{
					throw new ArgumentException("When splitting the part \"" + part + "\" by = there was " + keyValue.Length + " parts. Only 1 and 2 are supported");
				}
			}

			return DecodePairs(collection);
		}

    /// <summary>
    /// Decodes the list of key value pairs into a decoded list of key value pairs.<br/>
    /// There may be less keys in the decoded list, but then the values for the lost keys will have been appended
    /// to the new key.
    /// </summary>
    /// <param name="pairs">The pairs to decode</param>
    /// <returns>A decoded list of pairs</returns>
    private static List<KeyValuePair<string, string>> DecodePairs(List<KeyValuePair<string, string>> pairs)
    {
        if (pairs == null)
            throw new ArgumentNullException("pairs");

        List<KeyValuePair<string, string>> resultPairs = new List<KeyValuePair<string, string>>(pairs.Count);

        int pairsCount = pairs.Count;
        for (int i = 0; i < pairsCount; i++)
        {
            KeyValuePair<string, string> currentPair = pairs[i];
            string key = currentPair.Key;
            string value = Utility.RemoveQuotesIfAny(currentPair.Value);

            // Is it a continuation parameter? (encoded or not)
            if (key.EndsWith("*0", StringComparison.OrdinalIgnoreCase) || key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
            {
                // This encoding will not be used if we get into the if which tells us
                // that the whole continuation is not encoded

                string encoding = "notEncoded - Value here is never used";

                // Now lets find out if it is encoded too.
                if (key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
                {
                    // It is encoded.

                    // Fetch out the encoding for later use and decode the value
                    // If the value was not encoded as the email specified
                    // encoding will be set to null. This will be used later.
                    value = DecodeSingleValue(value, out encoding);

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    // And remove the * afterwards which tells us it is encoded
                    key = key.Replace("*0*", "");
                }
                else
                {
                    // It is not encoded, and no parts of the continuation is encoded either

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    key = key.Replace("*0", "");
                }

                // The StringBuilder will hold the full decoded value from all continuation parts
                StringBuilder builder = new StringBuilder();

                // Append the decoded value
                builder.Append(value);

                // Now go trough the next keys to see if they are part of the continuation
                for (int j = i + 1, continuationCount = 1; j < pairsCount; j++, continuationCount++)
                {
                    string jKey = pairs[j].Key;
                    string valueJKey = Utility.RemoveQuotesIfAny(pairs[j].Value);

                    if (jKey.Equals(key + "*" + continuationCount))
                    {
                        // This value part of the continuation is not encoded
                        // Therefore remove qoutes if any and add to our stringbuilder
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else if (jKey.Equals(key + "*" + continuationCount + "*"))
                    {
                        // We will not get into this part if the first part was not encoded
                        // Therefore the encoding will only be used if and only if the
                        // first part was encoded, in which case we have remembered the encoding used

                        // Sometimes an email creator says that a string was encoded, but it really
                        // `was not. This is to catch that problem.
                        if (encoding != null)
                        {
                            // This value part of the continuation is encoded
                            // the encoding is not given in the current value,
                            // but was given in the first continuation, which we remembered for use here
                            valueJKey = DecodeSingleValue(valueJKey, encoding);
                        }
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else
                    {
                        // No more keys for this continuation
                        break;
                    }
                }

                // Add the key and the full value as a pair
                value = builder.ToString();
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else if (key.EndsWith("*", StringComparison.OrdinalIgnoreCase))
            {
                // This parameter is only encoded - it is not part of a continuation
                // We need to change the key from "<key>*" to "<key>" and decode the value

                // To get the key we want, we remove the last * that denotes
                // that the value hold by the key was encoded
                key = key.Replace("*", "");

                // Decode the value
                string throwAway;
                value = DecodeSingleValue(value, out throwAway);

                // Now input the new value with the new key
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else
            {
                // Fully normal key - the value is not encoded
                // Therefore nothing to do, and we can simply pass the pair
                // as being decoded now
                resultPairs.Add(currentPair);
            }
        }

        return resultPairs;
    }

    /// <summary>
    /// This will decode a single value of the form: <c>ISO-8859-1'en-us'%3D%3DIamHere</c><br/>
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =<br/>
    /// Notice that 'en-us' part is not used for anything.<br/>
    /// <br/>
    /// If the single value given is not on the correct form, it will be returned without 
    /// being decoded and <paramref name="encodingUsed"/> will be set to <see langword="null"/>.
    /// </summary>
    /// <param name="encodingUsed">
    /// The encoding used to decode with - it is given back for later use.<br/>
    /// <see langword="null"/> if input was not in the correct form.
    /// </param>
    /// <param name="toDecode">The value to decode</param>
    /// <returns>
    /// The decoded value that corresponds to <paramref name="toDecode"/> or if
    /// <paramref name="toDecode"/> is not on the correct form, it will be non-decoded.
    /// </returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string toDecode, out string encodingUsed)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Check if input has a part describing the encoding
        if (toDecode.IndexOf('\'') == -1)
        {
            // The input was not encoded (at least not valid) and it is returned as is
            //DefaultLogger.Log.LogDebug("Rfc2231Decoder: Someone asked me to decode a string which was not encoded - returning raw string. Input: " + toDecode);
            encodingUsed = null;
            return toDecode;
        }
        encodingUsed = toDecode.Substring(0, toDecode.IndexOf('\''));
        toDecode = toDecode.Substring(toDecode.LastIndexOf('\'') + 1);
        return DecodeSingleValue(toDecode, encodingUsed);
    }

    /// <summary>
    /// This will decode a single value of the form: %3D%3DIamHere
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =
    /// </summary>
    /// <param name="valueToDecode">The value to decode</param>
    /// <param name="encoding">The encoding used to decode with</param>
    /// <returns>The decoded value that corresponds to <paramref name="valueToDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="valueToDecode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string valueToDecode, string encoding)
    {
        if (valueToDecode == null)
            throw new ArgumentNullException("valueToDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // The encoding used is the same as QuotedPrintable, we only
        // need to change % to =
        // And otherwise make it look like the correct EncodedWord encoding
        valueToDecode = "=?" + encoding + "?Q?" + valueToDecode.Replace("%", "=") + "?=";
        return EncodedWord.Decode(valueToDecode);
    }
}

/// <summary>
/// Class that can parse different fields in the header sections of a MIME message.
/// </summary>
internal static class HeaderFieldParser
{
    /// <summary>
    /// Parses the Content-Transfer-Encoding header.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <returns>A <see cref="ContentTransferEncoding"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the <paramref name="headerValue"/> could not be parsed to a <see cref="ContentTransferEncoding"/></exception>
    public static ContentTransferEncoding ParseContentTransferEncoding(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.Trim().ToUpperInvariant())
        {
            case "7BIT":
                return ContentTransferEncoding.SevenBit;

            case "8BIT":
                return ContentTransferEncoding.EightBit;

            case "QUOTED-PRINTABLE":
                return ContentTransferEncoding.QuotedPrintable;

            case "BASE64":
                return ContentTransferEncoding.Base64;

            case "BINARY":
                return ContentTransferEncoding.Binary;

            // If a wrong argument is passed to this parser method, then we assume
            // default encoding, which is SevenBit.
            // This is to ensure that we do not throw exceptions, even if the email not MIME valid.
            default:
                //DefaultLogger.Log.LogDebug("Wrong ContentTransferEncoding was used. It was: " + headerValue);
                return ContentTransferEncoding.SevenBit;
        }
    }

    /// <summary>
    /// Parses an ImportanceType from a given Importance header value.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="MailPriority"/>. If the <paramref name="headerValue"/> is not recognized, Normal is returned.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static MailPriority ParseImportance(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.ToUpperInvariant())
        {
            case "5":
            case "HIGH":
                return MailPriority.High;

            case "3":
            case "NORMAL":
                return MailPriority.Normal;

            case "1":
            case "LOW":
                return MailPriority.Low;

            default:
                //DefaultLogger.Log.LogDebug("HeaderFieldParser: Unknown importance value: \"" + headerValue + "\". Using default of normal importance.");
                return MailPriority.Normal;
        }
    }

    /// <summary>
    /// Parses a the value for the header Content-Type to 
    /// a <see cref="ContentType"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentType"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentType ParseContentType(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // We create an empty Content-Type which we will fill in when we see the values
        ContentType contentType = new ContentType();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = Utility.RemoveQuotesIfAny(keyValuePair.Value.Trim());
            switch (key)
            {
                case "":
                    // This is the MediaType - it has no key since it is the first one mentioned in the
                    // headerValue and has no = in it.

                    // Check for illegal content-type
                    if (value.ToUpperInvariant().Equals("TEXT"))
                        value = "text/plain";

                    contentType.MediaType = value;
                    break;

                case "BOUNDARY":
                    contentType.Boundary = value;
                    break;

                case "CHARSET":
                    contentType.CharSet = value;
                    break;

                case "NAME":
                    contentType.Name = EncodedWord.Decode(value);
                    break;

                default:
                    // This is to shut up the code help that is saying that contentType.Parameters
                    // can be null - which it cant!
                    if (contentType.Parameters == null)
                        throw new Exception("The ContentType parameters property is null. This will never be thrown.");

                    // We add the unknown value to our parameters list
                    // "Known" unknown values are:
                    // - title
                    // - report-type
                    contentType.Parameters.Add(key, value);
                    break;
            }
        }

        return contentType;
    }

    /// <summary>
    /// Parses a the value for the header Content-Disposition to a <see cref="ContentDisposition"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentDisposition"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentDisposition ParseContentDisposition(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // See http://www.ietf.org/rfc/rfc2183.txt for RFC definition

        // Create empty ContentDisposition - we will fill in details as we read them
        ContentDisposition contentDisposition = new ContentDisposition();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = keyValuePair.Value;
            switch (key)
            {
                case "":
                    // This is the DispisitionType - it has no key since it is the first one
                    // and has no = in it.
                    contentDisposition.DispositionType = value;
                    break;

                // The correct name of the parameter is filename, but some emails also contains the parameter
                // name, which also holds the name of the file. Therefore we use both names for the same field.
                case "NAME":
                case "FILENAME":
                    // The filename might be in qoutes, and it might be encoded-word encoded
                    contentDisposition.FileName = EncodedWord.Decode(Utility.RemoveQuotesIfAny(value));
                    break;

                case "CREATION-DATE":
                    // Notice that we need to create a new DateTime because of a failure in .NET 2.0.
                    // The failure is: you cannot give contentDisposition a DateTime with a Kind of UTC
                    // It will set the CreationDate correctly, but when trying to read it out it will throw an exception.
                    // It is the same with ModificationDate and ReadDate.
                    // This is fixed in 4.0 - maybe in 3.0 too.
                    // Therefore we create a new DateTime which have a DateTimeKind set to unspecified
                    DateTime creationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.CreationDate = creationDate;
                    break;

                case "MODIFICATION-DATE":
                    DateTime midificationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ModificationDate = midificationDate;
                    break;

                case "READ-DATE":
                    DateTime readDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ReadDate = readDate;
                    break;

                case "SIZE":
                    contentDisposition.Size = int.Parse(Utility.RemoveQuotesIfAny(value), CultureInfo.InvariantCulture);
                    break;

                default:
                    if (key.StartsWith("X-"))
                    {
                        contentDisposition.Parameters.Add(key, Utility.RemoveQuotesIfAny(value));
                        break;
                    }

                    throw new ArgumentException("Unknown parameter in Content-Disposition. Ask developer to fix! Parameter: " + key);
            }
        }

        return contentDisposition;
    }

    /// <summary>
    /// Parses an ID like Message-Id and Content-Id.<br/>
    /// Example:<br/>
    /// <c>&lt;test@test.com&gt;</c><br/>
    /// into<br/>
    /// <c>test@test.com</c>
    /// </summary>
    /// <param name="headerValue">The id to parse</param>
    /// <returns>A parsed ID</returns>
    public static string ParseId(string headerValue)
    {
        // Remove whitespace in front and behind since
        // whitespace is allowed there
        // Remove the last > and the first <
        return headerValue.Trim().TrimEnd('>').TrimStart('<');
    }

    /// <summary>
    /// Parses multiple IDs from a single string like In-Reply-To.
    /// </summary>
    /// <param name="headerValue">The value to parse</param>
    /// <returns>A list of IDs</returns>
    public static List<string> ParseMultipleIDs(string headerValue)
		{
			List<string> returner = new List<string>();

			// Split the string by >
			// We cannot use ' ' (space) here since this is a possible value:
			// <test@test.com><test2@test.com>
			string[] ids = headerValue.Trim().Split(new char[]{ '>' }, StringSplitOptions.RemoveEmptyEntries);
			foreach (string id in ids)
			{
				returner.Add(ParseId(id));
			}

			return returner;
		}
}

/// <summary>
/// Utility class for dealing with encoded word strings<br/>
/// <br/>
/// EncodedWord encoded strings are only in ASCII, but can embed information
/// about characters in other character sets.<br/>
/// <br/>
/// It is done by specifying the character set, an encoding that maps from ASCII to
/// the correct bytes and the actual encoded string.<br/>
/// <br/>
/// It is specified in a format that is best summarized by a BNF:<br/>
/// <c>"=?" character_set "?" encoding "?" encoded-text "?="</c><br/>
/// </summary>
/// <example>
/// <c>=?ISO-8859-1?Q?=2D?=</c>
/// Here <c>ISO-8859-1</c> is the character set.<br/>
/// <c>Q</c> is the encoding method (quoted-printable). <c>B</c> is also supported (Base 64).<br/>
/// The encoded text is the <c>=2D</c> part which is decoded to a space.
/// </example>
internal static class EncodedWord
{
    /// <summary>
    /// Decode text that is encoded with the <see cref="EncodedWord"/> encoding.<br/>
    ///<br/>
    /// This method will decode any encoded-word found in the string.<br/>
    /// All parts which is not encoded will not be touched.<br/>
    /// <br/>
    /// From <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>:<br/>
    /// <code>
    /// Generally, an "encoded-word" is a sequence of printable ASCII
    /// characters that begins with "=?", ends with "?=", and has two "?"s in
    /// between.  It specifies a character set and an encoding method, and
    /// also includes the original text encoded as graphic ASCII characters,
    /// according to the rules for that encoding method.
    /// </code>
    /// Example:<br/>
    /// <c>=?ISO-8859-1?q?this=20is=20some=20text?= other text here</c>
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-2">RFC 2047 section 2</a> "Syntax of encoded-words" for more details</remarks>
    /// <param name="encodedWords">Source text. May be content which is not encoded.</param>
    /// <returns>Decoded text</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="encodedWords"/> is <see langword="null"/></exception>
    public static string Decode(string encodedWords)
    {
        if (encodedWords == null)
            throw new ArgumentNullException("encodedWords");

        // Notice that RFC2231 redefines the BNF to
        // encoded-word := "=?" charset ["*" language] "?" encoded-text "?="
        // but no usage of this BNF have been spotted yet. It is here to
        // ease debugging if such a case is discovered.

        // This is the regex that should fit the BNF
        // RFC Says that NO WHITESPACE is allowed in this encoding, but there are examples
        // where whitespace is there, and therefore this regex allows for such.
        const string encodedWordRegex = @"\=\?(?<Charset>\S+?)\?(?<Encoding>\w)\?(?<Content>.+?)\?\=";
        // \w	Matches any word character including underscore. Equivalent to "[A-Za-z0-9_]".
        // \S	Matches any nonwhite space character. Equivalent to "[^ \f\n\r\t\v]".
        // +?   non-gready equivalent to +
        // (?<NAME>REGEX) is a named group with name NAME and regular expression REGEX

        // Any amount of linear-space-white between 'encoded-word's,
        // even if it includes a CRLF followed by one or more SPACEs,
        // is ignored for the purposes of display.
        // http://tools.ietf.org/html/rfc2047#page-12
        // Define a regular expression that captures two encoded words with some whitespace between them
        const string replaceRegex = @"(?<first>" + encodedWordRegex + @")\s+(?<second>" + encodedWordRegex + ")";

        // Then, find an occourance of such an expression, but remove the whitespace inbetween when found
        encodedWords = Regex.Replace(encodedWords, replaceRegex, "${first}${second}");

        string decodedWords = encodedWords;

        MatchCollection matches = Regex.Matches(encodedWords, encodedWordRegex);
        foreach (Match match in matches)
        {
            // If this match was not a success, we should not use it
            if (!match.Success) continue;

            string fullMatchValue = match.Value;

            string encodedText = match.Groups["Content"].Value;
            string encoding = match.Groups["Encoding"].Value;
            string charset = match.Groups["Charset"].Value;

            // Get the encoding which corrosponds to the character set
            Encoding charsetEncoding = EncodingFinder.FindEncoding(charset);

            // Store decoded text here when done
            string decodedText;

            // Encoding may also be written in lowercase
            switch (encoding.ToUpperInvariant())
            {
                // RFC:
                // The "B" encoding is identical to the "BASE64" 
                // encoding defined by RFC 2045.
                // http://tools.ietf.org/html/rfc2045#section-6.8
                case "B":
                    decodedText = Base64.Decode(encodedText, charsetEncoding);
                    break;

                // RFC:
                // The "Q" encoding is similar to the "Quoted-Printable" content-
                // transfer-encoding defined in RFC 2045.
                // There are more details to this. Please check
                // http://tools.ietf.org/html/rfc2047#section-4.2
                // 
                case "Q":
                    decodedText = QuotedPrintable.DecodeEncodedWord(encodedText, charsetEncoding);
                    break;

                default:
                    throw new ArgumentException("The encoding " + encoding + " was not recognized");
            }

            // Repalce our encoded value with our decoded value
            decodedWords = decodedWords.Replace(fullMatchValue, decodedText);
        }

        return decodedWords;
    }
}

/// <summary>
/// Contains common operations needed while decoding.
/// </summary>
internal static class Utility
{
    /// <summary>
    /// Remove quotes, if found, around the string.
    /// </summary>
    /// <param name="text">Text with quotes or without quotes</param>
    /// <returns>Text without quotes</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="text"/> is <see langword="null"/></exception>
    public static string RemoveQuotesIfAny(string text)
    {
        if (text == null)
            throw new ArgumentNullException("text");

        // Check if there are qoutes at both ends
        if (text[0] == '"' && text[text.Length - 1] == '"')
        {
            // Remove quotes at both ends
            return text.Substring(1, text.Length - 2);
        }

        // If no quotes were found, the text is just returned
        return text;
    }

    /// <summary>
    /// Split a string into a list of strings using a specified character.<br/>
    /// Everything inside quotes are ignored.
    /// </summary>
    /// <param name="input">A string to split</param>
    /// <param name="toSplitAt">The character to use to split with</param>
    /// <returns>A List of strings that was delimited by the <paramref name="toSplitAt"/> character</returns>
    public static List<string> SplitStringWithCharNotInsideQuotes(string input, char toSplitAt)
    {
        List<string> elements = new List<string>();

        int lastSplitLocation = 0;
        bool insideQuote = false;

        char[] characters = input.ToCharArray();

        for (int i = 0; i < characters.Length; i++)
        {
            char character = characters[i];
            if (character == '\"')
                insideQuote = !insideQuote;

            // Only split if we are not inside quotes
            if (character == toSplitAt && !insideQuote)
            {
                // We need to split
                int length = i - lastSplitLocation;
                elements.Add(input.Substring(lastSplitLocation, length));

                // Update last split location
                // + 1 so that we do not include the character used to split with next time
                lastSplitLocation = i + 1;
            }
        }

        // Add the last part
        elements.Add(input.Substring(lastSplitLocation, input.Length - lastSplitLocation));

        return elements;
    }
}

/// <summary>
/// Class used to decode RFC 2822 Date header fields.
/// </summary>
internal static class Rfc2822DateTime
{
    /// <summary>
    /// Converts a string in RFC 2822 format into a <see cref="DateTime"/> object
    /// </summary>
    /// <param name="inputDate">The date to convert</param>
    /// <returns>
    /// A valid <see cref="DateTime"/> object, which represents the same time as the string that was converted. 
    /// If <paramref name="inputDate"/> is not a valid date representation, then <see cref="DateTime.MinValue"/> is returned.
    /// </returns>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="inputDate"/> is <see langword="null"/></exception></exception>
    /// <exception cref="ArgumentException">If the <paramref name="inputDate"/> could not be parsed into a <see cref="DateTime"/> object</exception>
    public static DateTime StringToDate(string inputDate)
    {
        if (inputDate == null)
            throw new ArgumentNullException("inputDate");

        // Old date specification allows comments and a lot of whitespace
        inputDate = StripCommentsAndExcessWhitespace(inputDate);

        try
        {
            // Extract the DateTime
            DateTime dateTime = ExtractDateTime(inputDate);

            // If a day-name is specified in the inputDate string, check if it fits with the date
            ValidateDayNameIfAny(dateTime, inputDate);

            // Convert the date into UTC
            dateTime = new DateTime(dateTime.Ticks, DateTimeKind.Utc);

            // Adjust according to the time zone
            dateTime = AdjustTimezone(dateTime, inputDate);

            // Return the parsed date
            return dateTime;
        }
        catch (FormatException e)	// Convert.ToDateTime() Failure
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
        catch (ArgumentException e)
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
    }

    /// <summary>
    /// Adjust the <paramref name="dateTime"/> object given according to the timezone specified in the <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The date to alter</param>
    /// <param name="dateInput">The input date, in which the timezone can be found</param>
    /// <returns>An date altered according to the timezone</returns>
    /// <exception cref="ArgumentException">If no timezone was found in <paramref name="dateInput"/></exception>
    private static DateTime AdjustTimezone(DateTime dateTime, string dateInput)
    {
        // We know that the timezones are always in the last part of the date input
        string[] parts = dateInput.Split(' ');
        string lastPart = parts[parts.Length - 1];

        // Convert timezones in older formats to [+-]dddd format.
        lastPart = Regex.Replace(lastPart, @"UT|GMT|EST|EDT|CST|CDT|MST|MDT|PST|PDT|[A-I]|[K-Y]|Z", MatchEvaluator);

        // Find the timezone specification
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // finds -0600
        Match match = Regex.Match(lastPart, @"[\+-](?<hours>\d\d)(?<minutes>\d\d)");
        if (match.Success)
        {
            // We have found that the timezone is in +dddd or -dddd format
            // Add the number of hours and minutes to our found date
            int hours = int.Parse(match.Groups["hours"].Value);
            int minutes = int.Parse(match.Groups["minutes"].Value);

            int factor = match.Value[0] == '+' ? -1 : 1;

            dateTime = dateTime.AddHours(factor * hours);
            dateTime = dateTime.AddMinutes(factor * minutes);

            return dateTime;
        }

        //DefaultLogger.Log.LogDebug("No timezone found in date: " + dateInput + ". Using -0000 as default.");

        // A timezone of -0000 is the same as doing nothing
        return dateTime;
    }

    /// <summary>
    /// Convert timezones in older formats to [+-]dddd format.
    /// </summary>
    /// <param name="match">The match that was found</param>
    /// <returns>The string to replace the matched string with</returns>
    private static string MatchEvaluator(Match match)
    {
        if (!match.Success)
        {
            throw new ArgumentException("Match success are always true");
        }

        switch (match.Value)
        {
            // "A" through "I"
            // are equivalent to "+0100" through "+0900" respectively
            case "A": return "+0100";
            case "B": return "+0200";
            case "C": return "+0300";
            case "D": return "+0400";
            case "E": return "+0500";
            case "F": return "+0600";
            case "G": return "+0700";
            case "H": return "+0800";
            case "I": return "+0900";

            // "K", "L", and "M"
            // are equivalent to "+1000", "+1100", and "+1200" respectively
            case "K": return "+1000";
            case "L": return "+1100";
            case "M": return "+1200";

            // "N" through "Y"
            // are equivalent to "-0100" through "-1200" respectively
            case "N": return "-0100";
            case "O": return "-0200";
            case "P": return "-0300";
            case "Q": return "-0400";
            case "R": return "-0500";
            case "S": return "-0600";
            case "T": return "-0700";
            case "U": return "-0800";
            case "V": return "-0900";
            case "W": return "-1000";
            case "X": return "-1100";
            case "Y": return "-1200";

            // "Z", "UT" and "GMT"
            // is equivalent to "+0000"
            case "Z":
            case "UT":
            case "GMT":
                return "+0000";

            // US time zones
            case "EDT": return "-0400"; // EDT is semantically equivalent to -0400
            case "EST": return "-0500"; // EST is semantically equivalent to -0500
            case "CDT": return "-0500"; // CDT is semantically equivalent to -0500
            case "CST": return "-0600"; // CST is semantically equivalent to -0600
            case "MDT": return "-0600"; // MDT is semantically equivalent to -0600
            case "MST": return "-0700"; // MST is semantically equivalent to -0700
            case "PDT": return "-0700"; // PDT is semantically equivalent to -0700
            case "PST": return "-0800"; // PST is semantically equivalent to -0800

            default:
                throw new ArgumentException("Unexpected input");
        }
    }

    /// <summary>
    /// Extracts the date and time parts from the <paramref name="dateInput"/>
    /// </summary>
    /// <param name="dateInput">The date input string, from which to extract the date and time parts</param>
    /// <returns>The extracted date part or <see langword="DateTime.MinValue"/> if <paramref name="dateInput"/> is not recognized as a valid date.</returns>
    private static DateTime ExtractDateTime(string dateInput)
    {
        // Matches the date and time part of a string
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // Finds: 21 Nov 1997 09:55:06
        // Seconds does not need to be specified
        // Even though it is illigal, sometimes hours, minutes or seconds are only specified with one digit
        Match match = Regex.Match(dateInput, @"\d\d? .+ (\d\d\d\d|\d\d) \d?\d:\d?\d(:\d?\d)?");
        if (match.Success)
        {
            return Convert.ToDateTime(match.Value, CultureInfo.InvariantCulture);
        }

        //DefaultLogger.Log.LogError("The given date does not appear to be in a valid format: " + dateInput);
        return DateTime.MinValue;
    }

    /// <summary>
    /// Validates that the given <paramref name="dateTime"/> agrees with a day-name specified
    /// in <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The time to check</param>
    /// <param name="dateInput">The date input to extract the day-name from</param>
    /// <exception cref="ArgumentException">If <paramref name="dateTime"/> and <paramref name="dateInput"/> does not agree on the day</exception>
    private static void ValidateDayNameIfAny(DateTime dateTime, string dateInput)
    {
        // Check if there is a day name in front of the date
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        if (dateInput.Length >= 4 && dateInput[3] == ',')
        {
            string dayName = dateInput.Substring(0, 3);

            // If a dayName was specified. Check that the dateTime and the dayName
            // agrees on which day it is
            // This is just a failure-check and could be left out
            if ((dateTime.DayOfWeek == DayOfWeek.Monday && !dayName.Equals("Mon")) ||
                (dateTime.DayOfWeek == DayOfWeek.Tuesday && !dayName.Equals("Tue")) ||
                (dateTime.DayOfWeek == DayOfWeek.Wednesday && !dayName.Equals("Wed")) ||
                (dateTime.DayOfWeek == DayOfWeek.Thursday && !dayName.Equals("Thu")) ||
                (dateTime.DayOfWeek == DayOfWeek.Friday && !dayName.Equals("Fri")) ||
                (dateTime.DayOfWeek == DayOfWeek.Saturday && !dayName.Equals("Sat")) ||
                (dateTime.DayOfWeek == DayOfWeek.Sunday && !dayName.Equals("Sun")))
            {
                //DefaultLogger.Log.LogDebug("Day-name does not correspond to the weekday of the date: " + dateInput);
            }
        }

        // If no day name was found no checks can be made
    }

    /// <summary>
    /// Strips and removes all comments and excessive whitespace from the string
    /// </summary>
    /// <param name="input">The input to strip from</param>
    /// <returns>The stripped string</returns>
    private static string StripCommentsAndExcessWhitespace(string input)
    {
        // Strip out comments
        // Also strips out nested comments
        input = Regex.Replace(input, @"(\((?>\((?<C>)|\)(?<-C>)|.?)*(?(C)(?!))\))", "");

        // Reduce any whitespace character to one space only
        input = Regex.Replace(input, @"\s+", " ");

        // Remove all initial whitespace
        input = Regex.Replace(input, @"^\s+", "");

        // Remove all ending whitespace
        input = Regex.Replace(input, @"\s+$", "");

        // Remove spaces at colons
        // Example: 22: 33 : 44 => 22:33:44
        input = Regex.Replace(input, @" ?: ?", ":");

        return input;
    }
}

/// <summary>
/// Utility class for dealing with Base64 encoded strings
/// </summary>
internal static class Base64
{
    /// <summary>
    /// Decodes a base64 encoded string into the bytes it describes
    /// </summary>
    /// <param name="base64Encoded">The string to decode</param>
    /// <returns>A byte array that the base64 string described</returns>
    public static byte[] Decode(string base64Encoded)
    {
        try
        {
            return Convert.FromBase64String(base64Encoded);
        }
        catch //(FormatException e)
        {
            //DefaultLogger.Log.LogError("Base64: (FormatException) " + e.Message + "\r\nOn string: " + base64Encoded);
            throw;
        }
    }

    /// <summary>
    /// Decodes a Base64 encoded string using a specified <see cref="System.Text.Encoding"/> 
    /// </summary>
    /// <param name="base64Encoded">Source string to decode</param>
    /// <param name="encoding">The encoding to use for the decoded byte array that <paramref name="base64Encoded"/> describes</param>
    /// <returns>A decoded string</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="base64Encoded"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    /// <exception cref="FormatException">If <paramref name="base64Encoded"/> is not a valid base64 encoded string</exception>
    public static string Decode(string base64Encoded, Encoding encoding)
    {
        if (base64Encoded == null)
            throw new ArgumentNullException("base64Encoded");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        return encoding.GetString(Decode(base64Encoded));
    }
}

/// <summary>
/// Used for decoding Quoted-Printable text.<br/>
/// This is a robust implementation of a Quoted-Printable decoder defined in <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a> and <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
/// Every measurement has been taken to conform to the RFC.
/// </summary>
internal static class QuotedPrintable
{
    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
    /// RFC 2047 is used for decoding Encoded-Word encoded strings.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <param name="encoding">Specifies which encoding the returned string will be in</param>
    /// <returns>A decoded string in the correct encoding</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    public static string DecodeEncodedWord(string toDecode, Encoding encoding)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Decode the QuotedPrintable string and return it
        return encoding.GetString(Rfc2047QuotedPrintableDecode(toDecode, true));
    }

    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a>.<br/>
    /// RFC 2045 specifies the decoding of a body encoded with Content-Transfer-Encoding of quoted-printable.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <returns>A decoded byte array that the Quoted-Printable encoded string described</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static byte[] DecodeContentTransferEncoding(string toDecode)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Decode the QuotedPrintable string and return it
        return Rfc2047QuotedPrintableDecode(toDecode, false);
    }

    /// <summary>
    /// This is the actual decoder.
    /// </summary>
    /// <param name="toDecode">The string to be decoded from Quoted-Printable</param>
    /// <param name="encodedWordVariant">
    /// If <see langword="true"/>, specifies that RFC 2047 quoted printable decoding is used.<br/>
    /// This is for quoted-printable encoded words<br/>
    /// <br/>
    /// If <see langword="false"/>, specifies that RFC 2045 quoted printable decoding is used.<br/>
    /// This is for quoted-printable Content-Transfer-Encoding
    /// </param>
    /// <returns>A decoded byte array that was described by <paramref name="toDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-4.2">RFC 2047 section 4.2</a> for RFC details</remarks>
    private static byte[] Rfc2047QuotedPrintableDecode(string toDecode, bool encodedWordVariant)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Create a byte array builder which is roughly equivalent to a StringBuilder
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            // Remove illegal control characters
            toDecode = RemoveIllegalControlCharacters(toDecode);

            // Run through the whole string that needs to be decoded
            for (int i = 0; i < toDecode.Length; i++)
            {
                char currentChar = toDecode[i];
                if (currentChar == '=')
                {
                    // Check that there is at least two characters behind the equal sign
                    if (toDecode.Length - i < 3)
                    {
                        // We are at the end of the toDecode string, but something is missing. Handle it the way RFC 2045 states
                        WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSignNotLongEnough(toDecode.Substring(i)));

                        // Since it was the last part, we should stop parsing anymore
                        break;
                    }

                    // Decode the Quoted-Printable part
                    string quotedPrintablePart = toDecode.Substring(i, 3);
                    WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSign(quotedPrintablePart));

                    // We now consumed two extra characters. Go forward two extra characters
                    i += 2;
                }
                else
                {
                    // This character is not quoted printable hex encoded.

                    // Could it be the _ character, which represents space
                    // and are we using the encoded word variant of QuotedPrintable
                    if (currentChar == '_' && encodedWordVariant)
                    {
                        // The RFC specifies that the "_" always represents hexadecimal 20 even if the
                        // SPACE character occupies a different code position in the character set in use.
                        byteArrayBuilder.WriteByte(0x20);
                    }
                    else
                    {
                        // This is not encoded at all. This is a literal which should just be included into the output.
                        byteArrayBuilder.WriteByte((byte)currentChar);
                    }
                }
            }

            return byteArrayBuilder.ToArray();
        }
    }

    /// <summary>
    /// Writes all bytes in a byte array to a stream
    /// </summary>
    /// <param name="stream">The stream to write to</param>
    /// <param name="toWrite">The bytes to write to the <paramref name="stream"/></param>
    private static void WriteAllBytesToStream(Stream stream, byte[] toWrite)
    {
        stream.Write(toWrite, 0, toWrite.Length);
    }

    /// <summary>
    /// RFC 2045 states about robustness:<br/>
    /// <code>
    /// Control characters other than TAB, or CR and LF as parts of CRLF pairs,
    /// must not appear. The same is true for octets with decimal values greater
    /// than 126.  If found in incoming quoted-printable data by a decoder, a
    /// robust implementation might exclude them from the decoded data and warn
    /// the user that illegal characters were discovered.
    /// </code>
    /// Control characters are defined in RFC 2396 as<br/>
    /// <c>control = US-ASCII coded characters 00-1F and 7F hexadecimal</c>
    /// </summary>
    /// <param name="input">String to be stripped from illegal control characters</param>
    /// <returns>A string with no illegal control characters</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveIllegalControlCharacters(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // First we remove any \r or \n which is not part of a \r\n pair
        input = RemoveCarriageReturnAndNewLinewIfNotInPair(input);

        // Here only legal \r\n is left over
        // We now simply keep them, and the \t which is also allowed
        // \x0A = \n
        // \x0D = \r
        // \x09 = \t)
        return Regex.Replace(input, "[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]", "");
    }

    /// <summary>
    /// This method will remove any \r and \n which is not paired as \r\n
    /// </summary>
    /// <param name="input">String to remove lonely \r and \n's from</param>
    /// <returns>A string without lonely \r and \n's</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveCarriageReturnAndNewLinewIfNotInPair(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Use this for building up the new string. This is used for performance instead
        // of altering the input string each time a illegal token is found
        StringBuilder newString = new StringBuilder(input.Length);

        for (int i = 0; i < input.Length; i++)
        {
            // There is a character after it
            // Check for lonely \r
            // There is a lonely \r if it is the last character in the input or if there
            // is no \n following it
            if (input[i] == '\r' && (i + 1 >= input.Length || input[i + 1] != '\n'))
            {
                // Illegal token \r found. Do not add it to the new string

                // Check for lonely \n
                // There is a lonely \n if \n is the first character or if there
                // is no \r in front of it
            }
            else if (input[i] == '\n' && (i - 1 < 0 || input[i - 1] != '\r'))
            {
                // Illegal token \n found. Do not add it to the new string
            }
            else
            {
                // No illegal tokens found. Simply insert the character we are at
                // in our new string
                newString.Append(input[i]);
            }
        }

        return newString.ToString();
    }

    /// <summary>
    /// RFC 2045 says that a robust implementation should handle:<br/>
    /// <code>
    /// An "=" cannot be the ultimate or penultimate character in an encoded
    /// object. This could be handled as in case (2) above.
    /// </code>
    /// Case (2) is:<br/>
    /// <code>
    /// An "=" followed by a character that is neither a
    /// hexadecimal digit (including "abcdef") nor the CR character of a CRLF pair
    /// is illegal.  This case can be the result of US-ASCII text having been
    /// included in a quoted-printable part of a message without itself having
    /// been subjected to quoted-printable encoding.  A reasonable approach by a
    /// robust implementation might be to include the "=" character and the
    /// following character in the decoded data without any transformation and, if
    /// possible, indicate to the user that proper decoding was not possible at
    /// this point in the data.
    /// </code>
    /// </summary>
    /// <param name="decode">
    /// The string to decode which cannot have length above or equal to 3
    /// and must start with an equal sign.
    /// </param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter has length above 2 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSignNotLongEnough(string decode)
    {
        if (decode == null)
            throw new ArgumentNullException("decode");

        // We can only decode wrong length equal signs
        if (decode.Length >= 3)
            throw new ArgumentException("decode must have length lower than 3", "decode");

        // First char must be =
        if (decode[0] != '=')
            throw new ArgumentException("First part of decode must be an equal sign", "decode");

        // We will now believe that the string sent to us, was actually not encoded
        // Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
        return Encoding.ASCII.GetBytes(decode);
    }

    /// <summary>
    /// This helper method will decode a string of the form "=XX" where X is any character.<br/>
    /// This method will never fail, unless an argument of length not equal to three is passed.
    /// </summary>
    /// <param name="decode">The length 3 character that needs to be decoded</param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter does not have length 3 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSign(string decode)
		{
			if (decode == null)
				throw new ArgumentNullException("decode");

			// We can only decode the string if it has length 3 - other calls to this function is invalid
			if (decode.Length != 3)
				throw new ArgumentException("decode must have length 3", "decode");

			// First char must be =
			if (decode[0] != '=')
				throw new ArgumentException("decode must start with an equal sign", "decode");

			// There are two cases where an equal sign might appear
			// It might be a
			//   - hex-string like =3D, denoting the character with hex value 3D
			//   - it might be the last character on the line before a CRLF
			//     pair, denoting a soft linebreak, which simply
			//     splits the text up, because of the 76 chars per line restriction
			if (decode.Contains("\r\n"))
			{
				// Soft break detected
				// We want to return string.Empty which is equivalent to a zero-length byte array
				return new byte[0]; 
			}

			// Hex string detected. Convertion needed.
			// It might be that the string located after the equal sign is not hex characters
			// An example: =JU
			// In that case we would like to catch the FormatException and do something else
			try
			{
				// The number part of the string is the last two digits. Here we simply remove the equal sign
				string numberString = decode.Substring(1);

				// Now we create a byte array with the converted number encoded in the string as a hex value (base 16)
				// This will also handle illegal encodings like =3d where the hex digits are not uppercase,
				// which is a robustness requirement from RFC 2045.
				byte[] oneByte = { Convert.ToByte(numberString, 16) };

				// Simply return our one byte byte array
				return oneByte;
			} catch (FormatException)
			{
				// RFC 2045 says about robust implementation:
				// An "=" followed by a character that is neither a
				// hexadecimal digit (including "abcdef") nor the CR
				// character of a CRLF pair is illegal.  This case can be
				// the result of US-ASCII text having been included in a
				// quoted-printable part of a message without itself
				// having been subjected to quoted-printable encoding.  A
				// reasonable approach by a robust implementation might be
				// to include the "=" character and the following
				// character in the decoded data without any
				// transformation and, if possible, indicate to the user
				// that proper decoding was not possible at this point in
				// the data.

				// So we choose to believe this is actually an un-encoded string
				// Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
				return Encoding.ASCII.GetBytes(decode);
			}
		}
}

///<summary>
/// Utility class that divides a message into a body and a header.<br/>
/// The header is then parsed to a strongly typed <see cref="MessageHeader"/> object.
///</summary>
internal static class HeaderExtractor
{
    /// <summary>
    /// Find the end of the header section in a byte array.<br/>
    /// The headers have ended when a blank line is found
    /// </summary>
    /// <param name="messageContent">The full message stored as a byte array</param>
    /// <returns>The position of the line just after the header end blank line</returns>
    private static int FindHeaderEndPosition(byte[] messageContent)
    {
        // Convert the byte array into a stream
        using (Stream stream = new MemoryStream(messageContent))
        {
            while (true)
            {
                // Read a line from the stream. We know headers are in US-ASCII
                // therefore it is not problem to read them as such
                string line = StreamUtility.ReadLineAsAscii(stream);

                // The end of headers is signaled when a blank line is found
                // or if the line is null - in which case the email is actually an email with
                // only headers but no body
                if (string.IsNullOrEmpty(line))
                    return (int)stream.Position;
            }
        }
    }

    /// <summary>
    /// Extract the header part and body part of a message.<br/>
    /// The headers are then parsed to a strongly typed <see cref="MessageHeader"/> object.
    /// </summary>
    /// <param name="fullRawMessage">The full message in bytes where header and body needs to be extracted from</param>
    /// <param name="headers">The extracted header parts of the message</param>
    /// <param name="body">The body part of the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="fullRawMessage"/> is <see langword="null"/></exception>
    public static void ExtractHeadersAndBody(byte[] fullRawMessage, out MessageHeader headers, out byte[] body)
    {
        if (fullRawMessage == null)
            throw new ArgumentNullException("fullRawMessage");

        // Find the end location of the headers
        int endOfHeaderLocation = FindHeaderEndPosition(fullRawMessage);

        // The headers are always in ASCII - therefore we can convert the header part into a string
        // using US-ASCII encoding
        string headersString = Encoding.ASCII.GetString(fullRawMessage, 0, endOfHeaderLocation);

        // Now parse the headers to a NameValueCollection
        NameValueCollection headersUnparsedCollection = ExtractHeaders(headersString);

        // Use the NameValueCollection to parse it into a strongly-typed MessageHeader header
        headers = new MessageHeader(headersUnparsedCollection);

        // Since we know where the headers end, we also know where the body is
        // Copy the body part into the body parameter
        body = new byte[fullRawMessage.Length - endOfHeaderLocation];
        Array.Copy(fullRawMessage, endOfHeaderLocation, body, 0, body.Length);
    }

    /// <summary>
    /// Method that takes a full message and extract the headers from it.
    /// </summary>
    /// <param name="messageContent">The message to extract headers from. Does not need the body part. Needs the empty headers end line.</param>
    /// <returns>A collection of Name and Value pairs of headers</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageContent"/> is <see langword="null"/></exception>
    private static NameValueCollection ExtractHeaders(string messageContent)
    {
        if (messageContent == null)
            throw new ArgumentNullException("messageContent");

        NameValueCollection headers = new NameValueCollection();

        using (StringReader messageReader = new StringReader(messageContent))
        {
            // Read until all headers have ended.
            // The headers ends when an empty line is encountered
            // An empty message might actually not have an empty line, in which
            // case the headers end with null value.
            string line;
            while (!string.IsNullOrEmpty(line = messageReader.ReadLine()))
            {
                // Split into name and value
                KeyValuePair<string, string> header = SeparateHeaderNameAndValue(line);

                // First index is header name
                string headerName = header.Key;

                // Second index is the header value.
                // Use a StringBuilder since the header value may be continued on the next line
                StringBuilder headerValue = new StringBuilder(header.Value);

                // Keep reading until we would hit next header
                // This if for handling multi line headers
                while (IsMoreLinesInHeaderValue(messageReader))
                {
                    // Unfolding is accomplished by simply removing any CRLF
                    // that is immediately followed by WSP
                    // This was done using ReadLine (it discards CRLF)
                    // See http://tools.ietf.org/html/rfc822#section-3.1.1 for more information
                    string moreHeaderValue = messageReader.ReadLine();

                    // If this exception is ever raised, there is an serious algorithm failure
                    // IsMoreLinesInHeaderValue does not return true if the next line does not exist
                    // This check is only included to stop the nagging "possibly null" code analysis hint
                    if (moreHeaderValue == null)
                        throw new ArgumentException("This will never happen");

                    // Simply append the line just read to the header value
                    headerValue.Append(moreHeaderValue);
                }

                // Now we have the name and full value. Add it
                headers.Add(headerName, headerValue.ToString());
            }
        }

        return headers;
    }

    /// <summary>
    /// Check if the next line is part of the current header value we are parsing by
    /// peeking on the next character of the <see cref="TextReader"/>.<br/>
    /// This should only be called while parsing headers.
    /// </summary>
    /// <param name="reader">The reader from which the header is read from</param>
    /// <returns><see langword="true"/> if multi-line header. <see langword="false"/> otherwise</returns>
    private static bool IsMoreLinesInHeaderValue(TextReader reader)
    {
        int peek = reader.Peek();
        if (peek == -1)
            return false;

        char peekChar = (char)peek;

        // A multi line header must have a whitespace character
        // on the next line if it is to be continued
        return peekChar == ' ' || peekChar == '\t';
    }

    /// <summary>
    /// Separate a full header line into a header name and a header value.
    /// </summary>
    /// <param name="rawHeader">The raw header line to be separated</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawHeader"/> is <see langword="null"/></exception>
    internal static KeyValuePair<string, string> SeparateHeaderNameAndValue(string rawHeader)
    {
        if (rawHeader == null)
            throw new ArgumentNullException("rawHeader");

        string key = string.Empty;
        string value = string.Empty;

        int indexOfColon = rawHeader.IndexOf(':');

        // Check if it is allowed to make substring calls
        if (indexOfColon >= 0 && rawHeader.Length >= indexOfColon + 1)
        {
            key = rawHeader.Substring(0, indexOfColon).Trim();
            value = rawHeader.Substring(indexOfColon + 1).Trim();
        }

        return new KeyValuePair<string, string>(key, value);
    }
}

/// <summary>
/// Utility class used by OpenPop for mapping from a characterSet to an <see cref="Encoding"/>.<br/>
/// <br/>
/// The functionality of the class can be altered by adding mappings
/// using <see cref="AddMapping"/> and by adding a <see cref="FallbackDecoder"/>.<br/>
/// <br/>
/// Given a characterSet, it will try to find the Encoding as follows:
/// <list type="number">
///     <item>
///         <description>If a mapping for the characterSet was added, use the specified Encoding from there. Mappings can be added using <see cref="AddMapping"/>.</description>
///     </item>
///     <item>
///         <description>Try to parse the characterSet and look it up using <see cref="Encoding.GetEncoding(int)"/> for codepages or <see cref="Encoding.GetEncoding(string)"/> for named encodings.</description>
///     </item>
///     <item>
///         <description>If an encoding is not found yet, use the <see cref="FallbackDecoder"/> if defined. The <see cref="FallbackDecoder"/> is user defined.</description>
///     </item>
/// </list>
/// </summary>
public static class EncodingFinder
{
    /// <summary>
    /// Delegate that is used when the EncodingFinder is unable to find an encoding by
    /// using the <see cref="EncodingFinder.EncodingMap"/> or general code.<br/>
    /// This is used as a last resort and can be used for setting a default encoding or
    /// for finding an encoding on runtime for some <paramref name="characterSet"/>.
    /// </summary>
    /// <param name="characterSet">The character set to find an encoding for.</param>
    /// <returns>An encoding for the <paramref name="characterSet"/> or <see langword="null"/> if none could be found.</returns>
    public delegate Encoding FallbackDecoderDelegate(string characterSet);

    /// <summary>
    /// Last resort decoder. <seealso cref="FallbackDecoderDelegate"/>.
    /// </summary>
    public static FallbackDecoderDelegate FallbackDecoder { private get { return _fallbackDecoder; } set { _fallbackDecoder = value; } }
    private static FallbackDecoderDelegate _fallbackDecoder;

    /// <summary>
    /// Mapping from charactersets to encodings.
    /// </summary>
    private static Dictionary<string, Encoding> EncodingMap { get { return _encodingMap; } set { _encodingMap = value; } }
    private static Dictionary<string, Encoding> _encodingMap;

    /// <summary>
    /// Initialize the EncodingFinder
    /// </summary>
    static EncodingFinder()
    {
        Reset();
    }

    /// <summary>
    /// Used to reset this static class to facilite isolated unit testing.
    /// </summary>
    internal static void Reset()
    {
        EncodingMap = new Dictionary<string, Encoding>();
        FallbackDecoder = null;

        // Some emails incorrectly specify the encoding as utf8, but it should have been utf-8.
        AddMapping("utf8", Encoding.UTF8);
    }

    /// <summary>
    /// Parses a character set into an encoding.
    /// </summary>
    /// <param name="characterSet">The character set to parse</param>
    /// <returns>An encoding which corresponds to the character set</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    internal static Encoding FindEncoding(string characterSet)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        string charSetUpper = characterSet.ToUpperInvariant();

        // Check if the characterSet is explicitly mapped to an encoding
        if (EncodingMap.ContainsKey(charSetUpper))
            return EncodingMap[charSetUpper];

        // Try to find the generally find the encoding
        try
        {
            if (charSetUpper.Contains("WINDOWS") || charSetUpper.Contains("CP"))
            {
                // It seems the characterSet contains an codepage value, which we should use to parse the encoding
                charSetUpper = charSetUpper.Replace("CP", ""); // Remove cp
                charSetUpper = charSetUpper.Replace("WINDOWS", ""); // Remove windows
                charSetUpper = charSetUpper.Replace("-", ""); // Remove - which could be used as cp-1554

                // Now we hope the only thing left in the characterSet is numbers.
                int codepageNumber = int.Parse(charSetUpper, CultureInfo.InvariantCulture);

                return Encoding.GetEncoding(codepageNumber);
            }

            // It seems there is no codepage value in the characterSet. It must be a named encoding
            return Encoding.GetEncoding(characterSet);
        }
        catch (ArgumentException)
        {
            // The encoding could not be found generally. 
            // Try to use the FallbackDecoder if it is defined.

            // Check if it is defined
            if (FallbackDecoder == null)
                throw; // It was not defined - throw catched exception

            // Use the FallbackDecoder
            Encoding fallbackDecoderResult = FallbackDecoder(characterSet);

            // Check if the FallbackDecoder had a solution
            if (fallbackDecoderResult != null)
                return fallbackDecoderResult;

            // If no solution was found, throw catched exception
            throw;
        }
    }

    /// <summary>
    /// Puts a mapping from <paramref name="characterSet"/> to <paramref name="encoding"/>
    /// into the <see cref="EncodingFinder"/>'s internal mapping Dictionary.
    /// </summary>
    /// <param name="characterSet">The string that maps to the <paramref name="encoding"/></param>
    /// <param name="encoding">The <see cref="Encoding"/> that should be mapped from <paramref name="characterSet"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    public static void AddMapping(string characterSet, Encoding encoding)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Add the mapping using uppercase
        EncodingMap.Add(characterSet.ToUpperInvariant(), encoding);
    }
}

/// <summary>
/// A MessagePart is a part of an email message used to describe the whole email parse tree.<br/>
/// <br/>
/// <b>Email messages are tree structures</b>:<br/>
/// Email messages may contain large tree structures, and the MessagePart are the nodes of the this structure.<br/>
/// A MessagePart may either be a leaf in the structure or a internal node with links to other MessageParts.<br/>
/// The root of the message tree is the <see cref="Message"/> class.<br/>
/// <br/>
/// <b>Leafs</b>:<br/>
/// If a MessagePart is a leaf, the part is not a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// Leafs are where the contents of an email are placed.<br/>
/// This includes, but is not limited to: attachments, text or images referenced from HTML.<br/>
/// The content of an attachment can be fetched by using the <see cref="Body"/> property.<br/>
/// If you want to have the text version of a MessagePart, use the <see cref="GetBodyAsText"/> method which will<br/>
/// convert the <see cref="Body"/> into a string using the encoding the message was sent with.<br/>
/// <br/>
/// <b>Internal nodes</b>:<br/>
/// If a MessagePart is an internal node in the email tree structure, then the part is a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// The <see cref="MessageParts"/> property will then contain links to the parts it contain.<br/>
/// The <see cref="Body"/> property of the MessagePart will not be set.<br/>
/// <br/>
/// See the example for a parsing example.<br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <example>
/// This example illustrates how the message parse tree looks like given a specific message<br/>
/// <br/>
/// The message source in this example is:<br/>
/// <code>
/// MIME-Version: 1.0
///	Content-Type: multipart/mixed; boundary="frontier"
///	
///	This is a message with multiple parts in MIME format.
///	--frontier
/// Content-Type: text/plain
///	
///	This is the body of the message.
///	--frontier
///	Content-Type: application/octet-stream
///	Content-Transfer-Encoding: base64
///	
///	PGh0bWw+CiAgPGHLYWQ+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPHA+VGhpcyBpcyB0aGUg
///	Ym9keSBvZiB0aGUgbWVzc2FnZS48L3A+CiAgPC9ib2R5Pgo8L2h0bWw+Cg==
///	--frontier--
/// </code>
/// The tree will look as follows, where the content-type media type of the message is listed<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - application/octet-stream MessagePart
/// </code>
/// It is possible to have more complex message trees like the following:<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - text/plain MessagePart
///     - multipart/parallel
///       - audio/basic
///       - image/tiff
///     - text/enriched
///     - message/rfc822
/// </code>
/// But it is also possible to have very simple message trees like:<br/>
/// <code>
/// - Message root
///   - text/plain
/// </code>
/// </example>
public class MessagePart
{
    #region Public properties
    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// <br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.<br/>
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDisposition; } private set { _contentDisposition = value; } }
    private ContentDisposition _contentDisposition;

    /// <summary>
    /// This is the encoding used to parse the message body if the <see cref="MessagePart"/><br/>
    /// is not a MultiPart message. It is derived from the <see cref="ContentType"/> character set property.
    /// </summary>
    public Encoding BodyEncoding { get { return _bodyEncoding; } private set { _bodyEncoding = value; } }
    private Encoding _bodyEncoding;

    /// <summary>
    /// This is the parsed body of this <see cref="MessagePart"/>.<br/>
    /// It is parsed in that way, if the body was ContentTransferEncoded, it has been decoded to the
    /// correct bytes.<br/>
    /// <br/>
    /// It will be <see langword="null"/> if this <see cref="MessagePart"/> is a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public byte[] Body { get { return _body; } private set { _body = value; } }
    private byte[] _body;

    /// <summary>
    /// Describes if this <see cref="MessagePart"/> is a MultiPart message<br/>
    /// <br/>
    /// The <see cref="MessagePart"/> is a MultiPart message if the <see cref="ContentType"/> media type property starts with "multipart/"
    /// </summary>
    public bool IsMultiPart
    {
        get
        {
            return ContentType.MediaType.StartsWith("multipart/", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be holding text in it's body if the MediaType
    /// starts either "text/" or is equal to "message/rfc822"
    /// </summary>
    public bool IsText
    {
        get
        {
            string mediaType = ContentType.MediaType;
            return mediaType.StartsWith("text/", StringComparison.OrdinalIgnoreCase) || mediaType.Equals("message/rfc822", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be an attachment, if<br/>
    /// - it is not holding <see cref="IsText">text</see> and is not a <see cref="IsMultiPart">MultiPart</see> message<br/>
    /// or<br/>
    /// - it has a Content-Disposition header that says it is an attachment
    /// </summary>
    public bool IsAttachment
    {
        get
        {
            // Inline is the opposite of attachment
            return (!IsText && !IsMultiPart) || (ContentDisposition != null && !ContentDisposition.Inline);
        }
    }

    /// <summary>
    /// This is a convenient-property for figuring out a FileName for this <see cref="MessagePart"/>.<br/>
    /// If the <see cref="MessagePart"/> is a MultiPart message, then it makes no sense to try to find a FileName.<br/>
    /// <br/>
    /// The FileName can be specified in the <see cref="ContentDisposition"/> or in the <see cref="ContentType"/> properties.<br/>
    /// If none of these places two places tells about the FileName, a default "(no name)" is returned.
    /// </summary>
    public string FileName { get { return _fileName; } private set { _fileName = value; } }
    private string _fileName;

    /// <summary>
    /// If this <see cref="MessagePart"/> is a MultiPart message, then this property
    /// has a list of each of the Multiple parts that the message consists of.<br/>
    /// <br/>
    /// It is <see langword="null"/> if it is not a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public List<MessagePart> MessageParts { get { return _messageParts; } private set { _messageParts = value; } }
    private List<MessagePart> _messageParts;
    #endregion

    #region Constructors
    /// <summary>
    /// Used to construct the topmost message part
    /// </summary>
    /// <param name="rawBody">The body that needs to be parsed</param>
    /// <param name="headers">The headers that should be used from the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawBody"/> or <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessagePart(byte[] rawBody, MessageHeader headers)
    {
        if (rawBody == null)
            throw new ArgumentNullException("rawBody");

        if (headers == null)
            throw new ArgumentNullException("headers");

        ContentType = headers.ContentType;
        ContentDescription = headers.ContentDescription;
        ContentTransferEncoding = headers.ContentTransferEncoding;
        ContentId = headers.ContentId;
        ContentDisposition = headers.ContentDisposition;

        FileName = FindFileName(ContentType, ContentDisposition, "(no name)");
        BodyEncoding = ParseBodyEncoding(ContentType.CharSet);

        ParseBody(rawBody);
    }
    #endregion

    #region Parsing
    /// <summary>
    /// Parses a character set into an encoding
    /// </summary>
    /// <param name="characterSet">The character set that needs to be parsed. <see langword="null"/> is allowed.</param>
    /// <returns>The encoding specified by the <paramref name="characterSet"/> parameter, or ASCII if the character set was <see langword="null"/> or empty</returns>
    private static Encoding ParseBodyEncoding(string characterSet)
    {
        // Default encoding in Mime messages is US-ASCII
        Encoding encoding = Encoding.ASCII;

        // If the character set was specified, find the encoding that the character
        // set describes, and use that one instead
        if (!string.IsNullOrEmpty(characterSet))
            encoding = EncodingFinder.FindEncoding(characterSet);

        return encoding;
    }

    /// <summary>
    /// Figures out the filename of this message part from some headers.
    /// <see cref="FileName"/> property.
    /// </summary>
    /// <param name="contentType">The Content-Type header</param>
    /// <param name="contentDisposition">The Content-Disposition header</param>
    /// <param name="defaultName">The default filename to use, if no other could be found</param>
    /// <returns>The filename found, or the default one if not such filename could be found in the headers</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="contentType"/> is <see langword="null"/></exception>
    private static string FindFileName(ContentType contentType, ContentDisposition contentDisposition, string defaultName)
    {
        if (contentType == null)
            throw new ArgumentNullException("contentType");

        if (contentDisposition != null && contentDisposition.FileName != null)
            return contentDisposition.FileName;

        if (contentType.Name != null)
            return contentType.Name;

        return defaultName;
    }

    /// <summary>
    /// Parses a byte array as a body of an email message.
    /// </summary>
    /// <param name="rawBody">The byte array to parse as body of an email message. This array may not contain headers.</param>
    private void ParseBody(byte[] rawBody)
    {
        if (IsMultiPart)
        {
            // Parses a MultiPart message
            ParseMultiPartBody(rawBody);
        }
        else
        {
            // Parses a non MultiPart message
            // Decode the body accodingly and set the Body property
            Body = DecodeBody(rawBody, ContentTransferEncoding);
        }
    }

    /// <summary>
    /// Parses the <paramref name="rawBody"/> byte array as a MultiPart message.<br/>
    /// It is not valid to call this method if <see cref="IsMultiPart"/> returned <see langword="false"/>.<br/>
    /// Fills the <see cref="MessageParts"/> property of this <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawBody">The byte array which is to be parsed as a MultiPart message</param>
    private void ParseMultiPartBody(byte[] rawBody)
    {
        // Fetch out the boundary used to delimit the messages within the body
        string multipartBoundary = ContentType.Boundary;

        // Fetch the individual MultiPart message parts using the MultiPart boundary
        List<byte[]> bodyParts = GetMultiPartParts(rawBody, multipartBoundary);

        // Initialize the MessageParts property, with room to as many bodies as we have found
        MessageParts = new List<MessagePart>(bodyParts.Count);

        // Now parse each byte array as a message body and add it the the MessageParts property
        foreach (byte[] bodyPart in bodyParts)
        {
            MessagePart messagePart = GetMessagePart(bodyPart);
            MessageParts.Add(messagePart);
        }
    }

    /// <summary>
    /// Given a byte array describing a full message.<br/>
    /// Parses the byte array into a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawMessageContent">The byte array containing both headers and body of a message</param>
    /// <returns>A <see cref="MessagePart"/> which was described by the <paramref name="rawMessageContent"/> byte array</returns>
    private static MessagePart GetMessagePart(byte[] rawMessageContent)
    {
        // Find the headers and the body parts of the byte array
        MessageHeader headers;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headers, out body);

        // Create a new MessagePart from the headers and the body
        return new MessagePart(body, headers);
    }

    /// <summary>
    /// Gets a list of byte arrays where each entry in the list is a full message of a message part
    /// </summary>
    /// <param name="rawBody">The raw byte array describing the body of a message which is a MultiPart message</param>
    /// <param name="multipPartBoundary">The delimiter that splits the different MultiPart bodies from each other</param>
    /// <returns>A list of byte arrays, each a full message of a <see cref="MessagePart"/></returns>
    private static List<byte[]> GetMultiPartParts(byte[] rawBody, string multipPartBoundary)
    {
        // This is the list we want to return
        List<byte[]> messageBodies = new List<byte[]>();

        // Create a stream from which we can find MultiPart boundaries
        using (MemoryStream stream = new MemoryStream(rawBody))
        {
            bool lastMultipartBoundaryEncountered;

            // Find the start of the first message in this multipart
            // Since the method returns the first character on a the line containing the MultiPart boundary, we
            // need to add the MultiPart boundary with prepended "--" and appended CRLF pair to the position returned.
            int startLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) + ("--" + multipPartBoundary + "\r\n").Length;
            while (true)
            {
                // When we have just parsed the last multipart entry, stop parsing on
                if (lastMultipartBoundaryEncountered)
                    break;

                // Find the end location of the current multipart
                // Since the method returns the first character on a the line containing the MultiPart boundary, we
                // need to go a CRLF pair back, so that we do not get that into the body of the message part
                int stopLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) - "\r\n".Length;

                // If we could not find the next multipart boundary, but we had not yet discovered the last boundary, then
                // we will consider the rest of the bytes as contained in a last message part.
                if (stopLocation <= -1)
                {
                    // Include everything except the last CRLF.
                    stopLocation = (int)stream.Length - "\r\n".Length;

                    // We consider this as the last part
                    lastMultipartBoundaryEncountered = true;

                    // Special case: when the last multipart delimiter is not ending with "--", but is indeed the last
                    // one, then the next multipart would contain nothing, and we should not include such one.
                    if (startLocation >= stopLocation)
                        break;
                }

                // We have now found the start and end of a message part
                // Now we create a byte array with the correct length and put the message part's bytes into
                // it and add it to our list we want to return
                int length = stopLocation - startLocation;
                byte[] messageBody = new byte[length];
                Array.Copy(rawBody, startLocation, messageBody, 0, length);
                messageBodies.Add(messageBody);

                // We want to advance to the next message parts start.
                // We can find this by jumping forward the MultiPart boundary from the last
                // message parts end position
                startLocation = stopLocation + ("\r\n" + "--" + multipPartBoundary + "\r\n").Length;
            }
        }

        // We are done
        return messageBodies;
    }

    /// <summary>
    /// Method that is able to find a specific MultiPart boundary in a Stream.<br/>
    /// The Stream passed should not be used for anything else then for looking for MultiPart boundaries
    /// <param name="stream">The stream to find the next MultiPart boundary in. Do not use it for anything else then with this method.</param>
    /// <param name="multiPartBoundary">The MultiPart boundary to look for. This should be found in the <see cref="ContentType"/> header</param>
    /// <param name="lastMultipartBoundaryFound">Is set to <see langword="true"/> if the next MultiPart boundary was indicated to be the last one, by having -- appended to it. Otherwise set to <see langword="false"/></param>
    /// </summary>
    /// <returns>The position of the first character of the line that contained MultiPartBoundary or -1 if no (more) MultiPart boundaries was found</returns>
    private static int FindPositionOfNextMultiPartBoundary(Stream stream, string multiPartBoundary, out bool lastMultipartBoundaryFound)
    {
        lastMultipartBoundaryFound = false;
        while (true)
        {
            // Get the current position. This is the first position on the line - no characters of the line will
            // have been read yet
            int currentPos = (int)stream.Position;

            // Read the line
            string line = StreamUtility.ReadLineAsAscii(stream);

            // If we kept reading until there was no more lines, we did not meet
            // the MultiPart boundary. -1 is then returned to describe this.
            if (line == null)
                return -1;

            // The MultiPart boundary is the MultiPartBoundary with "--" in front of it
            // which is to be at the very start of a line
            if (line.StartsWith("--" + multiPartBoundary, StringComparison.Ordinal))
            {
                // Check if the found boundary was also the last one
                lastMultipartBoundaryFound = line.StartsWith("--" + multiPartBoundary + "--", StringComparison.OrdinalIgnoreCase);
                return currentPos;
            }
        }
    }

    /// <summary>
    /// Decodes a byte array into another byte array based upon the Content Transfer encoding
    /// </summary>
    /// <param name="messageBody">The byte array to decode into another byte array</param>
    /// <param name="contentTransferEncoding">The <see cref="ContentTransferEncoding"/> of the byte array</param>
    /// <returns>A byte array which comes from the <paramref name="contentTransferEncoding"/> being used on the <paramref name="messageBody"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageBody"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">Thrown if the <paramref name="contentTransferEncoding"/> is unsupported</exception>
    private static byte[] DecodeBody(byte[] messageBody, ContentTransferEncoding contentTransferEncoding)
    {
        if (messageBody == null)
            throw new ArgumentNullException("messageBody");

        switch (contentTransferEncoding)
        {
            case ContentTransferEncoding.QuotedPrintable:
                // If encoded in QuotedPrintable, everything in the body is in US-ASCII
                return QuotedPrintable.DecodeContentTransferEncoding(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.Base64:
                // If encoded in Base64, everything in the body is in US-ASCII
                return Base64.Decode(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.SevenBit:
            case ContentTransferEncoding.Binary:
            case ContentTransferEncoding.EightBit:
                // We do not have to do anything
                return messageBody;

            default:
                throw new ArgumentOutOfRangeException("contentTransferEncoding");
        }
    }
    #endregion

    #region Public methods
    /// <summary>
    /// Gets this MessagePart's <see cref="Body"/> as text.<br/>
    /// This is simply the <see cref="BodyEncoding"/> being used on the raw bytes of the <see cref="Body"/> property.<br/>
    /// This method is only valid to call if it is not a MultiPart message and therefore contains a body.<br/>
    /// </summary>
    /// <returns>The <see cref="Body"/> property as a string</returns>
    public string GetBodyAsText()
    {
        return BodyEncoding.GetString(Body);
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a file.<br/>
    /// There are no methods to reload the file.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="MessagePart"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(Body, 0, Body.Length);
    }
    #endregion
}

/// <summary>
/// <see cref="Enum"/> that describes the ContentTransferEncoding header field
/// </summary>
/// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for more details</remarks>
public enum ContentTransferEncoding
{
    /// <summary>
    /// 7 bit Encoding
    /// </summary>
    SevenBit,

    /// <summary>
    /// 8 bit Encoding
    /// </summary>
    EightBit,

    /// <summary>
    /// Quoted Printable Encoding
    /// </summary>
    QuotedPrintable,

    /// <summary>
    /// Base64 Encoding
    /// </summary>
    Base64,

    /// <summary>
    /// Binary Encoding
    /// </summary>
    Binary
}

/// <summary>
/// Class that hold information about one "Received:" header line.
/// 
/// Visit these RFCs for more information:
/// <see href="http://tools.ietf.org/html/rfc5321#section-4.4">RFC 5321 section 4.4</see>
/// <see href="http://tools.ietf.org/html/rfc4021#section-3.6.7">RFC 4021 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2822#section-3.6.7">RFC 2822 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2821#section-4.4">RFC 2821 section 4.4</see>
/// </summary>
public class Received
{
    /// <summary>
    /// The date of this received line.
    /// Is <see cref="DateTime.MinValue"/> if not present in the received header line.
    /// </summary>
    public DateTime Date { get { return _date; } private set { _date = value; } }
    private DateTime _date;

    /// <summary>
    /// A dictionary that contains the names and values of the
    /// received header line.
    /// If the received header is invalid and contained one name
    /// multiple times, the first one is used and the rest is ignored.
    /// </summary>
    /// <example>
    /// If the header lines looks like:
    /// <code>
    /// from sending.com (localMachine [127.0.0.1]) by test.net (Postfix)
    /// </code>
    /// then the dictionary will contain two keys: "from" and "by" with the values
    /// "sending.com (localMachine [127.0.0.1])" and "test.net (Postfix)".
    /// </example>
    public Dictionary<string, string> Names { get { return _names; } private set { _names = value; } }
    private Dictionary<string, string> _names; 

    /// <summary>
    /// The raw input string that was parsed into this class.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// Parses a Received header value.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception></exception>
    public Received(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // Remember the raw input if someone whishes to use it
        Raw = headerValue;

        // Default Date value
        Date = DateTime.MinValue;

        // The date part is the last part of the string, and is preceeded by a semicolon
        // Some emails forgets to specify the date, therefore we need to check if it is there
        if (headerValue.Contains(";"))
        {
            string datePart = headerValue.Substring(headerValue.LastIndexOf(";") + 1);
            Date = Rfc2822DateTime.StringToDate(datePart);
        }

        Names = ParseDictionary(headerValue);
    }

    /// <summary>
    /// Parses the Received header name-value-list into a dictionary.
    /// </summary>
    /// <param name="headerValue">The full header value for the Received header</param>
    /// <returns>A dictionary where the name-value-list has been parsed into</returns>
    private static Dictionary<string, string> ParseDictionary(string headerValue)
    {
        Dictionary<string, string> dictionary = new Dictionary<string, string>();

        // Remove the date part from the full headerValue if it is present
        string headerValueWithoutDate = headerValue;
        if (headerValue.Contains(";"))
        {
            headerValueWithoutDate = headerValue.Substring(0, headerValue.LastIndexOf(";"));
        }

        // Reduce any whitespace character to one space only
        headerValueWithoutDate = Regex.Replace(headerValueWithoutDate, @"\s+", " ");

        // The regex below should capture the following:
        // The name consists of non-whitespace characters followed by a whitespace and then the value follows.
        // There are multiple cases for the value part:
        //   1: Value is just some characters not including any whitespace
        //   2: Value is some characters, a whitespace followed by an unlimited number of
        //      parenthesized values which can contain whitespaces, each delimited by whitespace
        //
        // Cheat sheet for regex:
        // \s means every whitespace character
        // [^\s] means every character except whitespace characters
        // +? is a non-greedy equivalent of +
        const string pattern = @"(?<name>[^\s]+)\s(?<value>[^\s]+(\s\(.+?\))*)";

        // Find each match in the string
        MatchCollection matches = Regex.Matches(headerValueWithoutDate, pattern);
        foreach (Match match in matches)
        {
            // Add the name and value part found in the matched result to the dictionary
            string name = match.Groups["name"].Value;
            string value = match.Groups["value"].Value;

            // Check if the name is really a comment.
            // In this case, the first entry in the header value
            // is a comment
            if (name.StartsWith("("))
            {
                continue;
            }

            // Only add the first name pair
            // All subsequent pairs are ignored, as they are invalid anyway
            if (!dictionary.ContainsKey(name))
                dictionary.Add(name, value);
        }

        return dictionary;
    }
}

/// <summary>
/// This class is used for RFC compliant email addresses.<br/>
/// <br/>
/// The class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// The <seealso cref="MailAddress"/> does not cover all the possible formats 
/// for <a href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</a> compliant email addresses.
/// This class is used as an address wrapper to account for that deficiency.
/// </remarks>
public class RfcMailAddress
{
    #region Properties
    ///<summary>
    /// The email address of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly string.Empty since RFC mail addresses does not require an email address specified.
    ///</summary>
    ///<example>
    /// Example header with email address:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// Address will be <c>test@mail.com</c><br/>
    ///</example>
    ///<example>
    /// Example header without email address:<br/>
    /// To: <c>Test</c><br/>
    /// Address will be <see cref="string.Empty"/>.
    ///</example>
    public string Address { get { return _address; } private set { _address = value; } }
    private string _address;

    ///<summary>
    /// The display name of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly <see cref="string.Empty"/> since RFC mail addresses does not require a display name to be specified.
    ///</summary>
    ///<example>
    /// Example header with display name:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// DisplayName will be <c>Test</c>
    ///</example>
    ///<example>
    /// Example header without display name:<br/>
    /// To: <c>test@test.com</c><br/>
    /// DisplayName will be <see cref="string.Empty"/>
    ///</example>
    public string DisplayName { get { return _displayName; } private set { _displayName = value; } }
    private string _displayName;

    /// <summary>
    /// This is the Raw string used to describe the <see cref="RfcMailAddress"/>.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// The <see cref="MailAddress"/> associated with the <see cref="RfcMailAddress"/>. 
    /// </summary>
    /// <remarks>
    /// The value of this property can be <see lanword="null"/> in instances where the <see cref="MailAddress"/> cannot represent the address properly.<br/>
    /// Use <see cref="HasValidMailAddress"/> property to see if this property is valid.
    /// </remarks>
    public MailAddress MailAddress { get { return _mailAddress; } private set { _mailAddress = value; } }
    private MailAddress _mailAddress;

    /// <summary>
    /// Specifies if the object contains a valid <see cref="MailAddress"/> reference.
    /// </summary>
    public bool HasValidMailAddress
    {
        get { return MailAddress != null; }
    }
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs an <see cref="RfcMailAddress"/> object from a <see cref="MailAddress"/> object.<br/>
    /// This constructor is used when we were able to construct a <see cref="MailAddress"/> from a string.
    /// </summary>
    /// <param name="mailAddress">The address that <paramref name="raw"/> was parsed into</param>
    /// <param name="raw">The raw unparsed input which was parsed into the <paramref name="mailAddress"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="mailAddress"/> or <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(MailAddress mailAddress, string raw)
    {
        if (mailAddress == null)
            throw new ArgumentNullException("mailAddress");

        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = mailAddress;
        Address = mailAddress.Address;
        DisplayName = mailAddress.DisplayName;
        Raw = raw;
    }

    /// <summary>
    /// When we were unable to parse a string into a <see cref="MailAddress"/>, this constructor can be
    /// used. The Raw string is then used as the <see cref="DisplayName"/>.
    /// </summary>
    /// <param name="raw">The raw unparsed input which could not be parsed</param>
    /// <exception cref="ArgumentNullException">If <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(string raw)
    {
        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = null;
        Address = string.Empty;
        DisplayName = raw;
        Raw = raw;
    }
    #endregion

    /// <summary>
    /// A string representation of the <see cref="RfcMailAddress"/> object
    /// </summary>
    /// <returns>Returns the string representation for the object</returns>
    public override string ToString()
    {
        if (HasValidMailAddress)
            return MailAddress.ToString();

        return Raw;
    }

    #region Parsing
    /// <summary>
    /// Parses an email address from a MIME header<br/>
    /// <br/>
    /// Examples of input:
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>"Eksperten mailrobot" &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>&lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>noreply@mail.eksperten.dk</c><br/>
    /// <br/>
    /// It might also contain encoded text, which will then be decoded.
    /// </summary>
    /// <param name="input">The value to parse out and email and/or a username</param>
    /// <returns>A <see cref="RfcMailAddress"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    /// <remarks>
    /// <see href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</see> for more details on email syntax.<br/>
    /// <see cref="EncodedWord.Decode">For more information about encoded text</see>.
    /// </remarks>
    internal static RfcMailAddress ParseMailAddress(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Decode the value, if it was encoded
        input = EncodedWord.Decode(input.Trim());

        // Find the location of the email address
        int indexStartEmail = input.LastIndexOf('<');
        int indexEndEmail = input.LastIndexOf('>');

        try
        {
            if (indexStartEmail >= 0 && indexEndEmail >= 0)
            {
                string username;
                // Check if there is a username in front of the email address
                if (indexStartEmail > 0)
                {
                    // Parse out the user
                    username = input.Substring(0, indexStartEmail).Trim();
                }
                else
                {
                    // There was no user
                    username = string.Empty;
                }

                // Parse out the email address without the "<"  and ">"
                indexStartEmail = indexStartEmail + 1;
                int emailLength = indexEndEmail - indexStartEmail;
                string emailAddress = input.Substring(indexStartEmail, emailLength).Trim();

                // There has been cases where there was no emailaddress between the < and >
                if (!string.IsNullOrEmpty(emailAddress))
                {
                    // If the username is quoted, MailAddress' constructor will remove them for us
                    return new RfcMailAddress(new MailAddress(emailAddress, username), input);
                }
            }

            // This might be on the form noreply@mail.eksperten.dk
            // Check if there is an email, if notm there is no need to try
            if (input.Contains("@"))
                return new RfcMailAddress(new MailAddress(input), input);
        }
        catch (FormatException)
        {
            // Sometimes invalid emails are sent, like sqlmap-user@sourceforge.net. (last period is illigal)
            //DefaultLogger.Log.LogError("RfcMailAddress: Improper mail address: \"" + input + "\"");
        }

        // It could be that the format used was simply a name
        // which is indeed valid according to the RFC
        // Example:
        // Eksperten mailrobot
        return new RfcMailAddress(input);
    }

    /// <summary>
    /// Parses input of the form<br/>
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;, ...</c><br/>
    /// to a list of RFCMailAddresses
    /// </summary>
    /// <param name="input">The input that is a comma-separated list of EmailAddresses to parse</param>
    /// <returns>A List of <seealso cref="RfcMailAddress"/> objects extracted from the <paramref name="input"/> parameter.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    internal static List<RfcMailAddress> ParseMailAddresses(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        List<RfcMailAddress> returner = new List<RfcMailAddress>();

        // MailAddresses are split by commas
        IEnumerable<string> mailAddresses = Utility.SplitStringWithCharNotInsideQuotes(input, ',');

        // Parse each of these
        foreach (string mailAddress in mailAddresses)
        {
            returner.Add(ParseMailAddress(mailAddress));
        }

        return returner;
    }
    #endregion
}

/// <summary>
/// Class that holds all headers for a message<br/>
/// Headers which are unknown the the parser will be held in the <see cref="UnknownHeaders"/> collection.<br/>
/// <br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// See <a href="http://tools.ietf.org/html/rfc4021">RFC 4021</a> for a large list of headers.<br/>
/// </remarks>
public sealed class MessageHeader
{
    #region Properties
    /// <summary>
    /// All headers which were not recognized and explicitly dealt with.<br/>
    /// This should mostly be custom headers, which are marked as X-[name].<br/>
    /// <br/>
    /// This list will be empty if all headers were recognized and parsed.
    /// </summary>
    /// <remarks>
    /// If you as a user, feels that a header in this collection should
    /// be parsed, feel free to notify the developers.
    /// </remarks>
    public NameValueCollection UnknownHeaders { get { return _unknownHeaders; } private set { _unknownHeaders = value; } }
    private NameValueCollection _unknownHeaders;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    /// <see cref="MessageId">For an ID of the message</see>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Message keywords<br/>
    /// <br/>
    /// The list will be empty if no Keywords header was present in the message
    /// </summary>
    public List<string> Keywords { get { return _keywords; } private set { _keywords = value; } }
    private List<string> _keywords;

    /// <summary>
    /// A List of emails to people who wishes to be notified when some event happens.<br/>
    /// These events could be email:
    /// <list type="bullet">
    ///   <item>deletion</item>
    ///   <item>printing</item>
    ///   <item>received</item>
    ///   <item>...</item>
    /// </list>
    /// The list will be empty if no Disposition-Notification-To header was present in the message
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc3798">RFC 3798</a> for details</remarks>
    public List<RfcMailAddress> DispositionNotificationTo { get { return _dispositionNotificationTo; } private set { _dispositionNotificationTo = value; } }
    private List<RfcMailAddress> _dispositionNotificationTo;

    /// <summary>
    /// This is the Received headers. This tells the path that the email went.<br/>
    /// <br/>
    /// The list will be empty if no Received header was present in the message
    /// </summary>
    public List<Received> Received { get { return _recieved; } private set { _recieved = value; } }
    private List<Received> _recieved;

    /// <summary>
    /// Importance of this email.<br/>
    /// <br/>
    /// The importance level is set to normal, if no Importance header field was mentioned or it contained
    /// unknown information. This is the expected behavior according to the RFC.
    /// </summary>
    public MailPriority Importance { get { return _importance; } private set { _importance = value; } }
    private MailPriority _importance; 

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// Carbon Copy. This specifies who got a copy of the message.<br/>
    /// <br/>
    /// The list will be empty if no Cc header was present in the message
    /// </summary>
    public List<RfcMailAddress> Cc { get { return _cc; } private set { _cc = value; } }
    private List<RfcMailAddress> _cc;

    /// <summary>
    /// Blind Carbon Copy. This specifies who got a copy of the message, but others
    /// cannot see who these persons are.<br/>
    /// <br/>
    /// The list will be empty if no Received Bcc was present in the message
    /// </summary>
    public List<RfcMailAddress> Bcc { get { return _bcc; } private set { _bcc = value; } }
    private List<RfcMailAddress> _bcc;

    /// <summary>
    /// Specifies who this mail was for<br/>
    /// <br/>
    /// The list will be empty if no To header was present in the message
    /// </summary>
    public List<RfcMailAddress> To { get { return _to; } private set { _to = value; } }
    private List<RfcMailAddress> _to;

    /// <summary>
    /// Specifies who sent the email<br/>
    /// <br/>
    /// <see langword="null"/> if no From header field was present in the message
    /// </summary>
    public RfcMailAddress From { get { return _from; } private set { _from = value; } }
    private RfcMailAddress _from;

    /// <summary>
    /// Specifies who a reply to the message should be sent to<br/>
    /// <br/>
    /// <see langword="null"/> if no Reply-To header field was present in the message
    /// </summary>
    public RfcMailAddress ReplyTo { get { return _replyTo; } private set { _replyTo = value; } }
    private RfcMailAddress _replyTo;

    /// <summary>
    /// The message identifier(s) of the original message(s) to which the
    /// current message is a reply.<br/>
    /// <br/>
    /// The list will be empty if no In-Reply-To header was present in the message
    /// </summary>
    public List<string> InReplyTo { get { return _inReplyTo; } private set { _inReplyTo = value; } }
    private List<string> _inReplyTo;

    /// <summary>
    /// The message identifier(s) of other message(s) to which the current
    /// message is related to.<br/>
    /// <br/>
    /// The list will be empty if no References header was present in the message
    /// </summary>
    public List<string> References { get { return _references; } private set { _references = value; } }
    private List<string> _references;

    /// <summary>
    /// This is the sender of the email address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Sender header field was present in the message
    /// </summary>
    /// <remarks>
    /// The RFC states that this field can be used if a secretary
    /// is sending an email for someone she is working for.
    /// The email here will then be the secretary's email, and
    /// the Reply-To field would hold the address of the person she works for.<br/>
    /// RFC states that if the Sender is the same as the From field,
    /// sender should not be included in the message.
    /// </remarks>
    public RfcMailAddress Sender { get { return _sender; } private set { _sender = value; } }
    private RfcMailAddress _sender;

    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDispisition; } private set { _contentDispisition = value; } }
    private ContentDisposition _contentDispisition;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the raw value. <see cref="DateSent"/> for a parsed up <see cref="DateTime"/> value of this field.<br/>
    /// <br/>
    /// <see langword="DateTime.MinValue"/> if no Date header field was present in the message or if the date could not be parsed.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public string Date { get { return _date; } private set { _date = value; } }
    private string _date;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the parsed equivalent of <see cref="Date"/>.<br/>
    /// Notice that the <see cref="TimeZone"/> of the <see cref="DateTime"/> object is in UTC and has NOT been converted
    /// to local <see cref="TimeZone"/>.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public DateTime DateSent { get { return _dateSent; } private set { _dateSent = value; } }
    private DateTime _dateSent;

    /// <summary>
    /// An ID of the message that is SUPPOSED to be in every message according to the RFC.<br/>
    /// The ID is unique.<br/>
    /// <br/>
    /// <see langword="null"/> if no Message-ID header field was present in the message
    /// </summary>
    public string MessageId { get { return _messageId; } private set { _messageId = value; } }
    private string _messageId;

    /// <summary>
    /// The Mime Version.<br/>
    /// This field will almost always show 1.0<br/>
    /// <br/>
    /// <see langword="null"/> if no Mime-Version header field was present in the message
    /// </summary>
    public string MimeVersion { get { return _mimeVersion; } private set { _mimeVersion = value; } }
    private string _mimeVersion;

    /// <summary>
    /// A single <see cref="RfcMailAddress"/> with no username inside.<br/>
    /// This is a trace header field, that should be in all messages.<br/>
    /// Replies should be sent to this address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Return-Path header field was present in the message
    /// </summary>
    public RfcMailAddress ReturnPath { get { return _returnPath; } private set { _returnPath = value; } }
    public RfcMailAddress _returnPath;

    /// <summary>
    /// The subject line of the message in decoded, one line state.<br/>
    /// This should be in all messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Subject header field was present in the message
    /// </summary>
    public string Subject { get { return _subject; } private set { _subject = value; } }
    private string _subject;
    #endregion

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a MessageHeader
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid MessageHeader object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessageHeader(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Create empty lists as defaults. We do not like null values
        // List with an initial capacity set to zero will be replaced
        // when a corrosponding header is found
        To = new List<RfcMailAddress>(0);
        Cc = new List<RfcMailAddress>(0);
        Bcc = new List<RfcMailAddress>(0);
        Received = new List<Received>();
        Keywords = new List<string>();
        InReplyTo = new List<string>(0);
        References = new List<string>(0);
        DispositionNotificationTo = new List<RfcMailAddress>();
        UnknownHeaders = new NameValueCollection();

        // Default importancetype is Normal (assumed if not set)
        Importance = MailPriority.Normal;

        // 7BIT is the default ContentTransferEncoding (assumed if not set)
        ContentTransferEncoding = ContentTransferEncoding.SevenBit;

        // text/plain; charset=us-ascii is the default ContentType
        ContentType = new ContentType("text/plain; charset=us-ascii");

        // Now parse the actual headers
        ParseHeaders(headers);
    }

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a <see cref="MessageHeader"/>
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid <see cref="MessageHeader"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    private void ParseHeaders(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Now begin to parse the header values
        foreach (string headerName in headers.Keys)
        {
            string[] headerValues = headers.GetValues(headerName);
            if (headerValues != null)
            {
                foreach (string headerValue in headerValues)
                {
                    ParseHeader(headerName, headerValue);
                }
            }
        }
    }

    #region Header fields parsing
    /// <summary>
    /// Parses a single header and sets member variables according to it.
    /// </summary>
    /// <param name="headerName">The name of the header</param>
    /// <param name="headerValue">The value of the header in unfolded state (only one line)</param>
    /// <exception cref="ArgumentNullException">If <paramref name="headerName"/> or <paramref name="headerValue"/> is <see langword="null"/></exception>
    private void ParseHeader(string headerName, string headerValue)
    {
        if (headerName == null)
            throw new ArgumentNullException("headerName");

        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerName.ToUpperInvariant())
        {
            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "TO":
                To = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "CC":
                Cc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "BCC":
                Bcc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "FROM":
                // There is only one MailAddress in the from field
                From = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            // The implementation here might be wrong
            case "REPLY-TO":
                // This field may actually be a list of addresses, but no
                // such case has been encountered
                ReplyTo = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "SENDER":
                Sender = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            // RFC 5322:
            // The "Keywords:" field contains a comma-separated list of one or more
            // words or quoted-strings.
            // The field are intended to have only human-readable content
            // with information about the message
            case "KEYWORDS":
                string[] keywordsTemp = headerValue.Split(',');
                foreach (string keyword in keywordsTemp)
                {
                    // Remove the quotes if there is any
                    Keywords.Add(Utility.RemoveQuotesIfAny(keyword.Trim()));
                }
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RECEIVED":
                // Simply add the value to the list
                Received.Add(new Received(headerValue.Trim()));
                break;

            case "IMPORTANCE":
                Importance = HeaderFieldParser.ParseImportance(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc3798#section-2.1
            case "DISPOSITION-NOTIFICATION-TO":
                DispositionNotificationTo = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            case "MIME-VERSION":
                MimeVersion = headerValue.Trim();
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            case "SUBJECT":
                Subject = EncodedWord.Decode(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RETURN-PATH":
                // Return-paths does not include a username, but we 
                // may still use the address parser 
                ReturnPath = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            // Example Message-ID
            // <33cdd74d6b89ab2250ecd75b40a41405@nfs.eksperten.dk>
            case "MESSAGE-ID":
                MessageId = HeaderFieldParser.ParseId(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "IN-REPLY-TO":
                InReplyTo = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "REFERENCES":
                References = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.1))
            case "DATE":
                Date = headerValue.Trim();
                DateSent = Rfc2822DateTime.StringToDate(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-6
            // See ContentTransferEncoding class for more details
            case "CONTENT-TRANSFER-ENCODING":
                ContentTransferEncoding = HeaderFieldParser.ParseContentTransferEncoding(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-8
            case "CONTENT-DESCRIPTION":
                // Human description of for example a file. Can be encoded
                ContentDescription = EncodedWord.Decode(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-5.1
            // Example: Content-type: text/plain; charset="us-ascii"
            case "CONTENT-TYPE":
                ContentType = HeaderFieldParser.ParseContentType(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2183
            case "CONTENT-DISPOSITION":
                ContentDisposition = HeaderFieldParser.ParseContentDisposition(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-7
            // Example: <foo4*foo1@bar.net>
            case "CONTENT-ID":
                ContentId = HeaderFieldParser.ParseId(headerValue);
                break;

            default:
                // This is an unknown header

                // Custom headers are allowed. That means headers
                // that are not mentionen in the RFC.
                // Such headers start with the letter "X"
                // We do not have any special parsing of such

                // Add it to unknown headers
                UnknownHeaders.Add(headerName, headerValue);
                break;
        }
    }
    #endregion
}

/// <summary>
/// This is the root of the email tree structure.<br/>
/// <see cref="Mime.MessagePart"/> for a description about the structure.<br/>
/// <br/>
/// A Message (this class) contains the headers of an email message such as:
/// <code>
///  - To
///  - From
///  - Subject
///  - Content-Type
///  - Message-ID
/// </code>
/// which are located in the <see cref="Headers"/> property.<br/>
/// <br/>
/// Use the <see cref="Message.MessagePart"/> property to find the actual content of the email message.
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Message
{
    #region Public properties
    /// <summary>
    /// Headers of the Message.
    /// </summary>
    public MessageHeader Headers { get { return _headers; } private set { _headers = value; } }
    private MessageHeader _headers;

    /// <summary>
    /// This is the body of the email Message.<br/>
    /// <br/>
    /// If the body was parsed for this Message, this property will never be <see langword="null"/>.
    /// </summary>
    public MessagePart MessagePart { get { return _messagePart; } private set { _messagePart = value; } }
    private MessagePart _messagePart;

    /// <summary>
    /// The raw content from which this message has been constructed.<br/>
    /// These bytes can be persisted and later used to recreate the Message.
    /// </summary>
    public byte[] RawMessage { get { return _rawMessage; } private set { _rawMessage = value; } }
    private byte[] _rawMessage;
    #endregion

    #region Constructors
    /// <summary>
    /// Convenience constructor for <see cref="Mime.Message(byte[], bool)"/>.<br/>
    /// <br/>
    /// Creates a message from a byte array. The full message including its body is parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    public Message(byte[] rawMessageContent)
        : this(rawMessageContent, true)
    {
    }

    /// <summary>
    /// Constructs a message from a byte array.<br/>
    /// <br/>
    /// The headers are always parsed, but if <paramref name="parseBody"/> is <see langword="false"/>, the body is not parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    /// <param name="parseBody">
    /// <see langword="true"/> if the body should be parsed,
    /// <see langword="false"/> if only headers should be parsed out of the <paramref name="rawMessageContent"/> byte array
    /// </param>
    public Message(byte[] rawMessageContent, bool parseBody)
    {
        RawMessage = rawMessageContent;

        // Find the headers and the body parts of the byte array
        MessageHeader headersTemp;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headersTemp, out body);

        // Set the Headers property
        Headers = headersTemp;

        // Should we also parse the body?
        if (parseBody)
        {
            // Parse the body into a MessagePart
            MessagePart = new MessagePart(body, Headers);
        }
    }
    #endregion

    /// <summary>
    /// This method will convert this <see cref="Message"/> into a <see cref="MailMessage"/> equivalent.<br/>
    /// The returned <see cref="MailMessage"/> can be used with <see cref="System.Net.Mail.SmtpClient"/> to forward the email.<br/>
    /// <br/>
    /// You should be aware of the following about this method:
    /// <list type="bullet">
    /// <item>
    ///    All sender and receiver mail addresses are set.
    ///    If you send this email using a <see cref="System.Net.Mail.SmtpClient"/> then all
    ///    receivers in To, From, Cc and Bcc will receive the email once again.
    /// </item>
    /// <item>
    ///    If you view the source code of this Message and looks at the source code of the forwarded
    ///    <see cref="MailMessage"/> returned by this method, you will notice that the source codes are not the same.
    ///    The content that is presented by a mail client reading the forwarded <see cref="MailMessage"/> should be the
    ///    same as the original, though.
    /// </item>
    /// <item>
    ///    Content-Disposition headers will not be copied to the <see cref="MailMessage"/>.
    ///    It is simply not possible to set these on Attachments.
    /// </item>
    /// <item>
    ///    HTML content will be treated as the preferred view for the <see cref="MailMessage.Body"/>. Plain text content will be used for the
    ///    <see cref="MailMessage.Body"/> when HTML is not available.
    /// </item>
    /// </list>
    /// </summary>
    /// <returns>A <see cref="MailMessage"/> object that contains the same information that this Message does</returns>
    public MailMessage ToMailMessage()
    {
        // Construct an empty MailMessage to which we will gradually build up to look like the current Message object (this)
        MailMessage message = new MailMessage();

        message.Subject = Headers.Subject;

        // We here set the encoding to be UTF-8
        // We cannot determine what the encoding of the subject was at this point.
        // But since we know that strings in .NET is stored in UTF, we can
        // use UTF-8 to decode the subject into bytes
        message.SubjectEncoding = Encoding.UTF8;

        // The HTML version should take precedent over the plain text if it is available
        MessagePart preferredVersion = FindFirstHtmlVersion();
        if (preferredVersion != null)
        {
            // Make sure that the IsBodyHtml property is being set correctly for our content
            message.IsBodyHtml = true;
        }
        else
        {
            // otherwise use the first plain text version as the body, if it exists
            preferredVersion = FindFirstPlainTextVersion();
        }

        if (preferredVersion != null)
        {
            message.Body = preferredVersion.GetBodyAsText();
            message.BodyEncoding = preferredVersion.BodyEncoding;
        }

        // Add body and alternative views (html and such) to the message
        IEnumerable<MessagePart> textVersions = FindAllTextVersions();
        foreach (MessagePart textVersion in textVersions)
        {
            // The textVersions also contain the preferred version, therefore
            // we should skip that one
            if (textVersion == preferredVersion)
                continue;

            MemoryStream stream = new MemoryStream(textVersion.Body);
            AlternateView alternative = new AlternateView(stream);
            alternative.ContentId = textVersion.ContentId;
            alternative.ContentType = textVersion.ContentType;
            message.AlternateViews.Add(alternative);
        }

        // Add attachments to the message
        IEnumerable<MessagePart> attachments = FindAllAttachments();
        foreach (MessagePart attachmentMessagePart in attachments)
        {
            MemoryStream stream = new MemoryStream(attachmentMessagePart.Body);
            Attachment attachment = new Attachment(stream, attachmentMessagePart.ContentType);
            attachment.ContentId = attachmentMessagePart.ContentId;
            message.Attachments.Add(attachment);
        }

        if (Headers.From != null && Headers.From.HasValidMailAddress)
            message.From = Headers.From.MailAddress;

        if (Headers.ReplyTo != null && Headers.ReplyTo.HasValidMailAddress)
            message.ReplyTo = Headers.ReplyTo.MailAddress;

        if (Headers.Sender != null && Headers.Sender.HasValidMailAddress)
            message.Sender = Headers.Sender.MailAddress;

        foreach (RfcMailAddress to in Headers.To)
        {
            if (to.HasValidMailAddress)
                message.To.Add(to.MailAddress);
        }

        foreach (RfcMailAddress cc in Headers.Cc)
        {
            if (cc.HasValidMailAddress)
                message.CC.Add(cc.MailAddress);
        }

        foreach (RfcMailAddress bcc in Headers.Bcc)
        {
            if (bcc.HasValidMailAddress)
                message.Bcc.Add(bcc.MailAddress);
        }

        return message;
    }

    #region MessagePart Searching Methods

    /// <summary>
    /// Finds the first text/plain <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/plain version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/plain or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstPlainTextVersion()
    {
        return FindFirstMessagePartWithMediaType("text/plain");
    }

    /// <summary>
    /// Finds the first text/html <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/html version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/html or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstHtmlVersion()
    {
        return FindFirstMessagePartWithMediaType("text/html");
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which contains a text version.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsText"/> for MessageParts which are considered to be text versions.<br/>
    /// <br/>
    /// Examples of MessageParts media types are:
    /// <list type="bullet">
    ///    <item>text/plain</item>
    ///    <item>text/html</item>
    ///    <item>text/xml</item>
    /// </list>
    /// </summary>
    /// <returns>A List of MessageParts where each part is a text version</returns>
    public List<MessagePart> FindAllTextVersions()
    {
        return new TextVersionFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which are attachments to this message.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsAttachment"/> for MessageParts which are considered to be attachments.
    /// </summary>
    /// <returns>A List of MessageParts where each is considered an attachment</returns>
    public List<MessagePart> FindAllAttachments()
    {
        return new AttachmentFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> in the <see cref="Message"/> hierarchy with the given MediaType.<br/>
    /// <br/>
    /// The search in the hierarchy is a depth-first traversal.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found
    /// </returns>
    public MessagePart FindFirstMessagePartWithMediaType(string mediaType)
    {
        return new FindFirstMessagePartWithMediaType().VisitMessage(this, mediaType);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s in the <see cref="Message"/> hierarchy with the given MediaType.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> FindAllMessagePartsWithMediaType(string mediaType)
    {
        return new FindAllMessagePartsWithMediaType().VisitMessage(this, mediaType);
    }

    #endregion

    #region Message Persistence

    /// <summary>
    /// Save this <see cref="Message"/> to a file.<br/>
    /// <br/>
    /// Can be loaded at a later time using the <see cref="Load(FileInfo)"/> method.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="Message"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="Message"/> to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(RawMessage, 0, RawMessage.Length);
    }

    /// <summary>
    /// Loads a <see cref="Message"/> from a file containing a raw email.
    /// </summary>
    /// <param name="file">The File location to load the <see cref="Message"/> from. The file must exist.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception cref="FileNotFoundException">If <paramref name="file"/> does not exist</exception>
    /// <exception>Other exceptions relevant to a <see cref="FileStream"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="file"/></returns>
    public static Message Load(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        if (!file.Exists)
            throw new FileNotFoundException("Cannot load message from non-existent file", file.FullName);

        using (FileStream stream = new FileStream(file.FullName, FileMode.Open))
        {
            return Load(stream);
        }
    }


    /// <summary>
    /// Loads a <see cref="Message"/> from a <see cref="Stream"/> containing a raw email.
    /// </summary>
    /// <param name="messageStream">The <see cref="Stream"/> from which to load the raw <see cref="Message"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Read"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="messageStream"/></returns>
    public static Message Load(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        using (MemoryStream outStream = new MemoryStream())
        {
#if DOTNET4
				// TODO: Enable using native v4 framework methods when support is formally added.
				messageStream.CopyTo(outStream);
#else
            int bytesRead;
            byte[] buffer = new byte[4096];

            while ((bytesRead = messageStream.Read(buffer, 0, 4096)) > 0)
            {
                outStream.Write(buffer, 0, bytesRead);
            }
#endif
            byte[] content = outStream.ToArray();

            return new Message(content);
        }
    }
    #endregion
}

/// <summary>
/// Implements the CRAM-MD5 algorithm as specified in <a href="http://tools.ietf.org/html/rfc2195">RFC 2195</a>.
/// </summary>
internal static class CramMd5
{
    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x36.
    /// </summary>
    private static readonly byte[] ipad;

    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x5C.
    /// </summary>
    private static readonly byte[] opad;

    /// <summary>
    /// Initializes the static fields
    /// </summary>
    static CramMd5()
    {
        ipad = new byte[64];
        opad = new byte[64];
        for (int i = 0; i < ipad.Length; i++)
        {
            ipad[i] = 0x36;
            opad[i] = 0x5C;
        }
    }

    /// <summary>
    /// Computes the digest needed to login to a server using CRAM-MD5.<br/>
    /// <br/>
    /// This computes:<br/>
    /// MD5((password XOR opad), MD5((password XOR ipad), challenge))
    /// </summary>
    /// <param name="username">The username of the user who wants to log in</param>
    /// <param name="password">The password for the <paramref name="username"/></param>
    /// <param name="challenge">
    /// The challenge received from the server when telling it CRAM-MD5 authenticated is wanted.
    /// Is a base64 encoded string.
    /// </param>
    /// <returns>The response to the challenge, which the server can validate and log in the user if correct</returns>
    /// <exception cref="ArgumentNullException">
    /// If <paramref name="username"/>, 
    /// <paramref name="password"/> or 
    /// <paramref name="challenge"/> is <see langword="null"/>
    /// </exception>
    internal static string ComputeDigest(string username, string password, string challenge)
    {
        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (challenge == null)
            throw new ArgumentNullException("challenge");

        // Get the password bytes
        byte[] passwordBytes = GetSharedSecretInBytes(password);

        // The challenge is encoded in base64
        byte[] challengeBytes = Convert.FromBase64String(challenge);

        // Now XOR the password with the opad and ipad magic bytes
        byte[] passwordOpad = Xor(passwordBytes, opad);
        byte[] passwordIpad = Xor(passwordBytes, ipad);

        // Now do the computation: MD5((password XOR opad), MD5((password XOR ipad), challenge))
        byte[] digestValue = Hash(Concatenate(passwordOpad, Hash(Concatenate(passwordIpad, challengeBytes))));

        // Convert the bytes to a hex string
        // BitConverter writes the output as AF-B3-...
        // We need lower-case output without "-"
        string hex = BitConverter.ToString(digestValue).Replace("-", "").ToLowerInvariant();

        // Include the username in the resulting base64 encoded response
        return Convert.ToBase64String(Encoding.ASCII.GetBytes(username + " " + hex));
    }

    /// <summary>
    /// Hashes a byte array using the MD5 algorithm.
    /// </summary>
    /// <param name="toHash">The byte array to hash</param>
    /// <returns>The result of hashing the <paramref name="toHash"/> bytes with the MD5 algorithm</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toHash"/> is <see langword="null"/></exception>
    private static byte[] Hash(byte[] toHash)
    {
        if (toHash == null)
            throw new ArgumentNullException("toHash");

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            return md5.ComputeHash(toHash);
        }
    }

    /// <summary>
    /// Concatenates two byte arrays into one
    /// </summary>
    /// <param name="one">The first byte array</param>
    /// <param name="two">The second byte array</param>
    /// <returns>A concatenated byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="one"/> or <paramref name="two"/> is <see langword="null"/></exception>
    private static byte[] Concatenate(byte[] one, byte[] two)
    {
        if (one == null)
            throw new ArgumentNullException("one");

        if (two == null)
            throw new ArgumentNullException("two");

        // Create space for both byte arrays in one
        byte[] concatenated = new byte[one.Length + two.Length];

        // Copy the first one over
        Buffer.BlockCopy(one, 0, concatenated, 0, one.Length);

        // Copy the second one over
        Buffer.BlockCopy(two, 0, concatenated, one.Length, two.Length);

        // Return result
        return concatenated;
    }

    /// <summary>
    /// XORs a byte array with another.<br/>
    /// Each byte in <paramref name="toXor"/> is XORed with the corresponding byte
    /// in <paramref name="toXorWith"/> until the end of <paramref name="toXor"/> is encountered.
    /// </summary>
    /// <param name="toXor">The byte array to XOR</param>
    /// <param name="toXorWith">The byte array to XOR with</param>
    /// <returns>A new byte array with the XORed results</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toXor"/> or <paramref name="toXorWith"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the lengths of the arrays are not equal</exception>
    private static byte[] Xor(byte[] toXor, byte[] toXorWith)
    {
        if (toXor == null)
            throw new ArgumentNullException("toXor");

        if (toXorWith == null)
            throw new ArgumentNullException("toXorWith");

        if (toXor.Length != toXorWith.Length)
            throw new ArgumentException("The lengths of the arrays must be equal");

        // Create a new array to store results in
        byte[] xored = new byte[toXor.Length];

        // XOR each individual byte.
        for (int i = 0; i < toXor.Length; i++)
        {
            xored[i] = toXor[i];
            xored[i] ^= toXorWith[i];
        }

        // Return result
        return xored;
    }
    /// <summary>
    /// This method is responsible to generate the byte array needed
    /// from the shared secret - the password.<br/>
    /// 
    /// RFC 2195 says:<br/>
    /// The shared secret is null-padded to a length of 64 bytes. If the
    /// shared secret is longer than 64 bytes, the MD5 digest of the
    /// shared secret is used as a 16 byte input to the keyed MD5
    /// calculation.
    /// </summary>
    /// <param name="password">This is the shared secret</param>
    /// <returns>The 64 bytes that is to be used from the shared secret</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="password"/> is <see langword="null"/></exception>
    private static byte[] GetSharedSecretInBytes(string password)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        // Get the password in bytes
        byte[] passwordBytes = Encoding.ASCII.GetBytes(password);

        // If the length is larger than 64, we need to
        if (passwordBytes.Length > 64)
        {
            passwordBytes = new MD5CryptoServiceProvider().ComputeHash(passwordBytes);
        }

        if (passwordBytes.Length != 64)
        {
            byte[] returner = new byte[64];
            for (int i = 0; i < passwordBytes.Length; i++)
            {
                returner[i] = passwordBytes[i];
            }
            return returner;
        }

        return passwordBytes;
    }
}

/// <summary>
/// Class for computing the digest needed when issuing the APOP command to a POP3 server.
/// </summary>
internal static class Apop
{
    /// <summary>
    /// Create the digest for the APOP command so that the server can validate
    /// we know the password for some user.
    /// </summary>
    /// <param name="password">The password for the user</param>
    /// <param name="serverTimestamp">The timestamp advertised in the server greeting to the POP3 client</param>
    /// <returns>The password and timestamp hashed with the MD5 algorithm outputted as a HEX string</returns>
    public static string ComputeDigest(string password, string serverTimestamp)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        if (serverTimestamp == null)
            throw new ArgumentNullException("serverTimestamp");

        // The APOP command authorizes itself by using the password together
        // with the server timestamp. This way the password is not transmitted
        // in clear text, and the server can still verify we have the password.
        byte[] digestToHash = Encoding.ASCII.GetBytes(serverTimestamp + password);

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            // MD5 hash the digest
            byte[] result = md5.ComputeHash(digestToHash);

            // Convert the bytes to a hex string
            // BitConverter writes the output as AF-B3-...
            // We need lower-case output without "-"
            return BitConverter.ToString(result).Replace("-", "").ToLowerInvariant();
        }
    }
}

internal static class StreamUtility
{
    /// <summary>
    /// Read a line from the stream.
    /// A line is interpreted as all the bytes read until a CRLF or LF is encountered.<br/>
    /// CRLF pair or LF is not included in the string.
    /// </summary>
    /// <param name="stream">The stream from which the line is to be read</param>
    /// <returns>A line read from the stream returned as a byte array or <see langword="null"/> if no bytes were readable from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static byte[] ReadLineAsBytes(Stream stream)
    {
        if (stream == null)
            throw new ArgumentNullException("stream");

        using (MemoryStream memoryStream = new MemoryStream())
        {
            while (true)
            {
                int justRead = stream.ReadByte();
                if (justRead == -1 && memoryStream.Length > 0)
                    break;

                // Check if we started at the end of the stream we read from
                // and we have not read anything from it yet
                if (justRead == -1 && memoryStream.Length == 0)
                    return null;

                char readChar = (char)justRead;

                // Do not write \r or \n
                if (readChar != '\r' && readChar != '\n')
                    memoryStream.WriteByte((byte)justRead);

                // Last point in CRLF pair
                if (readChar == '\n')
                    break;
            }

            return memoryStream.ToArray();
        }
    }

    /// <summary>
    /// Read a line from the stream. <see cref="ReadLineAsBytes"/> for more documentation.
    /// </summary>
    /// <param name="stream">The stream to read from</param>
    /// <returns>A line read from the stream or <see langword="null"/> if nothing could be read from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static string ReadLineAsAscii(Stream stream)
    {
        byte[] readFromStream = ReadLineAsBytes(stream);
        return readFromStream != null ? Encoding.ASCII.GetString(readFromStream) : null;
    }
}

/// <summary>
/// Some of these states are defined by <a href="http://tools.ietf.org/html/rfc1939">RFC 1939</a>.<br/>
/// Which commands that are allowed in which state can be seen in the same RFC.<br/>
/// <br/>
/// Used to keep track of which state the <see cref="Pop3Client"/> is in.
/// </summary>
internal enum ConnectionState
{
    /// <summary>
    /// This is when the Pop3Client is not even connected to the server
    /// </summary>
    Disconnected,

    /// <summary>
    /// This is when the server is awaiting user credentials
    /// </summary>
    Authorization,

    /// <summary>
    /// This is when the server has been given the user credentials, and we are allowed
    /// to use commands specific to this users mail drop
    /// </summary>
    Transaction
}

/// <summary>
/// Describes the authentication method to use when authenticating towards a POP3 server.
/// </summary>
public enum AuthenticationMethod
{
    /// <summary>
    /// Authenticate using the UsernameAndPassword method.<br/>
    /// This will pass the username and password to the server in cleartext.<br/>
    /// <see cref="Apop"/> is more secure but might not be supported on a server.<br/>
    /// This method is not recommended. Use <see cref="Auto"/> instead.
    /// <br/>
    /// If SSL is used, there is no loss of security by using this authentication method.
    /// </summary>
    UsernameAndPassword,

    /// <summary>
    /// Authenticate using the Authenticated Post Office Protocol method, which is more secure then
    /// <see cref="UsernameAndPassword"/> since it is a request-response protocol where server checks if the
    ///  client knows a shared secret, which is the password, without the password itself being transmitted.<br/>
    /// This authentication method uses MD5 under its hood.<br/>
    /// <br/>
    /// This authentication method is not supported by many servers.<br/>
    /// Choose this option if you want maximum security.
    /// </summary>
    Apop,

    /// <summary>
    /// This is the recomended method to authenticate with.<br/>
    /// If <see cref="Apop"/> is supported by the server, <see cref="Apop"/> is used for authentication.<br/>
    /// If <see cref="Apop"/> is not supported, Auto will fall back to <see cref="UsernameAndPassword"/> authentication.
    /// </summary>
    Auto,

    /// <summary>
    /// Logs in the the POP3 server using CRAM-MD5 authentication scheme.<br/>
    /// This in essence uses the MD5 hashing algorithm on the user password and a server challenge.
    /// </summary>
    CramMd5
}

/// <summary>
/// POP3 compliant POP Client<br/>
/// <br/>	
/// If you want to override where logging is sent, look at <see cref="DefaultLogger"/>
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Pop3Client : IDisposable
{
    #region Private member properties
    /// <summary>
    /// The stream used to communicate with the server
    /// </summary>
    private Stream Stream { get { return _stream; } set { _stream = value; } }
    private Stream _stream;

    /// <summary>
    /// This is the last response the server sent back when a command was issued to it
    /// </summary>
    private string LastServerResponse { get { return _lastServerResponse; } set { _lastServerResponse = value; } }
    private string _lastServerResponse;

    /// <summary>
    /// The APOP time stamp sent by the server in it's welcome message if APOP is supported.
    /// </summary>
    private string ApopTimeStamp { get { return _apopTimeStamp; } set { _apopTimeStamp = value; } }
    private string _apopTimeStamp;

    /// <summary>
    /// Describes what state the <see cref="Pop3Client"/> is in
    /// </summary>
    private ConnectionState State { get { return _state; } set { _state = value; } }
    private ConnectionState _state;
    #endregion

    #region Public member properties
    /// <summary>
    /// Tells whether the <see cref="Pop3Client"/> is connected to a POP server or not
    /// </summary>
    public bool Connected { get { return _connected; } private set { _connected = value; } }
    private bool _connected;

    /// <summary>
    /// Allows you to check if the server supports
    /// the <see cref="AuthenticationMethod.Apop"/> authentication method.<br/>
    /// <br/>
    /// This value is filled when the connect method has returned,
    /// as the server tells in its welcome message if APOP is supported.
    /// </summary>
    public bool ApopSupported { get { return _apopSupported; } private set { _apopSupported = value; } }
    private bool _apopSupported;
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs a new Pop3Client for you to use.
    /// </summary>
    public Pop3Client()
    {
        SetInitialValues();
    }
    #endregion

    #region IDisposable implementation
    
    public void Dispose()
    {
        if (!_isDisposed)
        {
            try
            {
                Dispose(true);
            }
            finally
            {
                _isDisposed = true;
                GC.SuppressFinalize(this);
            }
        }
    }
    private bool _isDisposed=false;

    /// <summary>
    /// Disposes the <see cref="Pop3Client"/>.<br/>
    /// This is the implementation of the <see cref="IDisposable"/> interface.<br/>
    /// Sends the QUIT command to the server before closing the streams.
    /// </summary>
    /// <param name="disposing"><see langword="true"/> if managed and unmanaged code should be disposed, <see langword="false"/> if only managed code should be disposed</param>
    protected  void Dispose(bool disposing)
    {
        if (disposing && !_isDisposed)
        {
            if (Connected)
            {
                Disconnect();
            }
        }
    }
    
    protected void AssertDisposed()
    {
        if (_isDisposed)
        {
            string typeName = GetType().FullName;
            throw new ObjectDisposedException(typeName, String.Format(System.Globalization.CultureInfo.InvariantCulture, "Cannot access a disposed {0}.", typeName));
        }
    }

    #endregion

    #region Connection managing methods
    /// <summary>
    /// Connect to the server using user supplied stream
    /// </summary>
    /// <param name="stream">The stream used to communicate with the server</param>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public void Connect(Stream stream)
    {
        AssertDisposed();

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        if (stream == null)
            throw new ArgumentNullException("stream");

        Stream = stream;

        // Fetch the server one-line welcome greeting
        string response = StreamUtility.ReadLineAsAscii(Stream);

        // Check if the response was an OK response
        try
        {
            // Assume we now need the user to supply credentials
            // If we do not connect correctly, Disconnect will set the
            // state to Disconnected
            // If this is not set, Disconnect will throw an exception
            State = ConnectionState.Authorization;

            IsOkResponse(response);
            ExtractApopTimestamp(response);
            Connected = true;
        }
        catch (Exception e)
        {
            // If not close down the connection and abort
            DisconnectStreams();

            //DefaultLogger.Log.LogError("Connect(): " + "Error with connection, maybe POP3 server not exist");
            //DefaultLogger.Log.LogDebug("Last response from server was: " + LastServerResponse);
            throw new Exception("Server is not available", e);
        }
    }

    /// <summary>
    /// Connects to a remote POP3 server using default timeouts of 60.000 milliseconds
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/></exception>
    public void Connect(string hostname, int port, bool useSsl)
    {
        const int defaultTimeOut = 60000;
        Connect(hostname, port, useSsl, defaultTimeOut, defaultTimeOut, null);
    }

    /// <summary>
    /// Connects to a remote POP3 server
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <param name="receiveTimeout">Timeout in milliseconds before a socket should time out from reading. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="sendTimeout">Timeout in milliseconds before a socket should time out from sending. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="certificateValidator">If you want to validate the certificate in a SSL connection, pass a reference to your validator. Supply <see langword="null"/> if default should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/> or if any of the timeouts is less than -1.</exception>
    public void Connect(string hostname, int port, bool useSsl, int receiveTimeout, int sendTimeout, RemoteCertificateValidationCallback certificateValidator)
    {
        AssertDisposed();

        if (hostname == null)
            throw new ArgumentNullException("hostname");

        if (hostname.Length == 0)
            throw new ArgumentException("hostname cannot be empty", "hostname");

        if (port > IPEndPoint.MaxPort || port < IPEndPoint.MinPort)
            throw new ArgumentOutOfRangeException("port");

        if (receiveTimeout < -1)
            throw new ArgumentOutOfRangeException("receiveTimeout");

        if (sendTimeout < -1)
            throw new ArgumentOutOfRangeException("sendTimeout");

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        TcpClient clientSocket = new TcpClient();
        clientSocket.ReceiveTimeout = receiveTimeout;
        clientSocket.SendTimeout = sendTimeout;

        try
        {
            clientSocket.Connect(hostname, port);
        }
        catch (SocketException e)
        {
            // Close the socket - we are not connected, so no need to close stream underneath
            clientSocket.Close();

            //DefaultLogger.Log.LogError("Connect(): " + e.Message);
            throw new Exception("Server not found", e);
        }

        Stream stream;
        if (useSsl)
        {
            // If we want to use SSL, open a new SSLStream on top of the open TCP stream.
            // We also want to close the TCP stream when the SSL stream is closed
            // If a validator was passed to us, use it.
            SslStream sslStream;
            if (certificateValidator == null)
            {
                sslStream = new SslStream(clientSocket.GetStream(), false);
            }
            else
            {
                sslStream = new SslStream(clientSocket.GetStream(), false, certificateValidator);
            }
            sslStream.ReadTimeout = receiveTimeout;
            sslStream.WriteTimeout = sendTimeout;

            // Authenticate the server
            sslStream.AuthenticateAsClient(hostname);

            stream = sslStream;
        }
        else
        {
            // If we do not want to use SSL, use plain TCP
            stream = clientSocket.GetStream();
        }

        // Now do the connect with the same stream being used to read and write to
        Connect(stream);
    }

    /// <summary>
    /// Disconnects from POP3 server.
    /// Sends the QUIT command before closing the connection, which deletes all the messages that was marked as such.
    /// </summary>
    public void Disconnect()
    {
        AssertDisposed();

        if (State == ConnectionState.Disconnected)
            throw new Exception("You cannot disconnect a connection which is already disconnected");

        try
        {
            SendCommand("QUIT");
        }
        finally
        {
            DisconnectStreams();
        }
    }
    #endregion

    #region Authentication methods
    /// <summary>
    /// Authenticates a user towards the POP server using <see cref="AuthenticationMethod.Auto"/>.<br/>
    /// If this authentication fails but you are sure that the username and password is correct, it might
    /// be that that the POP3 server is wrongly telling the client it supports <see cref="AuthenticationMethod.Apop"/>.
    /// You should try using <see cref="Authenticate(string, string, AuthenticationMethod)"/> while passing <see cref="AuthenticationMethod.UsernameAndPassword"/> to the method.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password)
    {
        AssertDisposed();
        Authenticate(username, password, AuthenticationMethod.Auto);
    }

    /// <summary>
    /// Authenticates a user towards the POP server using some <see cref="AuthenticationMethod"/>.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <param name="authenticationMethod">The way that the client should authenticate towards the server</param>
    /// <exception cref="NotSupportedException">If <see cref="AuthenticationMethod.Apop"/> is used, but not supported by the server</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password, AuthenticationMethod authenticationMethod)
    {
        AssertDisposed();

        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (State != ConnectionState.Authorization)
            throw new Exception("You have to be connected and not authorized when trying to authorize yourself");

        try
        {
            switch (authenticationMethod)
            {
                case AuthenticationMethod.UsernameAndPassword:
                    AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.Apop:
                    AuthenticateUsingApop(username, password);
                    break;

                case AuthenticationMethod.Auto:
                    if (ApopSupported)
                        AuthenticateUsingApop(username, password);
                    else
                        AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.CramMd5:
                    AuthenticateUsingCramMd5(username, password);
                    break;
            }
        }
        catch (Exception e)
        {
            //DefaultLogger.Log.LogError("Problem logging in using method " + authenticationMethod + ". Server response was: " + LastServerResponse);

            // Throw a more specific exception if special cases of failure is detected
            // using the response the server generated when the last command was sent
            CheckFailedLoginServerResponse(LastServerResponse, e);

            // If no special failure is detected, tell that the login credentials were wrong
            throw e;
        }

        // We are now authenticated and therefore we enter the transaction state
        State = ConnectionState.Transaction;
    }

    /// <summary>
    /// Authenticates a user towards the POP server using the USER and PASSWORD commands
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingUserAndPassword(string username, string password)
    {
        SendCommand("USER " + username);
        SendCommand("PASS " + password);

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates a user towards the POP server using APOP
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support APOP</exception>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingApop(string username, string password)
    {
        if (!ApopSupported)
            throw new NotSupportedException("APOP is not supported on this server");

        SendCommand("APOP " + username + " " + Apop.ComputeDigest(password, ApopTimeStamp));

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates using the CRAM-MD5 authentication method
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support AUTH CRAM-MD5</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private void AuthenticateUsingCramMd5(string username, string password)
    {
        // Example of communication:
        // C: AUTH CRAM-MD5
        // S: + PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+
        // C: dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw
        // S: +OK CRAM authentication successful

        // Other example, where AUTH CRAM-MD5 is not supported
        // C: AUTH CRAM-MD5
        // S: -ERR Authentication method CRAM-MD5 not supported

        try
        {
            SendCommand("AUTH CRAM-MD5");
        }
        catch (Exception e)
        {
            // A PopServerException will be thrown if the server responds with a -ERR not supported
            throw new NotSupportedException("CRAM-MD5 authentication not supported", e);
        }

        // Fetch out the challenge from the server response
        string challenge = LastServerResponse.Substring(2);

        // Compute the challenge response
        string response = CramMd5.ComputeDigest(username, password, challenge);

        // Send the response to the server
        SendCommand(response);

        // Authentication was successful if no exceptions thrown before getting here
    }
    #endregion

    #region Public POP3 commands
    /// <summary>
    /// Get the number of messages on the server using a STAT command
    /// </summary>
    /// <returns>The message count on the server</returns>
    /// <exception cref="PopServerException">If the server did not accept the STAT command</exception>
    public int GetMessageCount()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot get the message count without authenticating yourself towards the server first");

        return SendCommandIntResponse("STAT", 1);
    }

    /// <summary>
    /// Marks the message with the given message number as deleted.<br/>
    /// <br/>
    /// The message will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.
    /// </summary>
    /// <param name="messageNumber">
    /// The number of the message to be deleted. This message may not already have been deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <exception cref="PopServerException">If the server did not accept the delete command</exception>
    public void DeleteMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot delete any messages without authenticating yourself towards the server first");

        SendCommand("DELE " + messageNumber);
    }

    /// <summary>
    /// Marks all messages as deleted.<br/>
    /// <br/>
    /// The messages will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.<br/>
    /// The method assumes that no prior message has been marked as deleted, and is not valid to call if this is wrong.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept one of the delete commands. All prior marked messages will still be marked.</exception>
    public void DeleteAllMessages()
    {
        AssertDisposed();

        int messageCount = GetMessageCount();

        for (int messageItem = messageCount; messageItem > 0; messageItem--)
        {
            DeleteMessage(messageItem);
        }
    }

    /// <summary>
    /// Keep server active by sending a NOOP command.<br/>
    /// This might keep the server from closing the connection due to inactivity.<br/>
    /// <br/>
    /// RFC:<br/>
    /// The POP3 server does nothing, it merely replies with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the NOOP command</exception>
    public void NoOperation()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the NOOP command unless you are authenticated to the server");

        SendCommand("NOOP");
    }

    /// <summary>
    /// Send a reset command to the server.<br/>
    /// <br/>
    /// RFC:<br/>
    /// If any messages have been marked as deleted by the POP3
    /// server, they are unmarked. The POP3 server then replies
    /// with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the RSET command</exception>
    public void Reset()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the RSET command unless you are authenticated to the server");

        SendCommand("RSET");
    }

    /// <summary>
    /// Get a unique ID for a single message.<br/>
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The unique ID for the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command. This could happen if the <paramref name="messageNumber"/> does not exist</exception>
    public string GetMessageUid(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message ID, when the user has not been authenticated yet");

        // Example from RFC:
        //C: UIDL 2
        //S: +OK 2 QhdPYR:00WBw1Ph7x7

        SendCommand("UIDL " + messageNumber);

        // Parse out the unique ID
        return LastServerResponse.Split(' ')[2];
    }

    /// <summary>
    /// Gets a list of unique IDs for all messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>
    /// A list containing the unique IDs in sorted order from message number 1 and upwards.
    /// </returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command</exception>
    public List<string> GetMessageUids()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message IDs, when the user has not been authenticated yet");

        // RFC Example:
        // C: UIDL
        // S: +OK
        // S: 1 whqtswO00WBw418f9t5JxYwZ
        // S: 2 QhdPYR:00WBw1Ph7x7
        // S: .      // this is the end

        SendCommand("UIDL");

        List<string> uids = new List<string>();

        string response;
        // Keep reading until multi-line ends with a "."
        while (!IsLastLineInMultiLineResponse(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Add the unique ID to the list
            uids.Add(response.Split(' ')[1]);
        }

        return uids;
    }

    /// <summary>
    /// Gets the size in bytes of a single message
    /// </summary>
    /// <param name="messageNumber">
    /// The number of a message which may not be a message marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>Size of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public int GetMessageSize(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message size, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST 2
        // S: +OK 2 200
        return SendCommandIntResponse("LIST " + messageNumber, 2);
    }

    /// <summary>
    /// Get the sizes in bytes of all the messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>Size of each message excluding deleted ones</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public List<int> GetMessageSizes()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message sizes, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST
        // S: +OK 2 messages (320 octets)
        // S: 1 120
        // S: 2 200
        // S: .       // End of multi-line

        SendCommand("LIST");

        List<int> sizes = new List<int>();

        string response;
        // Read until end of multi-line
        while (!".".Equals(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            sizes.Add(int.Parse(response.Split(' ')[1], CultureInfo.InvariantCulture));
        }

        return sizes;
    }

    /// <summary>
    /// Fetches a message from the server and parses it
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The message, containing the email message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public Message GetMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        byte[] messageContent = GetMessageAsBytes(messageNumber);

        return new Message(messageContent);
    }

    /// <summary>
    /// Fetches a message in raw form from the server
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The raw bytes of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public byte[] GetMessageAsBytes(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Get the full message
        return GetMessageAsBytes(messageNumber, false);
    }

    /// <summary>
    /// Get all the headers for a message.<br/>
    /// The server will not need to send the body of the message.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>MessageHeaders object</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public MessageHeader GetMessageHeaders(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Only fetch the header part of the message
        byte[] messageContent = GetMessageAsBytes(messageNumber, true);

        // Do not parse the body - as it is not in the byte array
        return new Message(messageContent, false).Headers;
    }

    /// <summary>
    /// Asks the server to return it's capability listing.<br/>
    /// This is an optional command, which a server is not enforced to accept.
    /// </summary>
    /// <returns>
    /// The returned Dictionary keys are the capability names.<br/>
    /// The Lists pointed to are the capability parameters fitting that certain capability name.
    /// See <a href="http://tools.ietf.org/html/rfc2449#section-6">RFC section 6</a> for explanation for some of the capabilities.
    /// </returns>
    /// <remarks>
    /// Capabilities are case-insensitive.<br/>
    /// The dictionary uses case-insensitive searching, but the Lists inside
    /// does not. Therefore you will have to use something like the code below
    /// to search for a capability parameter.<br/>
    /// foo is the capability name and bar is the capability parameter.
    /// <code>
    /// List&lt;string&gt; arguments = capabilities["foo"];
    ///	bool contains = null != arguments.Find(delegate(string str)
    ///				{
    ///					return String.Compare(str, "bar", true) == 0;
    ///				});
    /// </code>
    /// If we were running on .NET framework >= 3.5, a HashSet could have been used.
    /// </remarks>
    /// <exception cref="PopServerException">If the server did not accept the capability command</exception>
    public Dictionary<string, List<string>> Capabilities()
    {
        AssertDisposed();

        if (State != ConnectionState.Authorization && State != ConnectionState.Transaction)
            throw new Exception("Capability command only available while connected or authenticated");

        // RFC Example
        // Examples:
        // C: CAPA
        // S: +OK Capability list follows
        // S: TOP
        // S: USER
        // S: SASL CRAM-MD5 KERBEROS_V4
        // S: RESP-CODES
        // S: LOGIN-DELAY 900
        // S: PIPELINING
        // S: EXPIRE 60
        // S: UIDL
        // S: IMPLEMENTATION Shlemazle-Plotz-v302
        // S: .
        SendCommand("CAPA");

        // Capablities are case-insensitive
        Dictionary<string, List<string>> capabilities = new Dictionary<string, List<string>>(StringComparer.OrdinalIgnoreCase);

        string lineRead;
        // Keep reading until we are at the end of the multi line response
        while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Example of read line
            // SASL CRAM-MD5 KERBEROS_V4
            // SASL is the name of the capability while
            // CRAM-MD5 and KERBEROS_V4 are arguments to SASL
            string[] splitted = lineRead.Split(' ');

            // There should always be a capability name
            string capabilityName = splitted[0];

            // Find all the arguments
            List<string> capabilityArguments = new List<string>();
            for (int i = 1; i < splitted.Length; i++)
            {
                capabilityArguments.Add(splitted[i]);
            }

            // Add the capability found to the dictionary
            capabilities.Add(capabilityName, capabilityArguments);
        }

        return capabilities;
    }
    #endregion

    #region Private helper methods
    /// <summary>
    /// Examines string to see if it contains a time stamp to use with the APOP command.<br/>
    /// If it does, sets the <see cref="ApopTimeStamp"/> property to this value.
    /// </summary>
    /// <param name="response">The string to examine</param>
    private void ExtractApopTimestamp(string response)
    {
        // RFC Example:
        // +OK POP3 server ready <1896.697170952@dbc.mtview.ca.us>
        Match match = Regex.Match(response, "<.+>");
        if (match.Success)
        {
            ApopTimeStamp = match.Value;
            ApopSupported = true;
        }
    }

    /// <summary>
    /// Tests a string to see if it is a "+" string.<br/>
    /// An "+" string should be returned by a compliant POP3
    /// server if the request could be served.<br/>
    /// <br/>
    /// The method does only check if it starts with "+".
    /// </summary>
    /// <param name="response">The string to examine</param>
    /// <exception cref="PopServerException">Thrown if server did not respond with "+" message</exception>
    private static void IsOkResponse(string response)
    {
        if (response == null)
            throw new Exception("The stream used to retrieve responses from was closed");

        if (response.StartsWith("+", StringComparison.OrdinalIgnoreCase))
            return;

        throw new Exception("The server did not respond with a + response. The response was: \"" + response + "\"");
    }

    /// <summary>
    /// Sends a command to the POP server.<br/>
    /// If this fails, an exception is thrown.
    /// </summary>
    /// <param name="command">The command to send to server</param>
    /// <exception cref="PopServerException">If the server did not send an OK message to the command</exception>
    private void SendCommand(string command)
    {
        // Convert the command with CRLF afterwards as per RFC to a byte array which we can write
        byte[] commandBytes = Encoding.ASCII.GetBytes(command + "\r\n");

        // Write the command to the server
        Stream.Write(commandBytes, 0, commandBytes.Length);
        Stream.Flush(); // Flush the content as we now wait for a response

        // Read the response from the server. The response should be in ASCII
        LastServerResponse = StreamUtility.ReadLineAsAscii(Stream);

        IsOkResponse(LastServerResponse);
    }

    /// <summary>
    /// Sends a command to the POP server, expects an integer reply in the response
    /// </summary>
    /// <param name="command">command to send to server</param>
    /// <param name="location">
    /// The location of the int to return.<br/>
    /// Example:<br/>
    /// <c>S: +OK 2 200</c><br/>
    /// Set <paramref name="location"/>=1 to get 2<br/>
    /// Set <paramref name="location"/>=2 to get 200<br/>
    /// </param>
    /// <returns>Integer value in the reply</returns>
    /// <exception cref="PopServerException">If the server did not accept the command</exception>
    private int SendCommandIntResponse(string command, int location)
    {
        SendCommand(command);

        return int.Parse(LastServerResponse.Split(' ')[location], CultureInfo.InvariantCulture);
    }

    /// <summary>
    /// Asks the server for a message and returns the message response as a byte array.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <param name="askOnlyForHeaders">If <see langword="true"/> only the header part of the message is requested from the server. If <see langword="false"/> the full message is requested</param>
    /// <returns>A byte array that the message requested consists of</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    private byte[] GetMessageAsBytes(int messageNumber, bool askOnlyForHeaders)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        if (askOnlyForHeaders)
        {
            // 0 is the number of lines of the message body to fetch, therefore it is set to zero to fetch only headers
            SendCommand("TOP " + messageNumber + " 0");
        }
        else
        {
            // Ask for the full message
            SendCommand("RETR " + messageNumber);
        }

        // RFC 1939 Example
        // C: RETR 1
        // S: +OK 120 octets
        // S: <the POP3 server sends the entire message here>
        // S: .

        // Create a byte array builder which we use to write the bytes too
        // When done, we can get the byte array out
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            bool first = true;
            byte[] lineRead;

            // Keep reading until we are at the end of the multi line response
            while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsBytes(Stream)))
            {
                // We should not write CRLF on the very last line, therefore we do this
                if (!first)
                {
                    // Write CRLF which was not included in the lineRead bytes of last line
                    byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                    byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
                }
                else
                {
                    // We are now not the first anymore
                    first = false;
                }

                // This is a multi-line. See http://tools.ietf.org/html/rfc1939#section-3
                // It says that a line starting with "." and not having CRLF after it
                // is a multi line, and the "." should be stripped
                if (lineRead.Length > 0 && lineRead[0] == '.')
                {
                    // Do not write the first period
                    byteArrayBuilder.Write(lineRead, 1, lineRead.Length - 1);
                }
                else
                {
                    // Write everything
                    byteArrayBuilder.Write(lineRead, 0, lineRead.Length);
                }
            }

            // If we are fetching a header - add an extra line to denote the headers ended
            if (askOnlyForHeaders)
            {
                byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
            }

            // Get out the bytes we have written to byteArrayBuilder
            byte[] receivedBytes = byteArrayBuilder.ToArray();

            return receivedBytes;
        }
    }

    /// <summary>
    /// Check if the bytes received is the last line in a multi line response
    /// from the pop3 server. It is the last line if the line contains only a "."
    /// </summary>
    /// <param name="bytesReceived">The last line received from the server, which could be the last response line</param>
    /// <returns><see langword="true"/> if last line in a multi line response, <see langword="false"/> otherwise</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="bytesReceived"/> is <see langword="null"/></exception>
    private static bool IsLastLineInMultiLineResponse(byte[] bytesReceived)
    {
        if (bytesReceived == null)
            throw new ArgumentNullException("bytesReceived");

        return bytesReceived.Length == 1 && bytesReceived[0] == '.';
    }

    /// <see cref="IsLastLineInMultiLineResponse(byte[])"> for documentation</see>
    private static bool IsLastLineInMultiLineResponse(string lineReceived)
    {
        if (lineReceived == null)
            throw new ArgumentNullException("lineReceived");

        // If the string is indeed the last line, then it is okay to do ASCII encoding
        // on it. For performance reasons we check if the length is equal to 1
        // so that we do not need to decode a long message string just to see if
        // it is the last line
        return lineReceived.Length == 1 && IsLastLineInMultiLineResponse(Encoding.ASCII.GetBytes(lineReceived));
    }

    /// <summary>
    /// Method for checking that a <paramref name="messageNumber"/> argument given to some method
    /// is indeed valid. If not, <see cref="InvalidUseException"/> will be thrown.
    /// </summary>
    /// <param name="messageNumber">The message number to validate</param>
    private static void ValidateMessageNumber(int messageNumber)
    {
        if (messageNumber <= 0)
            throw new Exception("The messageNumber argument cannot have a value of zero or less. Valid messageNumber is in the range [1, messageCount]");
    }

    /// <summary>
    /// Closes down the streams and sets the Pop3Client into the initial configuration
    /// </summary>
    private void DisconnectStreams()
    {
        try
        {
            Stream.Close();
        }
        finally
        {
            // Reset values to initial state
            SetInitialValues();
        }
    }

    /// <summary>
    /// Sets the initial values on the public properties of this Pop3Client.
    /// </summary>
    private void SetInitialValues()
    {
        // We have not seen the APOPTimestamp yet
        ApopTimeStamp = null;

        // We are not connected
        Connected = false;
        State = ConnectionState.Disconnected;

        // APOP is not supported before we check on login
        ApopSupported = false;
    }

    /// <summary>
    /// Checks for extra response codes when an authentication has failed and throws
    /// the correct exception.
    /// If no such response codes is found, nothing happens.
    /// </summary>
    /// <param name="serverErrorResponse">The server response string</param>
    /// <param name="e">The exception thrown because the server responded with -ERR</param>
    /// <exception cref="PopServerLockedException">If the account is locked or in use</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private static void CheckFailedLoginServerResponse(string serverErrorResponse, Exception e)
    {
        string upper = serverErrorResponse.ToUpperInvariant();

        // Bracketed strings are extra response codes addded
        // in RFC http://tools.ietf.org/html/rfc2449
        // together with the CAPA command.

        // Specifies the account is in use
        if (upper.Contains("[IN-USE]") || upper.Contains("LOCK"))
        {
            //DefaultLogger.Log.LogError("Authentication: maildrop is locked or in-use");
            throw e;
        }

        // Specifies that there must go some time between logins
        if (upper.Contains("[LOGIN-DELAY]"))
        {
            throw e;
        }
    }
    #endregion
}
]]></code></stage><stage stageid="e74c516a-5c0f-4539-88d1-4af07d49b311" name="Clean Up" type="SubSheetInfo"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="453e6ca1-71dc-4ce2-8a1c-d6512bd6b502" name="Start" type="Start"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>98566d14-9c68-423f-a446-0c63a9d56369</onsuccess></stage><stage stageid="98566d14-9c68-423f-a446-0c63a9d56369" name="End" type="End"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dfd23e65-5e00-48c2-9222-b028de2d5425" name="new" type="Note"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9ffa7f6a-6f1a-4b3a-800b-c5b3d02f1053" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3d27a452-2516-48ee-a57b-363989e0a677" name="Delete Message" type="SubSheetInfo"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative>Deletes a message from the POP3 server.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7120f051-794a-428f-b0ca-ada23ab0da34" name="Start" type="Start"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to delete." stage="MessageID" /></inputs><onsuccess>fdb5293f-358f-4a67-b88b-4caa37a0f16f</onsuccess></stage><stage stageid="10c06eb3-10d6-4759-9f38-22fdb99f5635" name="MessageID" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7d6db43-bdda-4cf0-bee9-37c1bfaadd6c" name="Configure" type="SubSheetInfo"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative>Configures POP3 and SMTP settings for the Business Object</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26f68cd5-5a95-4e00-863e-0e3393c2e05c" name="End" type="End"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c9b2a5e-a669-43e8-94ce-0a93ac299716" name="Start" type="Start"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" stage="Username" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" stage="Password" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" stage="POP3 Server" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" stage="SMTP Server" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" stage="POP3 Port" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" stage="SMTP Port" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" stage="POP3 UseSSL" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" stage="SMTP UseSSL" /></inputs><onsuccess>5fc137ae-22ff-4a9a-8e93-7c3923a7775f</onsuccess></stage><stage stageid="6200a401-764c-40bb-9c01-710765a7198a" name="Username" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="949b007a-73ec-49c8-bf67-97989d93b9d2" name="Password" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="c92379ab-616d-4e9f-bbdf-76d8f4a464de" name="Disconnect POP3" type="SubSheetInfo"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68269076-5ba4-49b3-bb2b-e89927d49df3" name="Start" type="Start"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d4140c57-5f78-45ff-8e59-d720e57c6bb2</onsuccess></stage><stage stageid="f304774e-9251-4092-b2a7-32424accffdb" name="End" type="End"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4140c57-5f78-45ff-8e59-d720e57c6bb2" name="Disconnect" type="Code"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>367756ad-7a12-4c98-95ef-e1c9324c9ffa</onsuccess><code><![CDATA[_rclient.Disconnect();]]></code></stage><stage stageid="d85d6404-ed67-4802-b251-3c6e4f553bc3" name="Delete Message" type="Code"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /></inputs><onsuccess>1027af62-c9e7-443b-a361-2b2fa991aed1</onsuccess><code><![CDATA[_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="64b00b6b-bad6-4e81-bdc2-72fcaaf69961" name="End" type="End"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5fc137ae-22ff-4a9a-8e93-7c3923a7775f" name="Set Configured" type="Calculation"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26f68cd5-5a95-4e00-863e-0e3393c2e05c</onsuccess><calculation expression="True" stage="Configured" /></stage><stage stageid="e691cdbf-68a7-46c5-9469-911182bc8475" name="Connect POP3" type="SubSheetInfo"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15b67dac-088d-4cf3-a6a7-2feca9d5c99d" name="Start" type="Start"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" stage="Action" /></inputs><onsuccess>3ca489aa-ab27-465b-b189-8875b7dd615d</onsuccess></stage><stage stageid="710abe98-0572-4ea2-adab-5ac1226ed5ac" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73bf49d5-81cc-4f1a-b89d-ed0c90a05a86" name="Configured" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="bcb58d07-9f70-40cf-9df3-eeff2d3a75b6" name="Configured" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Configured]" /><ontrue>6a90465e-93b4-4c91-95c2-cfc40b74d63c</ontrue><onfalse>2f2d374d-c22d-470e-99e5-d1ca2fce2c95</onfalse></stage><stage stageid="6a90465e-93b4-4c91-95c2-cfc40b74d63c" name="Connect and Authenticate" type="Code"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Server" expr="[POP3 Server]" /><input type="number" name="Port" expr="[POP3 Port]" /><input type="flag" name="Use SSL" expr="[POP3 UseSSL]" /></inputs><onsuccess>5827b973-4390-423c-b457-4a225cd63717</onsuccess><code><![CDATA[_rclient = new Pop3Client();
_rclient.Connect(Server,(int)Port,Use_SSL);
_rclient.Authenticate(Username,Password);]]></code></stage><stage stageid="2f2d374d-c22d-470e-99e5-d1ca2fce2c95" name="Exception1" type="Exception"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="7d982653-252b-40ea-aa32-027aa81ece7c" name="Action" type="Data"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5827b973-4390-423c-b457-4a225cd63717" name="Set Connected" type="Calculation"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>710abe98-0572-4ea2-adab-5ac1226ed5ac</onsuccess><calculation expression="True" stage="POP3 Connected" /></stage><stage stageid="aee3539f-93d1-4661-8e48-e207e7fda381" name="POP3 Connected" type="Data"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="3ca489aa-ab27-465b-b189-8875b7dd615d" name="Connected" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[POP3 Connected]" /><ontrue>d99cd226-dd16-4417-af86-11e756edfb93</ontrue><onfalse>bcb58d07-9f70-40cf-9df3-eeff2d3a75b6</onfalse></stage><stage stageid="d99cd226-dd16-4417-af86-11e756edfb93" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1fa82664-ea42-4255-84ab-50b61958fe56" name="POP3 Server" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="23794a48-9b7c-4d9c-b4ea-93c47ab545fe" name="SMTP Server" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="bb607f8e-6326-4b20-9d1c-be2061af1a0a" name="SMTP Port" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="8d588294-9205-4d6f-abb1-bdc102beac7e" name="POP3 Port" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4b819ad9-214e-4499-b11b-73d0fd122070" name="SMTP UseSSL" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><alwaysinit /></stage><stage stageid="47441526-8d37-4599-921c-9e4103ac87aa" name="POP3 UseSSL" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><alwaysinit /></stage><stage stageid="367756ad-7a12-4c98-95ef-e1c9324c9ffa" name="Set Connected" type="Calculation"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f304774e-9251-4092-b2a7-32424accffdb</onsuccess><calculation expression="False" stage="POP3 Connected" /></stage><stage stageid="1027af62-c9e7-443b-a361-2b2fa991aed1" name="Disconnect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64b00b6b-bad6-4e81-bdc2-72fcaaf69961</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="943a7e4b-9dbd-427b-a3a1-4f2810050f82" name="Send Message" type="SubSheetInfo"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative>Sends a message using the SMTP protocol.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eb463c09-de32-4dde-94c3-cf0507ee79e3" name="Start" type="Start"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." stage="From" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="To" /><input type="text" name="Subject" narrative="The subject of the email." stage="Subject" /><input type="text" name="Body" narrative="The body of the email." stage="Body" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." stage="Attachments" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" stage="BodyIsHTML" /></inputs><onsuccess>8e55392e-ae1e-443f-9d5b-37fbeb948c47</onsuccess></stage><stage stageid="7e86926f-9f8a-4e11-aff3-b0ea75a9e350" name="End" type="End"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="18563c9d-55d4-4aea-9713-58595b565208" name="From" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e3eba6a-938c-4747-91fb-f065fd8e1ecd" name="To" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6cbf338c-56d6-45b9-bfa6-40dcc60f55f4" name="Subject" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="364ba15a-711a-471f-a468-2fe38c091107" name="Body" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a212d081-53fb-4398-bda0-462ce18c07c2" name="Send Message" type="Code"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Server" expr="[SMTP Server]" /><input type="number" name="Port" expr="[SMTP Port]" /><input type="text" name="Username" expr="[Username]" /><input type="password" name="Password" expr="[Password]" /><input type="flag" name="UseSSL" expr="[SMTP UseSSL]" /><input type="text" name="From" expr="[From]" /><input type="text" name="To" expr="[To]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="flag" name="BodyIsHTML" expr="[BodyIsHTML]" /></inputs><onsuccess>7e86926f-9f8a-4e11-aff3-b0ea75a9e350</onsuccess><code><![CDATA[SmtpClient client = new SmtpClient();
try
{
	client.Host = Server;
	client.Port = (int)Port;
	if (Username != "")
		client.Credentials = new NetworkCredential(Username,Password);
	client.EnableSsl = UseSSL;

	using(MailMessage mail = new MailMessage())
	{
		mail.From = new MailAddress(From);
		mail.To.Add(To);
		mail.Subject = Subject;
		mail.IsBodyHtml = BodyIsHTML;
		mail.Body = Body;

		foreach(DataRow dr in Attachments.Rows)
		{
			string file = dr["Path"].ToString();
			Attachment data = new Attachment(file, MediaTypeNames.Application.Octet);
			ContentDisposition dis = data.ContentDisposition;
			dis.CreationDate = File.GetCreationTime(file);
			dis.ModificationDate = File.GetLastWriteTime(file);
			dis.ReadDate = File.GetLastAccessTime(file);
			mail.Attachments.Add(data);
		}

		client.Send(mail);
	}
}
catch(Exception ex)
{
	string msg = ex.Message;
	if(ex.InnerException != null) {
		msg += " - " + ex.InnerException.Message;
	}
	throw new Exception(msg);
}
finally
{
	IDisposable disposableClient = client as IDisposable;
	if (disposableClient!=null)
		disposableClient.Dispose();
}]]></code></stage><stage stageid="fdb5293f-358f-4a67-b88b-4caa37a0f16f" name="Connect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>7bb623a1-88ca-4162-8eba-a0d384df4aec</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="5c4dcdf6-a371-4878-9c4c-3fd08aa568f4" name="List Messages" type="SubSheetInfo"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8e7202a-f413-4d68-b38e-4b6d789318f1" name="Start" type="Start"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c47a1fa4-9fa6-4b4c-b35c-5d03d65fad46</onsuccess></stage><stage stageid="76845230-717a-4efe-954c-b10309c6cc6c" name="End" type="End"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="797b45e9-3197-454c-9068-7baefc351f75" name="MessageCount" type="Data"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b94061e0-c242-4e91-8bc6-ed1cc12cd5e9" name="Messages Left?" type="Decision"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[MessageCount] &gt;0" /><ontrue>0f6d2f90-451c-4d3b-89cf-517bddb760d8</ontrue><onfalse>76845230-717a-4efe-954c-b10309c6cc6c</onfalse></stage><stage stageid="cecc8228-7a4a-4e96-b398-8757b6db702d" name="Decrement" type="Calculation"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>255</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aafa7d4a-dfb0-4446-9323-8afa0b721cf0</onsuccess><calculation expression="[MessageCount]-1" stage="MessageCount" /></stage><stage stageid="002f58e7-8123-4b0a-bcca-2319263c33d1" name="Get Message Headers1" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>cecc8228-7a4a-4e96-b398-8757b6db702d</onsuccess><code><![CDATA[MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
Subject = result.Subject;
From_Name = result.From.DisplayName;
From_Email = result.From.Address;
Date_Sent = result.DateSent;
MessageID = result.MessageId;]]></code></stage><stage stageid="aafa7d4a-dfb0-4446-9323-8afa0b721cf0" name="anchor1" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>255</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6a475ba3-f7b4-4ead-8691-921b64e9e896</onsuccess></stage><stage stageid="6a475ba3-f7b4-4ead-8691-921b64e9e896" name="anchor2" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>60</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b94061e0-c242-4e91-8bc6-ed1cc12cd5e9</onsuccess></stage><stage stageid="0f6d2f90-451c-4d3b-89cf-517bddb760d8" name="Add Row" type="Action"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>002f58e7-8123-4b0a-bcca-2319263c33d1</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="38f14f0c-f87e-4c96-8836-8f5b8faced14" name="Emails" type="Collection"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="0bf982d4-8f0e-4d69-aa12-0ac3996f3d84" name="Get Message Count2" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>b94061e0-c242-4e91-8bc6-ed1cc12cd5e9</onsuccess><code><![CDATA[MessageCount=_rclient.GetMessageCount();]]></code></stage><stage stageid="c47a1fa4-9fa6-4b4c-b35c-5d03d65fad46" name="Connect POP3" type="SubSheet"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>0bf982d4-8f0e-4d69-aa12-0ac3996f3d84</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="9879be0d-2188-4595-91b6-ac07d1e348dc" name="Get Message" type="SubSheetInfo"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative>Gets a message using the POP3 protocol. By default, for multipart messages the plain text part is returned in preference to HTML (with the Content-Type output parameter indicating what was actually returned), however the HTMLPreferred flag can be used to reverse this logic. If the message contains no plain text or HTML parts then an empty string is returned.</narrative><displayx>-195</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>180</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6a181147-fc29-471a-8902-d9fffbb71d86" name="Start" type="Start"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to retrieve." stage="MessageID" /><input type="flag" name="HTMLPreferred" narrative="Return HTML content in preference to plain text (multipart messages only)" stage="HTMLPreferred" /></inputs><onsuccess>b218b56f-ef0d-4199-91ee-f1ccb4eec209</onsuccess></stage><stage stageid="f44ba718-e5c7-48fd-8233-0e9bfbf2048d" name="MessageID" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39a05d5d-741a-4c0a-a59c-f5952b55bb44" name="End" type="End"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Body" narrative="The email body" stage="Body" /><output type="text" name="Content-Type" narrative="The content type of the returned body (e.g. text/plain)" stage="Content-Type" /></outputs></stage><stage stageid="b218b56f-ef0d-4199-91ee-f1ccb4eec209" name="Connect POP3" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>fb2ca3a4-1e9e-4b39-b820-40e7c035d7d8</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="e0ceae00-8c9e-4201-8a4b-2e3b1a6b5293" name="Get Message" type="Code"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="flag" name="HTMLPreferred" expr="[HTMLPreferred]" /></inputs><outputs><output type="text" name="Body" stage="Body" /><output type="text" name="Content-Type" stage="Content-Type" /></outputs><onsuccess>39a05d5d-741a-4c0a-a59c-f5952b55bb44</onsuccess><code><![CDATA[Message m =_rclient.GetMessage((int)MessageNumber);
MessagePart p;
if (HTMLPreferred) {
	p = m.FindFirstHtmlVersion();
	if (p == null) p = m.FindFirstPlainTextVersion();
} else {
	p = m.FindFirstPlainTextVersion();
	if (p == null) p = m.FindFirstHtmlVersion();
}
if (p != null) {
	Body = p.GetBodyAsText();
	Content_Type = p.ContentType.ToString();
} else {
	Body = "";
	Content_Type = "";
}]]></code></stage><stage stageid="aa902ce3-629f-4d73-87a8-5e04f070405f" name="Body" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d64e2310-ca59-4f22-8594-a0cd08d3d78f" name="Number From ID" type="SubSheetInfo"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="63a1c937-63b0-4a26-aba7-716654c5da18" name="Start" type="Start"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" stage="MessageID" /></inputs><onsuccess>f6de7ad3-6964-449c-bdc0-135401e01d62</onsuccess></stage><stage stageid="9e58393f-f316-40c2-bf5b-7aaa994e24ec" name="MessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40f3248b-d376-4904-aef8-505a14c96731" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="f6de7ad3-6964-449c-bdc0-135401e01d62" name="Get Message Count" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>0623c4e8-9fd1-40c7-8d57-d9b00ad7f140</onsuccess><code><![CDATA[MessageCount = _rclient.GetMessageCount();]]></code></stage><stage stageid="f1f6e86c-668e-46ae-8fad-4da426311236" name="MessageCount" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0623c4e8-9fd1-40c7-8d57-d9b00ad7f140" name="Messages Left?" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[MessageCount] &gt;0" /><ontrue>c9e08180-d230-4857-a8c5-361f80b97a8c</ontrue><onfalse>40f3248b-d376-4904-aef8-505a14c96731</onfalse></stage><stage stageid="dbf5258e-83cb-432e-b51e-596ef2ccbb01" name="Decrement" type="Calculation"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a21a95f1-5257-48c7-bf2b-db274edbc70f</onsuccess><calculation expression="[MessageCount]-1" stage="MessageCount" /></stage><stage stageid="c9e08180-d230-4857-a8c5-361f80b97a8c" name="Get Message Headers" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="MessageID" stage="FoundMessageID" /></outputs><onsuccess>20b52376-80d0-49b8-8b7f-12e300c62410</onsuccess><code><![CDATA[MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
MessageID = result.MessageId;]]></code></stage><stage stageid="a21a95f1-5257-48c7-bf2b-db274edbc70f" name="anchor1" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>195</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>37af2a50-a79d-4d9c-913e-cb970afaa33f</onsuccess></stage><stage stageid="37af2a50-a79d-4d9c-913e-cb970afaa33f" name="anchor2" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>15</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0623c4e8-9fd1-40c7-8d57-d9b00ad7f140</onsuccess></stage><stage stageid="ddcb6ae8-4ccf-4a15-a377-97a5535a287b" name="FoundMessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20b52376-80d0-49b8-8b7f-12e300c62410" name="Message Match" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[MessageID]=[FoundMessageID]" /><ontrue>73b0921c-7ac9-4ede-ac69-891397d2cd3b</ontrue><onfalse>dbf5258e-83cb-432e-b51e-596ef2ccbb01</onfalse></stage><stage stageid="73b0921c-7ac9-4ede-ac69-891397d2cd3b" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="7bb623a1-88ca-4162-8eba-a0d384df4aec" name="Number From ID" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>d85d6404-ed67-4802-b251-3c6e4f553bc3</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="356a7e1e-cf63-4cde-a441-7f6889494278" name="Message Number" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fb2ca3a4-1e9e-4b39-b820-40e7c035d7d8" name="Number From ID" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>e0ceae00-8c9e-4201-8a4b-2e3b1a6b5293</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="8fabc428-4d6b-46b9-90d6-27513ef82084" name="Message Number" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f06ff7dc-dee1-4319-8fb8-e7324bbeda46" name="Delete Messages" type="SubSheetInfo"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><narrative>Deletes a collection identifying messages from the POP3 server.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d878691d-ebbf-449b-b3e9-1a4dbc780391" name="Start" type="Start"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="MessageIDs" narrative="A collection containing the IDs of the messages to delete." stage="MessageIDs" /></inputs><onsuccess>12f5806c-a210-4e38-8f15-5d8cbaa6fc9b</onsuccess></stage><stage stageid="b2f67ca9-9e76-4ae8-ab11-bbeb3991f9f1" name="Delete Message1" type="Code"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>210</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[MessageNumbers.MessageNumber]" /></inputs><onsuccess>5acbc759-910b-43a4-aad3-277348fe735e</onsuccess><code><![CDATA[_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="592900a1-6fa2-4aae-8df6-4aceeb59cd3c" name="End" type="End"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>345</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b5f506e0-8569-45f6-bc34-f11ca13a180f" name="Disconnect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>592900a1-6fa2-4aae-8df6-4aceeb59cd3c</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="12f5806c-a210-4e38-8f15-5d8cbaa6fc9b" name="Connect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>b542fa7b-76a0-4ac7-bef8-b7523eed14dc</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="d1c8749a-8674-4230-980f-d75287257eb7" name="Number From ID" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageIDs.MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="MessageNumbers.MessageNumber" /></outputs><onsuccess>37fa1082-1d8f-4a93-a6bf-ebfa986abde1</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="b542fa7b-76a0-4ac7-bef8-b7523eed14dc" name="For Each MessageID" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>05f7d6d8-79ad-4aa7-823f-6d114dfdff84</onsuccess><groupid>d1ff5376-69c7-47a4-a5a5-71e609d81702</groupid><looptype>ForEach</looptype><loopdata>MessageIDs</loopdata></stage><stage stageid="37fa1082-1d8f-4a93-a6bf-ebfa986abde1" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>227fbd4a-9ce9-42be-b920-b00ae83b5705</onsuccess><groupid>d1ff5376-69c7-47a4-a5a5-71e609d81702</groupid></stage><stage stageid="05f7d6d8-79ad-4aa7-823f-6d114dfdff84" name="Add Row" type="Action"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;MessageNumbers&quot;" /></inputs><onsuccess>d1c8749a-8674-4230-980f-d75287257eb7</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="26d19bda-3d6e-41ad-817e-cbec74832a0f" name="MessageNumbers" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="MessageNumber" type="number" /></collectioninfo></stage><stage stageid="227fbd4a-9ce9-42be-b920-b00ae83b5705" name="For Each Message Number" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b2f67ca9-9e76-4ae8-ab11-bbeb3991f9f1</onsuccess><groupid>0faefc94-574d-4561-8432-32eb13a0c75d</groupid><looptype>ForEach</looptype><loopdata>MessageNumbers</loopdata></stage><stage stageid="5acbc759-910b-43a4-aad3-277348fe735e" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>255</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b5f506e0-8569-45f6-bc34-f11ca13a180f</onsuccess><groupid>0faefc94-574d-4561-8432-32eb13a0c75d</groupid></stage><stage stageid="4c85d0ab-d738-40a4-b0b2-d59986be4091" name="Save Attachments" type="SubSheetInfo"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative>Gets a message attachment and saves it to a given folder.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="795b56fc-9b21-4bfe-9766-bb07f4b1280a" name="End" type="End"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bb24baa-c27d-4ab7-9081-fc6414148434" name="Start" type="Start"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" narrative="The ID of the email message." stage="MessageID" /><input type="text" name="Folder" narrative="A Folder in which to save all the attachments." stage="Folder" /></inputs><onsuccess>61363752-629c-4ad8-b3fb-c6de4554c3f9</onsuccess></stage><stage stageid="c0b68cab-c88f-45cd-9b05-9fafa3790fd2" name="MessageID" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61363752-629c-4ad8-b3fb-c6de4554c3f9" name="Connect POP3" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>2f95ac8b-e89b-4ca2-9c6f-877551c2bd64</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="2f95ac8b-e89b-4ca2-9c6f-877551c2bd64" name="Number From ID" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>03fcd315-a8c0-4853-ad26-2b4808074ab9</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="5e21321e-a465-46f7-83f0-8d7e2912c93f" name="Message Number" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c9a7a0d-e77a-4368-b7f9-269d1feadbe2" name="Folder" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03fcd315-a8c0-4853-ad26-2b4808074ab9" name="Save Attachments" type="Code"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="text" name="Folder" expr="[Folder]" /></inputs><onsuccess>795b56fc-9b21-4bfe-9766-bb07f4b1280a</onsuccess><code><![CDATA[Message m = _rclient.GetMessage((int)MessageNumber);
foreach(MessagePart a in m.FindAllAttachments())
{
	string path=System.IO.Path.Combine(Folder,a.FileName);
    a.Save(new FileInfo(path));
}]]></code></stage><stage stageid="fb9ba538-acf2-42b4-879b-a26cc69aa7e9" name="Attachments" type="Collection"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Path" type="text" description="The path to a file to include as an attachment in the email." /></collectioninfo></stage><stage stageid="c57bad69-0560-4732-b2cd-ecdac5946b2b" name="MessageIDs" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="8e55392e-ae1e-443f-9d5b-37fbeb948c47" name="Configured" type="Decision"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Configured]" /><ontrue>a212d081-53fb-4398-bda0-462ce18c07c2</ontrue><onfalse>7b2c9cad-ad8c-4892-8a7e-a77fceda0298</onfalse></stage><stage stageid="7b2c9cad-ad8c-4892-8a7e-a77fceda0298" name="FAIL" type="Exception"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>30</displayx><displayy>-90</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="ConfigurationException" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="8166f9b5-deea-4781-8584-e8777525856c" name="BodyIsHTML" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-210</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="106bc5d9-ced2-4091-a8b6-05f0774acd71" name="HTMLPreferred" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f085c445-853e-460a-b673-4b230f5cc2bb" name="Content-Type" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="c28cdbe1-9417-4ded-80c1-19fc3f6ab7f0" name="MS Outlook Email VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Outlook Email VBO" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Business Object for interacting with Microsoft Outlook email functions" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ec75c4f1-6276-470b-b23f-9a88eb7a0f96</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-195</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The Object requires a MS interop runtime DLL &quot;Microsoft.Office.Interop.Outlook.dll&quot; to be installed in order to run. This DLL can be installed as an optional feature using the Blue Prism installer." /></preconditions><endpoint narrative="" /><subsheet subsheetid="810b21b7-6b6b-4c7b-be10-b0c5f2911afc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-182</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0b58522-643b-42ad-8fdd-4cb5246c5558" type="Normal" published="True"><name>Send Email</name><view><camerax>-98</camerax><cameray>7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="78125029-0b28-4ee1-a064-c3a9e70ad7ca" type="Normal" published="True"><name>Reply All to Email</name><view><camerax>-25</camerax><cameray>-55</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6f16944-bdad-4ff4-a5df-b687b904183c" type="Normal" published="True"><name>Reply to Email</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9bf4e24d-5759-4357-97f1-adc1c08c843a" type="Normal" published="True"><name>Forward Email</name><view><camerax>-191</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e6fb66c-9607-4731-829c-e3dfd4510a95" type="Normal" published="True"><name>Save Email As File</name><view><camerax>21</camerax><cameray>122</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5734e4af-7917-40d8-b0b6-83d8e1872074" type="Normal" published="True"><name>Delete Email</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="204201c2-30d3-467a-b6fb-4e0010b046af" type="Normal" published="True"><name>Mark Email As Read</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d1820f0-98e4-4a10-8361-8f5322babcee" type="Normal" published="True"><name>Mark Email As Unread</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61b6fc18-b98a-4456-9381-8c8cfe9f6f60" type="Normal" published="True"><name>Move Email to Inbox Sub Folder</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="758f4938-75a1-4157-b0f7-2d9b99144d61" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f" type="Normal" published="True"><name>Save Attachment</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7aafcecd-5e8f-49d4-9987-73958f3cedc3" type="Normal" published="True"><name>Get Sent Items (Basic)</name><view><camerax>27</camerax><cameray>198</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d9c8a6c7-f973-45af-b333-8166a34297c7" type="Normal" published="True"><name>Get Sent Items (Advanced)</name><view><camerax>143</camerax><cameray>30</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="43fde12c-9d96-4cdd-a342-88204c037438" type="Normal" published="True"><name>Get Sent Items (Expert)</name><view><camerax>-42</camerax><cameray>4</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="a2bc0172-492f-4781-b7ed-1f1d550da3ba" type="Normal" published="True"><name>Get Received Items (Basic)</name><view><camerax>103</camerax><cameray>189</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f28aad59-a89a-4a9c-98ab-d31d6b69d9a5" type="Normal" published="True"><name>Get Received Items (Advanced)</name><view><camerax>-33</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea004198-e1fb-44bc-b549-bf8f7fa06631" type="Normal" published="True"><name>Get Received Items (Expert)</name><view><camerax>49</camerax><cameray>-101</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="fb0dd28d-2875-4ec6-b6d5-475120ac222c" type="Normal" published="False"><name>Internal_Get Items</name><view><camerax>-91</camerax><cameray>4</cameray><zoom version="2">1.5625</zoom></view></subsheet><stage stageid="72d471a3-047f-457c-b72a-b8026ed0c984" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5</onsuccess></stage><stage stageid="2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="bf10fbf6-c2a1-4b51-9a5b-9919863cc24b" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-180</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.Office.Interop.Outlook.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>Microsoft.Win32</import><import>Microsoft.Office.Interop.Outlook</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="0e25d23b-b518-4ba3-989e-4adf589c7dd3" name="Clean Up" type="SubSheetInfo"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="a9d4d214-a0e7-4383-8e44-7a4f068d71cd" name="Start" type="Start"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>253513b1-e08e-49b0-a789-fb3659eeb650</onsuccess></stage><stage stageid="253513b1-e08e-49b0-a789-fb3659eeb650" name="End" type="End"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="7d086243-ce98-49a9-8674-b8ca5349db4c" name="Note1" type="Note"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="8c3c4d09-dac0-411e-8e05-4db606c12164" name="Save Email As File" type="SubSheetInfo"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>Stores a specified email as a ".msg" file on any file location (file path).

The Entry ID is the unique idenfier used to determine which email is to be saved.</narrative><displayx>-195</displayx><displayy>-75</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2ff43150-6180-4cff-bf98-fd8d855bdbf9" name="Start" type="Start"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="File Path" narrative="Mandatory. The destination file path. Default blank." stage="File Path" /><input type="text" name="File Name" narrative="Mandatory. The File Name for the stored Email." stage="File Name" /></inputs><onsuccess>7287aac3-f380-41fd-99ed-1308db516359</onsuccess></stage><stage stageid="0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef" name="End" type="End"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="7287aac3-f380-41fd-99ed-1308db516359" name="Save As" type="Code"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><onsuccess>0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.SaveAs (File_Path & File_Name & ".msg")]]></code></stage><stage stageid="0d8dbc79-fe44-41e3-a7a5-5b60b74fa2cf" name="File Path" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15416548-42aa-42e9-8a36-49d19e45e678" name="Internal_Get Items" type="SubSheetInfo"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Sub function used by multiple actions within VBO. Do not change or publish.

Uses the Restrict method to create a filtered list of folder items. Not intended for publication.

</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="a6573dfb-b844-470c-bfe7-73c863da28d4" name="Start" type="Start"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." stage="Sub Folder" /></inputs><onsuccess>d9ef3bca-bf49-4f84-9d4c-b3648951f323</onsuccess></stage><stage stageid="26935ec9-3f33-4a4d-982c-0e6b0a5edbc2" name="End" type="End"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d9ef3bca-bf49-4f84-9d4c-b3648951f323" name="Get Items" type="Code"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /></outputs><onsuccess>26935ec9-3f33-4a4d-982c-0e6b0a5edbc2</onsuccess><code><![CDATA[

Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)

If Sub_Folder <> "" Then
	For each name as string in Sub_Folder.Split("\")
	folder = folder.Folders(name)
	Next
End If

'See https://msdn.microsoft.com/en-us/library/office/aa210946(v=office.11).aspx
'for mail item properties
Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("To", Type.GetType("System.String"))
dataTable.Columns.Add("CC", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Attachments", Type.GetType("System.String"))
dataTable.Columns.Add("ReceivedOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SentOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SenderName", Type.GetType("System.String"))
dataTable.Columns.Add("SenderEmailAddress", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	If Not TypeOf item Is MailItem Then Continue For
	Dim row As Data.DataRow = dataTable.NewRow
	row("EntryID") = item.EntryID
	row("To") = item.To
	row("CC") = item.CC
	row("Subject") = item.Subject
	row("Body") = item.Body
	
	Dim attachments As String = ""
	For Each attachment As Object In item.Attachments
        If attachment.Type = 1 Then
			attachments = attachments & "|" & attachment.DisplayName
		End If
	Next
	
	row("Attachments") = If (attachments.Length = 0, "", attachments.SubString(1))
	row("SentOn") = item.SentOn
	row("ReceivedOn") = item.ReceivedTime
	row("SenderName") = item.SenderName
	row("SenderEmailAddress") = If (item.SenderEmailType = "EX",item.Sender.GetExchangeUser.PrimarySmtpAddress,item.SenderEmailAddress)
	row("Unread") = item.Unread
	dataTable.Rows.Add(row)
	Item_Count += 1
Next
Items = dataTable]]></code></stage><stage stageid="301b8904-3bcd-4b1b-805a-0a190d6a1f23" name="Item Count" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="563eaaf3-d093-48a1-89fe-5b6dcc312f81" name="Filter Expression" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d314f7c0-0af6-4cc5-a2e1-1b2cb29674d9" name="Entry ID" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5106a0ab-6cbb-410f-9e0d-113791019ded" name="Get Received Items (Advanced)" type="SubSheetInfo"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Lists Inbox items matching the filter provided

Eg1 [From]='Mike Coworker' AND [unread]=False

Eg2 [Unread]=True AND [ReceivedTime] &gt;= '2018/01/01'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="38a5b9e1-f5ae-4293-96b5-8e39f6ddad5f" name="Start" type="Start"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>bb657ac6-ea98-4042-8df8-0bfec4fe5f42</onsuccess></stage><stage stageid="88b1aeeb-8765-4f0c-98b3-a64aa3effa2c" name="Item Count" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9952465-1c95-422d-9bfe-1735745d3012" name="Filter Expression" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d97db59-defd-4f2b-80a0-50ae2c87c68e" name="Outlook Folder ID" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="bb657ac6-ea98-4042-8df8-0bfec4fe5f42" name="Internal_Get Items" type="SubSheet"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>87fa8e80-f1f1-4329-8256-0224c2a2164c</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="036baecd-65dc-4916-9438-165b479478b1" name="Outlook Folder ID" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="7c584784-b258-4700-ae02-482668348ae9" name="Get Sent Items (Expert)" type="SubSheetInfo"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Lists Sent Items matching the query provided.

Eg1 @SQL=urn:schemas:httpmail:subject='Data Input'

Eg2 @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')"

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="ecc59d78-3d95-4f68-8f6d-7dfa2ad7c6d4" name="Start" type="Start"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /></inputs><onsuccess>ef7b49fa-9e40-4ce5-b6ac-67e5c3171164</onsuccess></stage><stage stageid="68c67a7a-d81f-4def-823b-761b317fc9f5" name="Item Count" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78a90b2a-607e-4d8d-8f04-7c3a81e8bf63" name="Filter Expression" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="920c79f3-90b3-487b-a30c-4e95162d5ecb" name="Outlook Folder ID" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="ef7b49fa-9e40-4ce5-b6ac-67e5c3171164" name="Internal_Get Items" type="SubSheet"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>88475529-0d3e-40b9-8ead-79cedfbdf8c6</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="89de27c3-f759-42a1-956d-49dc91baa367" name="Send Email" type="SubSheetInfo"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Sends an Email </narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2f285e28-d6bb-4e7b-be7b-2631c3a8ac84" name="End" type="End"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="79296089-edc5-4338-bf95-6734ad47825d" name="Send Item" type="Code"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /></inputs><onsuccess>2f285e28-d6bb-4e7b-be7b-2631c3a8ac84</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim mail = app.CreateItem(0)
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve  
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.Subject = Subject
mail.HTMLBody = Message

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

mail.Save
mail.Send

]]></code></stage><stage stageid="e8e74832-24e7-4d9b-977d-f3720a5f58a3" name="Subject" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9254c70d-8233-413f-a7c8-5b920c8d7595" name="To" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c4cefa2-e465-4d3a-adae-410a8e2d6b73" name="Message" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3106293e-e64d-4d13-9671-b39e8c6be771" name="Attachments" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9418ede2-db6d-4912-bcd8-209a495359dc" name="Save Attachments" type="SubSheetInfo"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>Downloads all attachments to a folder. 

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f3f87040-02dc-44e3-94ac-4e94444ce722" name="End" type="End"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2e36171f-a7a2-4de1-b778-bd029753aad5" name="Start" type="Start"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /></inputs><onsuccess>0ec3c501-009c-4736-9511-3b84c98dcc66</onsuccess></stage><stage stageid="0ec3c501-009c-4736-9511-3b84c98dcc66" name="Save Attachments" type="Code"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder Path" expr="[Folder Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Pattern" expr="[File Pattern]" /></inputs><onsuccess>f3f87040-02dc-44e3-94ac-4e94444ce722</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
If item Is Nothing Then Return

If Not Folder_Path.EndsWith("\") Then Folder_Path &="\"

For Each attachment As Object In item.Attachments
	If attachment.Type = 1 AndAlso attachment.FileName Like File_Pattern Then
		attachment.SaveAsFile(Folder_Path & attachment.FileName)
	End If
Next
]]></code></stage><stage stageid="38d69990-6a5f-40ce-a4bb-541e49726b64" name="Folder Path" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f357ec6-15f4-4133-8da8-5061d4359d38" name="Entry ID" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a88d805-9f51-4298-9905-cb28610dae96" name="File Pattern" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.*</initialvalue><private /><alwaysinit /></stage><stage stageid="ad2e31ff-e5ef-4467-a348-13dc9a8a1acb" name="Save Attachment" type="SubSheetInfo"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>Downloads a specfic attachment to a folder. E.g. use cases are "*.txt" or "*.docx" etc.

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="a8e9b1e1-4b0f-487d-89a5-6cacb4092be4" name="End" type="End"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2d1786e1-24e4-45da-b52c-bffa330fb007" name="Start" type="Start"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Name" narrative="Optional, Default value is *.* but common cases inlcude &quot;.docx&quot; , &quot;.pdf&quot; , &quot;.xlsx&quot; etc." stage="File Name" /></inputs><onsuccess>b1663b58-d99f-4f8e-9641-4b3db50ca615</onsuccess></stage><stage stageid="d2e8f631-485a-489a-8cbc-aac247d721f9" name="Folder Path" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7649073-c4eb-42b1-aaa4-7c50430a5cf3" name="Entry ID" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b7a4371-4fa0-4a3e-a132-5315118f7cae" name="File Name" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9a607b6-73e8-49ec-b2bc-a8032c0ab747" name="Save Attachments" type="SubSheet"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." expr="[Entry ID]" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." expr="[Folder Path]" /></inputs><onsuccess>a8e9b1e1-4b0f-487d-89a5-6cacb4092be4</onsuccess><processid>758f4938-75a1-4157-b0f7-2d9b99144d61</processid></stage><stage stageid="16e667f4-007c-48aa-91ad-4f253b96fc00" name="CC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc158b15-69a9-4850-a4e2-d67f53c55d87" name="BCC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="983656a5-d686-4ef0-ab54-aa50aa32e7d5" name="Delete Email" type="SubSheetInfo"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>Deletes a specific email item.

The Entry ID is the unique idenfier used to determine which email is to be deleted.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="5f395532-0166-41e3-9087-6eb241347133" name="Start" type="Start"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>29bbbced-f689-4200-b43b-27e7b01a3c5d</onsuccess></stage><stage stageid="a191ef9e-e78a-4de9-901b-19e7ca766c72" name="End" type="End"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="29bbbced-f689-4200-b43b-27e7b01a3c5d" name="Delete" type="Code"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>a191ef9e-e78a-4de9-901b-19e7ca766c72</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Delete]]></code></stage><stage stageid="2d8d8f32-8e9d-49fc-a345-a25e3050ecac" name="Entry ID" type="Data"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1dcba3a-0e74-4632-809f-7b942c719eeb" name="Reply All to Email" type="SubSheetInfo"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>Reply to all Emails recipients of a specific email.

The &lt;Reply All to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><displayx>-195</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="91e5fe6f-95fe-4c43-aac6-317ccb565fa8" name="End" type="End"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="719856cc-820a-4771-b362-9f0d98896f7b" name="Start" type="Start"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96</onsuccess></stage><stage stageid="a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96" name="Reply All" type="Code"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /></inputs><onsuccess>91e5fe6f-95fe-4c43-aac6-317ccb565fa8</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.ReplyAll

reply.Subject = item.Subject
reply.HTMLBody = Message & vbCrLf & item.HTMLBody
reply.Send]]></code></stage><stage stageid="c0de4880-e914-4cbd-9b40-fd4b87639b56" name="Entry ID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4aa3eccc-d10e-460b-96ce-82f3d86a5c36" name="Message" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="502b5d9b-0ef4-4f7d-9e45-2740f2866f3a" name="Forward Email" type="SubSheetInfo"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>Forward Email to recipients (To/CC/BCC) including (Message) as input parameters.

The &lt;Forward Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><displayx>-195</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>150</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="d398f6bf-9903-432b-9d08-93ca68a5ce15" name="End" type="End"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="b5542c2e-3ef3-4636-82e6-10fcb6b9f5ef" name="Entry ID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>195</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd6ecc76-eb50-4203-95cd-c77e9fcf2ad5" name="Message" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9886ff21-e65d-440d-b60a-9869153650be" name="Forward" type="Code"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>d398f6bf-9903-432b-9d08-93ca68a5ce15</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim mail = item.Forward
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next

End If

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve	
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC
	Next

End If
	
If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.HTMLBody = Message & vbCrLf & mail.HTMLBody
mail.Save
mail.Send]]></code></stage><stage stageid="9a9158e0-2caf-4e8b-8277-bcfa3f0b8565" name="To" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fba137b6-ad3b-48a5-b887-6302a10956ec" name="CC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d683ac76-a352-4994-89a5-d8a249f84648" name="BCC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ed52409-4c74-4cd4-8b16-9e9d057097b4" name="Start" type="Start"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>9886ff21-e65d-440d-b60a-9869153650be</onsuccess></stage><stage stageid="276590e9-5fa1-42bb-8bb0-3640cd595e46" name="Message Is HTML" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c36190da-7569-4737-a401-bec5b006c53f" name="Start" type="Start"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Semi-Colon-separated file paths. Default blank." stage="Attachments" /></inputs><onsuccess>79296089-edc5-4338-bf95-6734ad47825d</onsuccess></stage><stage stageid="6e74a6d0-d073-418d-bcee-5efe9f5733bb" name="Sub Folder" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df4f0bad-ced5-4315-8edc-e3138d7a7123" name="Sub Folder" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80516df7-3359-4f2c-8547-9312e5b237c2" name="Items" type="Collection"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="88475529-0d3e-40b9-8ead-79cedfbdf8c6" name="End" type="End"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="87fa8e80-f1f1-4329-8256-0224c2a2164c" name="End" type="End"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="93f4c073-8a54-4ee0-9b01-776c516fec9d" name="Reply to Email" type="SubSheetInfo"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>Reply to Email sender of a specific email.

The &lt;Reply to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><displayx>-165</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="7273229e-a2d0-4468-a343-efaf656b1598" name="End" type="End"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f68ab080-2e34-44d9-93af-67409139a21d" name="Start" type="Start"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>52a97793-74c5-49d7-b4fc-55d03d5b81a2</onsuccess></stage><stage stageid="52a97793-74c5-49d7-b4fc-55d03d5b81a2" name="Reply" type="Code"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /></inputs><onsuccess>7273229e-a2d0-4468-a343-efaf656b1598</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.Reply

reply.Subject = item.Subject
reply.HTMLBody = Message & vbCrLf & item.HTMLBody
reply.Send
]]></code></stage><stage stageid="b129ab89-df26-4975-a3b1-30127f6e78af" name="Entry ID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-165</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34d6dbc0-3597-4b72-8a65-5a90f164b75a" name="Message" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da3ecbf5-d75b-47d2-90f4-fa09e80b656b" name="Move Email to Inbox Sub Folder" type="SubSheetInfo"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>Moves an email to a subfolder within the inbox folder.

The Entry ID is the unique idenfier used to determine which email is to be moved.

Example
Inbox to Inbox\SubFolder </narrative><displayx>-180</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="9033fc52-da65-4e8d-92a5-b67a33a0379a" name="Start" type="Start"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Destination Folder" narrative="Mandatory. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Destination Folder" /></inputs><onsuccess>3fa82add-9fd2-4264-8fbe-02536dae2237</onsuccess></stage><stage stageid="5461bd38-d7d7-4a3c-b23b-35857aa8a5ef" name="End" type="End"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Entry ID" narrative="Returns the new Entry ID from the Moved Email Object" stage="New Entry ID" /></outputs></stage><stage stageid="3fa82add-9fd2-4264-8fbe-02536dae2237" name="Move" type="Code"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Destination Folder" expr="[Destination Folder]" /><input type="text" name="Outlook Folder ID" expr="[Outlook Folder ID]" /></inputs><outputs><output type="text" name="New Entry ID" stage="New Entry ID" /></outputs><onsuccess>5461bd38-d7d7-4a3c-b23b-35857aa8a5ef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")
Dim folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)
Dim item = _nameSpace.GetItemFromID(Entry_ID)

If Destination_Folder <> "" Then
	For each name as string in Destination_Folder.Split("\")
	folder = folder.Folders(name)
	Next
End If

New_Entry_ID = item.Move(folder).EntryID]]></code></stage><stage stageid="18da11cb-f313-4820-b7e7-8c9bd6f12675" name="Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-180</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41304024-3f20-476e-b6bf-1e12ff6ead9a" name="Outlook Folder ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>MS Outlook - OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-180</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="9d9afabb-e65b-471a-8a66-913480436037" name="Destination Folder" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9964be-3e71-4206-88f6-74e09c1f1415" name="File Name" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30cb5e90-86c2-4790-9204-89ddbd70d778" name="Get Sent Items (Basic)" type="SubSheetInfo"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Lists Sent Items matching the parameters provided</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="b4070f66-8405-4c2f-87f1-4d34a75561b8" name="Start" type="Start"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sent To" narrative="Optional. The To display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Sent To" /><input type="text" name="Copied To" narrative="Optional. The CC display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a semi-colon separated list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Copied To" /><input type="datetime" name="Sent Earliest" narrative="Optional. The earliest date to search from." stage="Sent Earliest" /><input type="datetime" name="Sent Latest" narrative="Optional. The latest date to search to." stage="Sent Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /></inputs><onsuccess>69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c</onsuccess></stage><stage stageid="905b5da3-5ab3-4c57-8c5f-33ed85e5c4a8" name="Item Count" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97127f0f-f77c-4b85-9c18-18e6556fbfa4" name="Outlook Folder ID" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="5097438d-04b5-4688-9fd5-c93dbe0d26c4" name="Internal_Get Items" type="SubSheet"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>20b10fc6-ced8-4cf1-b991-19fbff8e181a</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="20b10fc6-ced8-4cf1-b991-19fbff8e181a" name="End" type="End"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>345</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="2fc294dd-0be1-48ae-85b7-f811d7015b19" name="Filter Expression" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29639c3b-dcc7-4427-bc90-57319d2ae6e8" name="Sent Earliest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28d1cc10-ae57-4ea2-b01c-b9a8bded12ad" name="Sent Latest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3d2888f-df21-47e3-8405-7f6f4564a71b" name="Clean" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>5097438d-04b5-4688-9fd5-c93dbe0d26c4</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="b1ccbeb8-4c66-4932-a81f-c8c55c156731" name="Copied To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67f7a5fe-f2d5-480e-be1c-6a18d5a79508" name="Sent To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c54a3bb-1c08-4f3e-9ab2-3ceae0478554" name="Get Received Items (Basic)" type="SubSheetInfo"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Lists Inbox items matching the parameters provided</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="b5946711-b185-44bd-b97e-cfe91f9b05a2" name="Item Count" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>240</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32bea08c-862f-440c-bc83-c05ca252286c" name="Internal_Get Items" type="SubSheet"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>420</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>717dbab6-6472-4f2d-9370-0ae2d5893829</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="cc00500b-17df-437f-816e-59bd2b9b6a11" name="Outlook Folder ID" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="0a3d1d6c-696a-4e50-a124-af43552a1c59" name="Sub Folder" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="717dbab6-6472-4f2d-9370-0ae2d5893829" name="End" type="End"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>480</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="fa7fc102-6824-4d83-9171-9b36913fb323" name="Subject" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0149c9d2-5846-4f23-8eb9-e639be1f7435" name="Start" type="Start"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sender Name" narrative="Optional. The From display name, which might be a name (eg John Smith) or email address (eg admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the From field." stage="Sender Name" /><input type="text" name="Sender Email" narrative="Optional. The sender email address." stage="Sender Email" /><input type="datetime" name="Received Earliest" narrative="Optional. The earliest date to search from." stage="Received Earliest" /><input type="datetime" name="Received Latest" narrative="Optional. The latest date to search to." stage="Received Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="flag" name="Include Read" narrative="Optional, default True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional, default True" stage="Include Unread" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>6b969896-5d1a-4f3c-9112-66df0d584150</onsuccess></stage><stage stageid="9d18dd85-49e7-4434-b66e-2f6bdedb4dad" name="Received Earliest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3fc67bd-0f5c-4d13-bb51-0b378401d726" name="Received Latest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f180ecf8-78fc-4b37-8a12-69b310abf874" name="Filter Expression" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b969896-5d1a-4f3c-9112-66df0d584150" name="Sender Name?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Sender Name]&lt;&gt;&quot;&quot;" /><ontrue>1eaeb40e-7ba5-4437-86fb-8490d10d7e99</ontrue><onfalse>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onfalse></stage><stage stageid="1eaeb40e-7ba5-4437-86fb-8490d10d7e99" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:sendername LIKE '&quot;&amp;Replace([Sender Name], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="cf1214bb-b7fd-4fec-ab0b-dde176bcca9a" name="Clean Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>330</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2bc9f050-ac4b-4e53-833b-77f8fd75e0ab</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="0a1a6586-94ea-4da3-a8af-cb1ea4a13659" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f24225cb-32e2-4f31-b9f8-f75390a670a9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="747ae4c1-94e5-4288-a0cf-573663610ed9" name="Subject?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>0a1a6586-94ea-4da3-a8af-cb1ea4a13659</ontrue><onfalse>f24225cb-32e2-4f31-b9f8-f75390a670a9</onfalse></stage><stage stageid="4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20" name="Sender Email?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Sender Email]&lt;&gt;&quot;&quot;" /><ontrue>9153efb4-8f18-48c4-9833-9f3364eeea6a</ontrue><onfalse>747ae4c1-94e5-4288-a0cf-573663610ed9</onfalse></stage><stage stageid="9153efb4-8f18-48c4-9833-9f3364eeea6a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>747ae4c1-94e5-4288-a0cf-573663610ed9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:senderemail LIKE '&quot;&amp;Replace([Sender Email], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="a72f4464-acf3-4e70-825d-a0ae628fb772" name="Sender Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da4b8732-2d70-4ad2-8757-603e1aa7d769" name="Sender Email" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2bc9f050-ac4b-4e53-833b-77f8fd75e0ab" name="Filter Expression?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>375</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>cf067e4c-9a82-41b9-acb9-9643cb195100</ontrue><onfalse>32bea08c-862f-440c-bc83-c05ca252286c</onfalse></stage><stage stageid="cf067e4c-9a82-41b9-acb9-9643cb195100" name="Prepend" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>375</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>32bea08c-862f-440c-bc83-c05ca252286c</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>270</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="e3df62cc-bf1a-4ea1-8c56-de279ca09c6b" name="Sent To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Sent To]&lt;&gt;&quot;&quot;" /><ontrue>efe53d68-d29a-4388-afbd-b2866cb03c87</ontrue><onfalse>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onfalse></stage><stage stageid="efe53d68-d29a-4388-afbd-b2866cb03c87" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displayto LIKE '&quot;&amp;Replace([Sent To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="3ac23120-2c22-4fc7-b0ef-bbbc45a030b1" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="4df1ab8f-9b5e-4224-976f-67c1073cabfb" name="Subject?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>3ac23120-2c22-4fc7-b0ef-bbbc45a030b1</ontrue><onfalse>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onfalse></stage><stage stageid="4cc56a65-c57b-4daa-86ed-8033d486e7b9" name="Copied To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Copied To]&lt;&gt;&quot;&quot;" /><ontrue>9533d2e4-6aa7-4fd8-84aa-328875bd17d3</ontrue><onfalse>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onfalse></stage><stage stageid="9533d2e4-6aa7-4fd8-84aa-328875bd17d3" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displaycc LIKE '&quot;&amp;Replace([Copied To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e42900f2-2408-444c-b8c0-7077cfc7ab63</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Sent Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c" name="Earliest?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="IsDate([Sent Earliest])" /><ontrue>c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4</ontrue><onfalse>e42900f2-2408-444c-b8c0-7077cfc7ab63</onfalse></stage><stage stageid="e42900f2-2408-444c-b8c0-7077cfc7ab63" name="Latest" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="IsDate([Sent Latest])" /><ontrue>bbfb0329-e644-42ca-8e5b-91a771933be0</ontrue><onfalse>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onfalse></stage><stage stageid="bbfb0329-e644-42ca-8e5b-91a771933be0" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Sent Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f47c58b8-fa7d-43e4-9879-9489b3c45b64" name="Get Sent Items (Advanced)" type="SubSheetInfo"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Lists Sent Items matching the filter provided.

Eg1 [Subject]='Exception Report'

Eg2 [To]='Mike Colleague' OR [To]='Mike Coworker'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="8eb9cd1f-4784-4a10-b9f5-9257375fa249" name="Start" type="Start"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [To]='Mike Colleague' AND [SentOn]&gt;='15 January 2018 09:00' AND [SentOn]&lt;='19 January 2018 17:00'" stage="Filter Expression" /></inputs><onsuccess>86fdf439-537b-402e-bf87-83a0aa0186aa</onsuccess></stage><stage stageid="0db44ad5-c704-4846-be43-d47afae7ddff" name="Item Count" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7038439e-d7a5-4958-a2a6-b7076ad6e877" name="Filter Expression" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8b0ade5-d70a-469c-b475-5e38be742df6" name="Outlook Folder ID" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="86fdf439-537b-402e-bf87-83a0aa0186aa" name="Internal_Get Items" type="SubSheet"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>9be25db3-9033-4941-81dc-97124e0e4917</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="9be25db3-9033-4941-81dc-97124e0e4917" name="End" type="End"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="f223606b-95bb-4058-9217-4ed244648a97" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b846e5cd-ed99-489e-9671-08f3d63a07ff</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Received Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="020266f4-5352-4942-9ca5-2b5b2c28ba9e" name="Earliest?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="IsDate([Received Earliest])" /><ontrue>f223606b-95bb-4058-9217-4ed244648a97</ontrue><onfalse>b846e5cd-ed99-489e-9671-08f3d63a07ff</onfalse></stage><stage stageid="b846e5cd-ed99-489e-9671-08f3d63a07ff" name="Latest" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="IsDate([Received Latest])" /><ontrue>46ee2d04-b46b-4315-bd1a-abadb043b648</ontrue><onfalse>4d51e55a-9744-4090-b1d2-83bc995adeb5</onfalse></stage><stage stageid="46ee2d04-b46b-4315-bd1a-abadb043b648" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4d51e55a-9744-4090-b1d2-83bc995adeb5</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Received Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="dd6e1514-fd6a-4d97-905d-55b4c8076300" name="Include Unread" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4931c0a2-5942-4727-aa8e-c354a58dc3d9" name="Include Read" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4d51e55a-9744-4090-b1d2-83bc995adeb5" name="Unread Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>225</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9</ontrue><onfalse>1d38891a-a1cf-47ac-952b-2e4f9879a947</onfalse></stage><stage stageid="1d38891a-a1cf-47ac-952b-2e4f9879a947" name="Read Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>225</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>9ec12e81-08b4-4b01-a8ea-02ed52fafbf6</ontrue><onfalse>b8b8afa2-e3b6-490d-b4d1-b636fc831a96</onfalse></stage><stage stageid="9ec12e81-08b4-4b01-a8ea-02ed52fafbf6" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>270</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="b8b8afa2-e3b6-490d-b4d1-b636fc831a96" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>225</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>faa2ec03-a715-4589-a137-e014002ddca2</onsuccess></stage><stage stageid="faa2ec03-a715-4589-a137-e014002ddca2" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>330</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess></stage><stage stageid="59dcb54a-0ca1-49a8-9543-3581d721886e" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>330</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess></stage><stage stageid="fd8830ea-eced-4fa2-8bbb-3537fca5a68b" name="Get Received Items (Expert)" type="SubSheetInfo"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Lists Inbox Items matching the filters provided.

Eg1 @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND urn:schemas:httpmail:read=0

Eg2 @SQL=urn:schemas:httpmail:fromname='The Boss' AND urn:schemas:httpmail:subject LIKE '%Urgent%'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="fcb20265-28c5-415d-a083-d217916df151" name="Start" type="Start"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>4828b977-8cfe-494b-9d2a-5ac65c8b6834</onsuccess></stage><stage stageid="b0aadff2-6a6a-4209-aea3-5c4ad4d2161d" name="Item Count" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea0ad1b6-12ef-43fb-b290-11b329c2ca27" name="Filter Expression" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef288d41-1da1-46bc-ad92-e063e9e51137" name="Outlook Folder ID" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="4828b977-8cfe-494b-9d2a-5ac65c8b6834" name="Internal_Get Items" type="SubSheet"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>829daa3f-c9ac-41b0-b6c9-39caf538c87e</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="829daa3f-c9ac-41b0-b6c9-39caf538c87e" name="End" type="End"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d2fdf5b2-86dd-4f37-86cb-4bc8cc7b80b9" name="Sub Folder" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c56f0cd2-e7f6-4a5d-a859-901d8bd2b9a1" name="Mark Email As Read" type="SubSheetInfo"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>Marks a specific email as read.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="649120fc-a08c-44c6-949e-01c69a4c4d56" name="Start" type="Start"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>55267a5b-cc4a-4cc5-b141-a7c9a032924a</onsuccess></stage><stage stageid="af27f0d8-4b35-4ebb-a259-04758f73dcc3" name="End" type="End"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="55267a5b-cc4a-4cc5-b141-a7c9a032924a" name="Mark Read" type="Code"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>af27f0d8-4b35-4ebb-a259-04758f73dcc3</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = False]]></code></stage><stage stageid="84646f19-6d1f-4d92-a977-3058f4c582ff" name="Entry ID" type="Data"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9646e7-1b30-4f67-833a-3121344437ab" name="Mark Email As Unread" type="SubSheetInfo"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>Marks a specific email as unread.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="4868521a-c295-4724-960a-b8a60dceae6c" name="Start" type="Start"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa</onsuccess></stage><stage stageid="2b8b0ae1-c806-485b-9b87-0875c17ba062" name="End" type="End"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa" name="Mark Unread" type="Code"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>2b8b0ae1-c806-485b-9b87-0875c17ba062</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = True]]></code></stage><stage stageid="9e08a8d3-4d6c-49e8-856f-664eb6e5e175" name="Entry ID" type="Data"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7643fd53-5368-45a9-8412-89b5d574c204" name="Items" type="Collection"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="4c60b4ac-e0f8-4ef7-870d-f88f5a6edade" name="Items" type="Collection"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="4ee04419-4388-4a3a-87f2-06fbe4585fdf" name="Items" type="Collection"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="c7be666f-19fe-421d-bb4d-95085817f37e" name="Items" type="Collection"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>195</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="ecaed312-c8a9-4755-b673-bdf8ce1ba59d" name="Items" type="Collection"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="2d58da80-f8b4-414e-80bb-2d87d9ce0cc4" name="Items" type="Collection"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="dc080a71-625d-45b0-bf8d-1cf2a77b3b48" name="Note2" type="Note"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative>NOT FOR PUBLICATION</narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="20" style="Regular" color="FF0000" /></stage><stage stageid="0b72d21e-2753-42b8-846a-bae349f2c179" name="Message" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c46c352-79de-438b-9ce3-422dcc0fb10b" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a3d2888f-df21-47e3-8405-7f6f4564a71b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b" name="Message?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>0c46c352-79de-438b-9ce3-422dcc0fb10b</ontrue><onfalse>a3d2888f-df21-47e3-8405-7f6f4564a71b</onfalse></stage><stage stageid="9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f24225cb-32e2-4f31-b9f8-f75390a670a9" name="Message?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a</ontrue><onfalse>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onfalse></stage><stage stageid="b4632ee7-bf2b-4b55-9dca-e9a7fafca663" name="Message" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a24cb43c-102d-4964-a916-09e44168a4c1" name="Input" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1fdeae66-adae-4ae5-bf8d-61ddb71fc904" name="Output" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="48aa1db4-2765-4c9e-a7b6-fb0989ed93f3" name="Subject" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8eb18cc7-2d34-4dba-bcd7-32cd82d688c9" name="Input" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e48a94c8-7d5d-40ad-89d8-4d953b6791c3" name="Output" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="94557554-0d80-4cc4-ae14-8806264969e5" name="Input" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-30</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="416d4ee0-5f16-4282-bec4-42328e03acb4" name="Output" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="42b922f9-dd32-475f-a8ec-67ad770ce8ad" name="Input" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e6d1a1b7-3b51-4ee1-8756-585e34aa936d" name="Output" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="71f3829b-c755-4e45-a175-c3b7075af273" name="Input" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>180</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e7e22486-0749-492f-8e67-586aa2c271ab" name="Output" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="1846bfcf-e7b1-48ca-83fe-bd2b5a1bcbeb" name="Input" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5cd2cea7-99cf-42af-b4eb-7cf6b2d62958" name="Output" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="e33d69e8-faec-46fc-a225-2ac747bddd65" name="Input" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49f3281d-7765-48aa-8547-fc87ba0bd110" name="Output" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="5cfc97b8-86c5-4a5b-ae62-71e55abd988d" name="Input" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>240</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="73da0a90-8718-4f31-a8dd-2a56a45265ed" name="Input" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ec957629-3e89-4cd3-963b-fb0ab19dc116" name="Input" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative></narrative><displayx>-240</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bbd7d428-080a-47f0-8431-837da5d25290" name="Input" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>180</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e15d0e55-ef6a-4836-bdb5-3ccf92b362fa" name="Input" type="Block"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e470b377-ed2e-449e-b7b1-5954285a57c1" name="Input" type="Block"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d24d2f3f-a3dd-4e54-8c2e-dd886cb74e42" name="Input" type="Block"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="07fac98a-a954-4be7-9aff-79b761ec658d" name="Input" type="Block"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="023dcb4e-5dbd-4015-a4a4-d9825ca509b2" name="Input" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative></narrative><displayx>-255</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="45c2b8cf-a653-4a26-bc25-a2009c8d3501" name="Input" type="Block"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ad7ba6e4-ef09-4fac-9dea-f535bb81aac2" name="Input" type="Block"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd8c58ce-3a4e-44a6-b4d8-248309fac791" name="Default" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative></narrative><displayx>-255</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="63823440-c2ee-48b1-a2db-527efc5b94f7" name="Note3" type="Note"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><displayx>-525</displayx><displayy>-45</displayy><displaywidth>480</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="528d4d34-61bc-4a7b-b329-4bda0e6309fa" name="Note4" type="Note"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><displayx>-360</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="702f380f-35f2-4112-95d8-cdc6a3521101" name="Note3" type="Note"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><displayx>-525</displayx><displayy>-60</displayy><displaywidth>480</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="13bf2bea-2785-44ac-bda2-1e04f3c2a1e1" name="Note4" type="Note"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><displayx>-360</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>210</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="b1663b58-d99f-4f8e-9641-4b3db50ca615" name="Clean Up" type="Calculation"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d9a607b6-73e8-49ec-b2bc-a8032c0ab747</onsuccess><calculation expression="Replace([File Name],&quot;&quot;&quot;&quot;,&quot;&quot;)" stage="File Name" /></stage><stage stageid="80208144-c05c-4b32-bd6a-de8320da32e5" name="New Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="da53ac89-1fa5-4b10-b36d-3163ee14255e" name="Symphony Ventures - JSON Manipulation (Custom C#)" xmlns="http://www.blueprism.co.uk/product/process"><process name="Symphony Ventures - JSON Manipulation (Custom C#)" version="1.0" bpversion="6.5.0.12573" narrative="Custom C# object for JSON manipulations" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>260490bc-6d0e-4673-8bf4-5a75fb1d25cc</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-32</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81c712f2-cca1-4454-ba5b-a0274efef568" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="967dbbc7-5685-46f4-96fe-101210c82f72" type="Normal" published="True"><name>JSON to Collection (Skipping JArray) </name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6f5dc737-6564-4317-883b-fc960b111c1f" type="Normal" published="True"><name>Filter JSON Keys</name><view><camerax>-115</camerax><cameray>15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="28ee4de9-6ad9-4410-b525-a016434af384" type="Normal" published="True"><name>Filter JSON Array Entries</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="97fe4800-aea8-4001-9720-ebb0220fba93" type="Normal" published="True"><name>Check if Array or Object</name><view><camerax>0</camerax><cameray>6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="48f14b02-c83d-4520-9c03-0add76441c48" type="Normal" published="True"><name>Count Entries in Array</name><view><camerax>-100</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904d8924-d1e9-4d82-8631-f37e6f4060aa" type="Normal" published="True"><name>Get Entry by Index</name><view><camerax>114</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9addf0f3-9f44-4d3d-8927-acab6ade3a29" type="Normal" published="True"><name>List Properties</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20ac94a1-8749-480b-891b-5fb0640479f7" type="Normal" published="True"><name>Get Object Property Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="96ed1eaf-86f0-46be-9268-813c14f308c2" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>5465cb9b-edd9-4f25-a0d1-7d9cb0489f09</onsuccess></stage><stage stageid="5465cb9b-edd9-4f25-a0d1-7d9cb0489f09" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="92242f4c-6a45-483a-80ff-60dd33aaa0f7" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference><reference>System.Xml.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Newtonsoft.Json.Linq</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>System.Collections</import><import>System.Linq</import><import>Newtonsoft.Json</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[    private class JSON
    {
        public const string Array = "JSON:Array";
        public const string Null = "JSON:Null";
    }

    private bool mUseNewParseMethod;

    public string ConvertToJSON(DataTable dt)
    {
        object o = SerialiseGeneric(dt, true);
        return JsonConvert.SerializeObject(o);
    }

    public object SerialiseGeneric(object o, bool removeArray)
    {
        DataTable dt = o as DataTable;
        if (dt != null)
            return SerialiseDataTable(dt);

        DataRow dr = o as DataRow;
        if (dr != null)
            return SerialiseDataRow(dr, removeArray);

        string s = o as string;
        if (s != null && s == JSON.Null)
            return null;

        if (o != null)
            return o;

        return null;
    }

    public object SerialiseDataTable(DataTable dt)
    {
        if (IsSingleRow(dt))
            return SerialiseGeneric(dt.Rows[0], false);
        else
        {
            JArray ja = new JArray();
            foreach (DataRow r in dt.Rows)
                ja.Add(SerialiseGeneric(r, true));
            return ja;
        }
    }

    public bool IsSingleRow(DataTable dt)
    {
        if (dt.ExtendedProperties.Contains("SingleRow"))
            return System.Convert.ToBoolean(dt.ExtendedProperties["SingleRow"]);
        // Fallback for older versions of blueprism
        return dt.Rows.Count == 1;
    }

    public object SerialiseDataRow(DataRow dr, bool removeArray)
    {
        JObject jo = new JObject();
        foreach (DataColumn c in dr.Table.Columns)
        {
            string s = c.ColumnName;
            if (removeArray && s == JSON.Array)
                return SerialiseGeneric(dr[s], true);
            jo[s] = JToken.FromObject(SerialiseGeneric(dr[s], false));
        }
        return jo;
    }

    public DataTable ConvertToDataTable(string json)
    {
        object o = JsonConvert.DeserializeObject(json);
        return (DataTable)DeserialiseGeneric(o, true);
    }

    private object DeserialiseGeneric(object o, bool populate)
    {
        JArray a = o as JArray;
        if (a != null)
			if(mUseNewParseMethod) {
				return DeserialiseArrayWithoutJArray(a, populate);
			} else {
				return DeserialiseArray(a, populate);
			}

        JObject jo = o as JObject;
        if (jo != null)
            return DeserialiseObject(jo, populate);

        JValue jv = o as JValue;
        if (jv != null)
            return jv.Value;

        return JSON.Null;
    }

    private string GetKey(KeyValuePair<string, JToken> kv)
    {
        if (kv.Key != null)
            return kv.Key.ToString();
        return "";
    }


    private DataTable DeserialiseObject(JObject o, bool populate)
    {
        DataTable dt = new DataTable();

        foreach (KeyValuePair<string, JToken> kv in o)
        {
            Type type = GetTypeOf(DeserialiseGeneric(kv.Value, false));
            dt.Columns.Add(GetKey(kv), type);
        }

        if (populate)
        {
            DataRow dr = dt.NewRow();
            foreach (KeyValuePair<string, JToken> kv in o)
                dr[kv.Key] = DeserialiseGeneric(kv.Value, true);
            dt.Rows.Add(dr);
        }

        return dt;
    }

	private DataTable DeserialiseArrayWithoutJArray(JArray jarr, bool populate)
	{
		DataTable dt = new DataTable();

		Type first = null;
		foreach (object e in jarr)
		{
			if (first == null)
				first = GetTypeOf(DeserialiseGeneric(e, false));
			if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
				throw new Exception("Data Type mismatch in array");
		}

		System.Collections.Specialized.OrderedDictionary columns = new System.Collections.Specialized.OrderedDictionary();
		var allTypesInColumnsMatch = jarr.All(e =>
		{
			if (!(e is JObject)) {
				return false;
			}
			foreach (KeyValuePair<string, JToken> pair in (JObject)e)
			{
				object val = pair.Value;
				if (val is JValue) {
					val = ((JValue)val).Value;
				}
				var tp = (val ?? (object)"").GetType();

				if (columns.Contains(pair.Key))
				{
					if (tp != columns[pair.Key])
						return false;
				}
				else
					columns[pair.Key] = tp;
			}
			return true;
		});


		if (allTypesInColumnsMatch)
		{
			foreach (DictionaryEntry pair in columns)
			{
				string key = System.Convert.ToString(pair.Key);
				Type tp = (Type)(pair.Value);
				if (tp == typeof(JObject) || tp == typeof(JArray))
					dt.Columns.Add(key, typeof(DataTable));
				else
					dt.Columns.Add(key, tp);
			}
		}
		else if (first != null)
			dt.Columns.Add(JSON.Array, first);

		if (populate)
		{
			foreach (object e in jarr)
			{
				DataRow dr = dt.NewRow();
				if (allTypesInColumnsMatch)
				{
					foreach (KeyValuePair<string, JToken> pair in (JObject)e)
						dr[pair.Key] = DeserialiseGeneric(pair.Value, true);
				}
				else
					dr[JSON.Array] = DeserialiseGeneric(e, true);

				dt.Rows.Add(dr);
			}
		}

		return dt;
	}


    private DataTable DeserialiseArray(JArray o, bool populate)
    {
        DataTable dt = new DataTable();

        Type first = null;
        foreach (object e in o)
        {
            if (first == null)
                first = GetTypeOf(DeserialiseGeneric(e, false));
            if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
                throw new Exception("Data Type mismatch in array");
        }
        if (first != null)
            dt.Columns.Add(JSON.Array, first);

        if (populate)
        {
            foreach (object e in o)
            {
                DataRow dr = dt.NewRow();
                dr[JSON.Array] = DeserialiseGeneric(e, true);
                dt.Rows.Add(dr);
            }
        }

        return dt;
    }

    private Type GetTypeOf(object o)
    {
        if (o == null)
            return typeof(string);
        return o.GetType();
    }]]></code></stage><stage stageid="e7e38fcf-98b7-4dfa-98e4-e8dfbf22c9ad" name="Clean Up" type="SubSheetInfo"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="1efb16e8-76e0-4484-9868-cedcd560f84d" name="Start" type="Start"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e2df2eb2-81ae-413f-8c14-c86ae28822a1</onsuccess></stage><stage stageid="e2df2eb2-81ae-413f-8c14-c86ae28822a1" name="End" type="End"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="9a16b384-2fb0-48dc-8056-e3d79c0617a8" name="Note1" type="Note"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="03897ea0-1c36-4c6a-9a9f-d704c83bca33" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="69f7be26-fdee-4a61-af13-717c6f86c179" name="Collection to JSON" type="SubSheetInfo"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><narrative>Converts a collection into JSON text</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ea6049c-e3cb-4338-acfe-2a36f82537c3" name="Start" type="Start"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Resulting JSON is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Data" narrative="Collection to Convert" stage="I_Data" /></inputs><onsuccess>d5989fdf-9e71-438d-9ddb-80f9f0202dc2</onsuccess></stage><stage stageid="f3479b5a-3028-4662-87a7-eb9d4cedf916" name="End" type="End"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="JSON" narrative="JSON text" stage="O_JSON" /></outputs></stage><stage stageid="d5989fdf-9e71-438d-9ddb-80f9f0202dc2" name="Collection To JSON" type="Code"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="data" expr="[I_Data]" /></inputs><outputs><output type="text" name="json" stage="O_JSON" /></outputs><onsuccess>f3479b5a-3028-4662-87a7-eb9d4cedf916</onsuccess><code><![CDATA[json = ConvertToJSON(data);]]></code></stage><stage stageid="8b62e3dd-4468-400e-8bb9-c4043f8140d1" name="I_Data" type="Collection"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="23637a3d-ef5b-4625-ace7-d34a0202b7bb" name="O_JSON" type="Data"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d96b37f-f11e-4405-8b83-754a4e13c97c" name="JSON to Collection" type="SubSheetInfo"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><narrative>Converts JSON text to Collection</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7cbca6ee-f14c-4ccf-bbf0-b3b0ed9c9f92" name="Start" type="Start"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Resulting collection is ouptut" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON text to convert" stage="I_JSON" /></inputs><onsuccess>5206b169-055c-48ad-9573-e12ba821b6a4</onsuccess></stage><stage stageid="04c40a27-d97d-4843-8325-2626ebad793d" name="End" type="End"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" narrative="Collection output" stage="O_Result" /></outputs></stage><stage stageid="5206b169-055c-48ad-9573-e12ba821b6a4" name="JSON To Collection" type="Code"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="collection" name="result" stage="O_Result" /></outputs><onsuccess>04c40a27-d97d-4843-8325-2626ebad793d</onsuccess><code><![CDATA[result = ConvertToDataTable(json);]]></code></stage><stage stageid="6b9947f6-58d1-4243-8d64-00b33ed3bd8d" name="I_JSON" type="Data"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db4bbfc9-e045-4fdf-b443-d7efc5acfdcb" name="O_Result" type="Collection"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6601ded6-c986-491f-a59f-aed4b639a54a" name="Filter JSON Keys" type="SubSheetInfo"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><narrative>Filters JSON text to include/exclude keys with names in the input collection</narrative><displayx>-195</displayx><displayy>-135</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae814127-c035-4e1d-97a2-cebbad812a1d" name="Start" type="Start"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Filtered JSON is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON Text to filter" stage="I_JSON" /><input type="collection" name="Properties" narrative="JSON Properties" stage="I_Keys" /><input type="flag" name="Only/Exclude?" narrative="Set to True to include only properties in the input collection. Set to false to exclude properties in the input collection" stage="I_Only" /></inputs><onsuccess>e8c34829-b9b8-4372-ab6d-bcee72d51827</onsuccess></stage><stage stageid="1bc096eb-e081-4d88-87ca-a21f2120bddd" name="End" type="End"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="Resulting JSON with filtered rows" stage="O_Result" /></outputs></stage><stage stageid="e8c34829-b9b8-4372-ab6d-bcee72d51827" name="Filter Json Keys" type="Code"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="collection" name="keys" expr="[I_Keys]" /><input type="flag" name="only" expr="[I_Only]" /></inputs><outputs><output type="text" name="filteredJson" stage="O_Result" /></outputs><onsuccess>1bc096eb-e081-4d88-87ca-a21f2120bddd</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
if(jsonT is JArray) {
	JArray jsonArray = (JArray)jsonT;
	foreach(JObject o in jsonArray)
	{
		List<string> removeList = new List<string>();
		foreach(JProperty p in o.Properties())
		{
			DataRow[] search = keys.Select("Key = '"+p.Name+"'");
			if((only && search.Length == 0) || (!only && search.Length > 0))
			{
				removeList.Add(p.Name);
			}
		}
		foreach(string r in removeList) {
			o.Remove(r);
		}
	}
	filteredJson = JsonConvert.SerializeObject(jsonArray);	
} else if (jsonT is JObject) {
		JObject o = (JObject)jsonT;
		List<string> removeList = new List<string>();
		foreach(JProperty p in o.Properties())
		{
			DataRow[] search = keys.Select("Key = '"+p.Name+"'");
			if((only && search.Length == 0) || (!only && search.Length > 0))
			{
				removeList.Add(p.Name);
			}
		}
		foreach(string r in removeList) {
			o.Remove(r);
		}
		filteredJson = JsonConvert.SerializeObject(o);	
} else {
	filteredJson = "";
	throw new Exception("Could not parse JSON text input.");
}
]]></code></stage><stage stageid="08779ee4-2a44-4f1d-b3df-2407b6e4f3b6" name="O_Result" type="Data"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="135d46fb-3065-4dac-9ee9-c6b835a883f8" name="Input Parameters" type="Block"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-75</displayy><displaywidth>150</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="13160ffb-306f-4681-8776-80671bac22d2" name="Output Parameters" type="Block"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="7ce537f3-50c4-4cb3-8941-a914a4f0ddf1" name="Filter JSON Array Entries" type="SubSheetInfo"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><narrative>This page removes rows from a JSON Array text based on the input field/value collection</narrative><displayx>-195</displayx><displayy>-135</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fcfd24eb-5168-41de-b3da-8b77af9b68cc" name="Start" type="Start"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is a JSON array." /></preconditions><postconditions><condition narrative="Filtered JSON array is output." /><condition narrative="Number of entries in filtered JSON array is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON Array" narrative="JSON array to filter" stage="I_JSON" /><input type="collection" name="Queries" narrative="Field/Value pair of queries to search for." stage="I_Queries" /></inputs><onsuccess>ce0073c7-d034-4486-8267-e1f0bca9e643</onsuccess></stage><stage stageid="a1397785-426b-47b0-8bc0-5d9bff6d3fa3" name="End" type="End"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="JSON with filtered data" stage="O_Result" /><output type="number" name="Count" narrative="Number of entries in the filtered text" stage="O_Count" /></outputs></stage><stage stageid="ce0073c7-d034-4486-8267-e1f0bca9e643" name="Filter Json by Row" type="Code"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="collection" name="queries" expr="[I_Queries]" /></inputs><outputs><output type="text" name="filteredJson" stage="O_Result" /><output type="number" name="count" stage="O_Count" /></outputs><onsuccess>a1397785-426b-47b0-8bc0-5d9bff6d3fa3</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
if(jsonT is JArray) {
	var jsonArray = (JArray)jsonT;
	var filter = new Object();
	foreach(DataRow row in queries.Rows) {
		filter = from e in jsonArray
					where (string)e[row["Field"]] == (string)row["Value"]
					select e;
		jsonArray = new JArray((IEnumerable<JToken>)filter);
	}
	filteredJson = JsonConvert.SerializeObject(((IEnumerable<JToken>)filter).ToList());
	count = ((IEnumerable<JToken>)filter).Count();
} else {
	count = 0;
	filteredJson = "";
	throw new Exception("JSON text input is not a JSON Array.");
}

]]></code></stage><stage stageid="6a87b3ef-21ed-4b4d-827b-c67a02505179" name="O_Result" type="Data"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeaa3b49-1afe-4130-842d-cbe236d5def6" name="Input Parameters" type="Block"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-75</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="f6561f20-3d14-4c2f-a501-d6cadfba6e5d" name="Output Parameters" type="Block"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="9ba1ca64-efb5-4fe9-87e3-da5acbb8ce31" name="I_JSON" type="Data"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5346f3fa-f24d-4151-a91a-c2630943017a" name="Input Parameters" type="Block"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="4e1665fe-d25d-4a5a-8b6b-6f2c383478cf" name="Output Parameters" type="Block"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="8fca88c4-7464-4497-9928-c2484950e832" name="Input Parameters" type="Block"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="89909ba8-dc73-472b-982b-4de36bf7d9d3" name="Output Parameters" type="Block"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="12406b66-42a3-4c85-8a1e-e797366d79cb" name="I_Queries" type="Collection"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field" type="text" /><field name="Value" type="text" /></collectioninfo></stage><stage stageid="210c13a8-b9aa-491e-a535-0fd965e9c30d" name="I_Keys" type="Collection"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Key" type="text" /></collectioninfo></stage><stage stageid="39886bb5-bd0e-4f70-864f-fbccdfd6e74b" name="I_JSON" type="Data"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35254647-3b21-420a-b121-69cd5a259ce0" name="O_Count" type="Data"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d64a77d-feb4-4782-a1f5-5b838dbd3ab0" name="I_Only" type="Data"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa231f83-2019-45d0-9d9e-d5e3c106be73" name="Check if Array or Object" type="SubSheetInfo"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><narrative>Check to see if the JSON text is an Array or an object. Else an exception is thrown.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="4e08c5a8-6c7a-4845-883e-9a7146857c50" name="Start" type="Start"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Type of input JSON is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON to check" stage="I_JSON" /></inputs><onsuccess>787564c7-409b-48ea-b5a7-08b180bfeda1</onsuccess></stage><stage stageid="b43e954b-d158-4c59-8514-432459a1288f" name="End" type="End"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Type" narrative="Will be Array (text inside []) or Object (text inside {})" stage="O_Type" /></outputs></stage><stage stageid="787564c7-409b-48ea-b5a7-08b180bfeda1" name="Array or Object?" type="Code"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><narrative>Code stage to check if loaded JSON is an Array or an Object.</narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="text" name="Type" stage="O_Type" /></outputs><onsuccess>b43e954b-d158-4c59-8514-432459a1288f</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
if(jsonT is JArray) {
	Type = ((JArray)jsonT).Type.ToString();
}
else if (jsonT is JObject) {
	Type = ((JObject)jsonT).Type.ToString();
}
else {
	throw new Exception("JSON is not an Array or an Object");
}]]></code></stage><stage stageid="8690c06b-3556-48e2-b1f5-bd99d4faf681" name="Input Parameters" type="Block"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="f2ac9c0e-6f6d-443a-9d22-839d6a09243e" name="I_JSON" type="Data"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18654525-a65e-4302-ab3c-da93be25b003" name="Count Entries in Array" type="SubSheetInfo"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><narrative>Count the number of entries within a JSON Array</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="5218cdeb-887e-41d6-a6ca-6fca6232e378" name="Start" type="Start"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is an array" /></preconditions><postconditions><condition narrative="Count is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON Array" narrative="JSON Array for which to count entries" stage="I_JSON" /></inputs><onsuccess>71da54a9-c1b8-40dd-ad1c-82cf88764197</onsuccess></stage><stage stageid="002b0821-a933-4dc9-a4b6-a52a2cae2842" name="End" type="End"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Count" narrative="Number of entries in array" stage="O_Count" /></outputs></stage><stage stageid="71da54a9-c1b8-40dd-ad1c-82cf88764197" name="Number of Entries in Array" type="Code"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><narrative>Counts the number of objects in an Array</narrative><displayx>15</displayx><displayy>-75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="number" name="count" stage="O_Count" /></outputs><onsuccess>002b0821-a933-4dc9-a4b6-a52a2cae2842</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
count = 0;
if(jsonT is JArray) {
	count = ((JArray)jsonT).Count;
} else {
	throw new Exception("JSON is not an array");
}]]></code></stage><stage stageid="35c1513f-6910-4d08-b61e-79324bea1043" name="I_JSON" type="Data"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7196266c-c673-49ac-98ef-86ba5d42a0a1" name="O_Count" type="Data"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8ee7515-d3e0-4122-b9de-10102737d0fc" name="Input Parameters" type="Block"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="322fe7bc-7718-44ff-8bae-216abf4109d4" name="Output Parameters" type="Block"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="88182e05-d1ac-4416-a45f-361bb212cd67" name="O_Type" type="Data"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="72d0a7b4-254f-40db-a9ad-3dd996fd1858" name="Output Parameters" type="Block"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="0758337e-118c-48b3-a835-cae06e6de353" name="List Properties" type="SubSheetInfo"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><narrative>For a JSON Object this page returns a CSV of all the properties in the Object and the number of entries.
For a JSON Array this page returns a CSV of all the properties from all the rows in the Array and the number of entries.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c5a1ec26-95f6-47ca-b33f-4c0bbf7c54f4" name="Start" type="Start"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="CSV of property names is output" /><condition narrative="Number of properties is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON Array to Object" stage="I_JSON" /></inputs><onsuccess>8b7006cf-5b0c-4126-85ec-6ec5a8ac9e57</onsuccess></stage><stage stageid="5c937a0e-bb4a-4892-bb29-6bccb867cc1a" name="End" type="End"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Properties" narrative="Properties from JSON Text" stage="O_Properties" /><output type="number" name="Count" narrative="Number of Properties" stage="O_Count" /></outputs></stage><stage stageid="862f67fd-5441-40fc-887b-8ddf898b2baf" name="I_JSON" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db5d815f-1da7-403e-af0d-fa0f7f369917" name="Input Parameters" type="Block"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="1089ac9a-6b4d-4bd2-ac6d-043ee5e2ab04" name="Output Parameters" type="Block"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="1a508371-c7d2-45aa-a9d6-a225e67df314" name="O_Properties" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="141aa330-5603-4756-9c59-4cadfb484726" name="Length" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b729ae-0ab6-43a6-8b68-9b90876db588" name="Comma.Remove" type="MultipleCalculation"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative>Stage to remove the end comma from a string of text</narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>5c937a0e-bb4a-4892-bb29-6bccb867cc1a</onsuccess><steps><calculation expression="Len([O_Properties])" stage="Length" /><calculation expression="Left([O_Properties],[Length] -1 )" stage="O_Properties" /></steps></stage><stage stageid="de12de66-65c0-4c88-a3bf-f497466c7eeb" name="Get Entry by Index" type="SubSheetInfo"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><narrative>Get the JSON text inside the given row index for the given JSON Array</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2e24283f-a220-4cc8-b4f2-34045cd517fc" name="Start" type="Start"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is an array" /></preconditions><postconditions><condition narrative="Entry at input index is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON Array" narrative="JSON Array to search through" stage="I_JSON" /><input type="number" name="Index" narrative="Index of row to retrieve from JSON" stage="I_Index" /></inputs><onsuccess>9ca6d961-4db3-45cc-9b02-ff5580412362</onsuccess></stage><stage stageid="023bf377-1992-4b75-89b6-0c25fd2a248d" name="End" type="End"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Entry" narrative="JSON text inside input array at input index" stage="O_Entry" /></outputs></stage><stage stageid="9ca6d961-4db3-45cc-9b02-ff5580412362" name="Get Row in JSON array by index" type="Code"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><narrative>Get the value of a full row within a JSON Array</narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="number" name="index" expr="[I_Index]" /></inputs><outputs><output type="text" name="Row" stage="O_Entry" /></outputs><onsuccess>023bf377-1992-4b75-89b6-0c25fd2a248d</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
Row = "";
if(jsonT is JArray) {
	var jsonA = (JArray)jsonT;
	var row = jsonA[Convert.ToInt32(index)];
	Row = row.ToString();
} else {
	throw new Exception("JSON is not an array");
}	


]]></code></stage><stage stageid="c8cf1125-c045-446f-91c4-09eaba5a6b27" name="I_JSON" type="Data"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec7a18ee-0c52-4789-b675-8ed7f27ff2a1" name="Input Parameters" type="Block"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="e8f048c2-e2ee-4187-b29f-3884eb43c369" name="Output Parameters" type="Block"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="2e1f7161-0fb4-493b-a13c-abb09242a389" name="O_Entry" type="Data"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e80e3c7e-8fb5-4f7e-a8ed-b28ee2980e81" name="Get Object Property Value" type="SubSheetInfo"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><narrative>Get the value of specific property of an object.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="32ac5380-54c7-4c3e-b0b6-2ac148ceeb83" name="Start" type="Start"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is an object" /></preconditions><postconditions><condition narrative="Value of the property is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON Object" narrative="JSON Object in which to find property" stage="I_JSON" /><input type="text" name="Property" narrative="Property to find in JSON object" stage="I_Property" /></inputs><onsuccess>ca9d9e71-7bab-4d16-b9ef-20ba1d9328f8</onsuccess></stage><stage stageid="527c07ee-21a8-46d4-a347-5a38bd21a060" name="End" type="End"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="Value retrieved from property in object" stage="O_Value" /></outputs></stage><stage stageid="ca9d9e71-7bab-4d16-b9ef-20ba1d9328f8" name="Get Object Property Value " type="Code"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><narrative>Determine the value of specific property objects</narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="text" name="Object" expr="[I_Property]" /></inputs><outputs><output type="text" name="PropertyValue" stage="O_Value" /></outputs><onsuccess>527c07ee-21a8-46d4-a347-5a38bd21a060</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
PropertyValue = "";
if(jsonT is JObject) {
	var jsonO = (JObject)jsonT;
	PropertyValue = jsonO.GetValue(Object).ToString();
} else {
	throw new Exception("Json text is not an object.");
}


	
	]]></code></stage><stage stageid="96bc9dce-2f08-4441-ab0d-d96a313952e3" name="I_JSON" type="Data"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d458dc62-ecf0-4fc0-8e0a-a3f39bc6a0a9" name="Input Parameters" type="Block"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="3c1e8799-1b8f-4b9f-a8f5-c0564caae4c9" name="Output Parameters" type="Block"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="3b569c3d-6872-4a11-a61e-59f0a9f35bab" name="O_Value" type="Data"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="e8a0901a-ce25-42e1-ae89-db8fa3f66c64" name="I_Index" type="Data"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e742c15d-fd9e-4098-ac48-0e5721572a7a" name="I_Property" type="Data"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b7006cf-5b0c-4126-85ec-6ec5a8ac9e57" name="List of properties for JSON Object" type="Code"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative>Determine the Properties of an Object and put into a list</narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Row" expr="[I_JSON]" /></inputs><outputs><output type="text" name="properties" stage="O_Properties" /><output type="number" name="count" stage="O_Count" /></outputs><onsuccess>71b729ae-0ab6-43a6-8b68-9b90876db588</onsuccess><code><![CDATA[var jsonT = JToken.Parse(Row);
properties = "";
var arrayCount = 0;
if(jsonT is JObject) {
	var jsonO = (JObject)jsonT;
	var propertiesList = jsonO.Properties();
	foreach(JProperty p in propertiesList) {
		properties += p.Name + ",";
	}
	count = propertiesList.Count();
} else if(jsonT is JArray) {
	var jsonA = (JArray)jsonT;
	foreach(var jsonE in jsonA) {
		if(jsonE is JObject) {
			var jsonO = (JObject)jsonE;
			var propertiesList = jsonO.Properties();
			foreach(JProperty p in propertiesList) {
				if(!properties.Contains(p.Name)) {
					properties += p.Name + ",";
				}
			}
		} else if(jsonE is JArray) {
			properties += "Array"+arrayCount+",";
			arrayCount++;
		}
	}
	count = properties.Split(',').Length - 1;
} else {
	throw new Exception("Json text is not valid.");
}



]]></code></stage><stage stageid="8f88179f-5d8d-41e7-887f-3e71173f7526" name="Local Parameters" type="Block"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="008000" /></stage><stage stageid="d3036536-8172-4a9b-b40c-8ac7833eed02" name="O_Count" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /></stage><stage stageid="bb4cab71-f560-470b-a2d8-2f9610238bb5" name="JSON to Collection (Skipping JArray) " type="SubSheetInfo"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><narrative>Converts JSON text to Collection.
This action differs from JSON to Collection as JSON array entry data will not be stored in a collection of collections.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="db0cfd01-fe24-4dbb-bdef-21ac28772f0a" name="Start" type="Start"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Resulting collection is output" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON text to convert" stage="I_JSON" /></inputs><onsuccess>e07aabf7-180d-4f74-a648-54a7cc419fe1</onsuccess></stage><stage stageid="7364909f-f9b1-44ed-be74-c274c0d0014d" name="End" type="End"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" narrative="Collection output" stage="O_Result" /></outputs></stage><stage stageid="e07aabf7-180d-4f74-a648-54a7cc419fe1" name="JSON To Collection without JArray" type="Code"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="collection" name="result" stage="O_Result" /></outputs><onsuccess>7364909f-f9b1-44ed-be74-c274c0d0014d</onsuccess><code><![CDATA[try {
	mUseNewParseMethod = true;
	result = ConvertToDataTable(json);	
} finally {
	mUseNewParseMethod = false;
}]]></code></stage><stage stageid="feb28c22-afff-4361-9d89-5bcb04c3b92f" name="I_JSON" type="Data"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acdbdf22-5efa-400a-9a0a-d04a48f98f69" name="O_Result" type="Collection"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="485514ce-ad72-4d27-aac7-2d33c9b19ade" name="Input Parameters" type="Block"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="842a8de1-aaec-4214-8502-79eda058f5d2" name="Output Parameters" type="Block"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage></process></object>
        <object id="6f9680f1-616c-4884-b58c-42ed51446377" name="Utility - Collection Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Collection Manipulation" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Utility functions for manipulating collections." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /></preconditions><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="53950e2c-2499-41fc-aed2-207a6c7431fd" type="Normal" published="False"><name>Utility Functions Test</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8e5be7a-93aa-4322-99bf-00edea37bbc2" type="Normal" published="True"><name>Sort Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ffab882f-007c-48a5-8f84-8f5f1bfd4d6a" type="Normal" published="True"><name>Reverse Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8fefb9-4622-4ea7-8287-e64b86d7e513" type="Normal" published="True"><name>Merge Collection</name><view><camerax>-100</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76943739-36b9-46bc-8f95-e1b6342bc8a6" type="Normal" published="True"><name>Split Collection</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0cf6615-20c0-4910-9990-0f79f5f30bca" type="Normal" published="True"><name>Transpose Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a9f3108d-ca87-4551-b567-9c64ef05cf0c" type="Normal" published="True"><name>Filter Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e277cc2b-72b8-47e9-8a1b-e8530eb19a09" type="Normal" published="True"><name>Get Collection Fields</name><view><camerax>42</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d41bfc8-e552-41ae-9e45-65dc3d1f7276" type="Normal" published="True"><name>Field Exists</name><view><camerax>144</camerax><cameray>-41</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcde64eb-f856-4440-a6c0-d83f40f0cf4b" type="Normal" published="True"><name>Rename Collection Fields</name><view><camerax>207</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="198ce3c6-ecbf-4203-a609-b15429defe0e" type="Normal" published="True"><name>Read Collection Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="05992810-1be4-4455-84e8-10579308ab87" type="Normal" published="True"><name>Set Collection Field</name><view><camerax>276</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a9aa259-fe07-4035-8411-23737559c975" type="Normal" published="True"><name>Collection Contains Field</name><view><camerax>0</camerax><cameray>168</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a" type="Normal" published="True"><name>Collection Contains Value</name><view><camerax>-93</camerax><cameray>-24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdf2a7f1-a351-441a-8d36-bc92af66650a" type="Normal" published="True"><name>Copy Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f694a8-5305-4a38-9b41-a98998f2f7ca" type="Normal" published="True"><name>Append Rows to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a474299b-5c1c-4873-a3af-4dd0d3bd03ff" type="Normal" published="True"><name>Append Field (Text)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65451129-b7a2-4c2f-a12d-9086bd314f53" type="Normal" published="True"><name>Append Field (Number)</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9" type="Normal" published="True"><name>Rename Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1d7b6202-d743-4485-9101-839f4651c406" type="Normal" published="True"><name>Delete Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df662579-558c-4cc9-88df-8c680b67b41d" type="Normal" published="True"><name>Delete Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a772458-463d-46cf-8451-6cf5b4aeae30" type="Normal" published="True"><name>Remove Null Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e3b975-d485-49a3-b962-864d13a96e05" type="Normal" published="True"><name>Set Column Names From First Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="87541f35-d834-4d99-8fd3-16ec994a9990" type="Normal" published="True"><name>Set Column Names From Expected Collection</name><view><camerax>0</camerax><cameray>-62</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d1eee74f-1582-4c3e-96c8-b94f1535d7e1" type="Normal" published="True"><name>Fill Blanks</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb03a051-75a8-4093-a383-6c6fecfbb736" type="Normal" published="True"><name>Remove dots from headers</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa6ed646-8ae1-479e-9845-b1dc9ac3b560" type="Normal" published="True"><name>Remove Empty Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import><import>System.Reflection</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public CommonDictionary as New System.Collections.Generic.Dictionary(Of String, String)

Private Iterator as Generic.IEnumerator(Of String)

Function CloneColumn(col As DataColumn) As DataColumn
	Dim tp = col.GetType()
	Return TryCast(
		tp.GetMethod("Clone", BindingFlags.Instance Or BindingFlags.NonPublic).
			Invoke(col, Nothing),
		DataColumn
	)
End Function

Function GetStringValue(row As DataRow, fieldName As String) As String
	Dim col As DataColumn = row.Table.Columns(fieldName)
	Dim val = row(fieldName)
	Select Case True
		Case IsDateColumn(col)
			Return CDate(val).ToString("d") 
		Case IsTimeColumn(col)
			Return CDate(val).ToString("T")
		Case IsDateTimeColumn(col)
			Return CDate(val).ToString("G")
		Case Else
			Return CStr(val)
	End Select
End Function

Function GetBPType(col As DataColumn) As String
	If col Is Nothing Then Return Nothing
	If Not col.ExtendedProperties.ContainsKey("bptype") Then Return Nothing
	Return col.ExtendedProperties("bptype").ToString()
End Function

Function IsDateColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "date")
End Function

Function IsTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "time")
End Function

Function IsDateTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "datetime")
End Function

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


private function GetBluePrismDAtaType(DotNetType AS Type) As String
   Select Case True
      Case DotNetType.Equals(GetType(Timespan))
         return "timespan"
      Case DotNetType Is GetType(DAteTime)
         return "datetime"
      Case DotNetType Is GetType(Decimal), _
				DotNetType Is GetType(Integer), _
					DotNetType Is GetType(Double), _
						DotNetType Is GetType(Single)
         return "number"
      Case DotNetType Is GetType(System.Drawing.Bitmap)
         return "image"
      Case DotNetType Is GetType(Byte())
         return "binary"
      Case DotNetType Is GetType(Boolean)
         return "flag"
      Case DotNetType Is GetType(System.Data.DataTable)
         return "collection"
      Case Else
         return "text"
   End Select
End Function


Private Function CloneDataRow(R As DataRow, ColumnCount As Integer) As Object()
	Dim RetVal(ColumnCount - 1) As Object
	For I As Integer = 0 to ColumnCount - 1
		RetVal(I) = R(I)
	Next

	Return RetVal
End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1d87c6c0-f260-46fc-99c2-ffcbf6ee0497" name="Sort Collection" type="SubSheetInfo"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative>Sorts a collection according to the specified field.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="785a8eca-82a6-43fe-9f16-1803844d88ce" name="Start" type="Start"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to sort." stage="Collection In" /><input type="text" name="Sort Field" narrative="The field to sort by." stage="Sort Field" /><input type="flag" name="Ascending Order" narrative="True to sort in ascending order." stage="Ascending Order" /></inputs><onsuccess>fbac0e5c-5410-45f1-98d7-646797398b04</onsuccess></stage><stage stageid="0c95c136-f8cf-49a1-98c0-a4c1e2334eca" name="End" type="End"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Sorted Collection" narrative="The sorted collection." stage="Collection Out" /><output type="flag" name="Success" narrative="True if sorting was successful." stage="Success" /><output type="text" name="Message" narrative="An error message when sorting failed." stage="Message" /></outputs></stage><stage stageid="e8e991cc-351b-4484-9825-b5c1f0d894d1" name="Collection Out" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fbac0e5c-5410-45f1-98d7-646797398b04" name="Sort Collection" type="Code"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Sort Field" expr="[Sort Field]" /><input type="flag" name="Ascending" expr="[Ascending Order]" /></inputs><outputs><output type="collection" name="Sorted Collection" stage="Collection Out" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0c95c136-f8cf-49a1-98c0-a4c1e2334eca</onsuccess><code><![CDATA[Try

 

            If Ascending Then

                        Collection.DefaultView.Sort = Sort_Field & " ASC"

            Else

                        Collection.DefaultView.Sort = Sort_Field & " DESC"

            End If

 

            Sorted_Collection = Collection.DefaultView.ToTable

 

            Success = True

            Message = ""

 

Catch e As Exception

            Success = False

            Message = e.Message

End Try]]></code></stage><stage stageid="6f6e54f2-77b8-4f24-ae2f-46a2143d9815" name="Ascending Order" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2fb49db2-332e-4bdb-a52e-53546b2a25e8" name="Message" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>210</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8170a296-23ef-4f36-88ea-12b93bc41486" name="Success" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>180</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d46e7f41-9e7a-4a0a-b1be-d440d57e4020" name="Sort Field" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adfd612b-98f8-4902-8526-2bda2e03f814" name="Get Collection Fields" type="SubSheetInfo"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative>Creates a collection with a Name and Datatype field which is then populated using the incoming collections field names and data types.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73b6f098-584e-441e-8b2d-e231b971bdb2" name="Start" type="Start"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="A new collection will be created containing the collections field data." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to get the fields from." stage="Input Collection" /></inputs><onsuccess>39b91b36-f03d-4fa7-9bf2-47470e1d9703</onsuccess></stage><stage stageid="e2308e18-4f98-4f62-9ff6-a4c52222c3aa" name="End" type="End"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Fields" narrative="A collection containing the fields." stage="Fields" /></outputs></stage><stage stageid="39b91b36-f03d-4fa7-9bf2-47470e1d9703" name="Get Collection Fields" type="Code"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Fields" stage="Fields" /></outputs><onsuccess>e2308e18-4f98-4f62-9ff6-a4c52222c3aa</onsuccess><code><![CDATA[Fields = New DataTable()
Fields.Columns.Add("Field Name", GetType(String))
Fields.Columns.Add("Data Type", GetType(String))

For Each Column As DataColumn In Input_Collection.Columns
   Dim DataType As String = GetBluePrismDataType(Column.DataType)
   Fields.Rows.Add(New Object() {Column.ColumnName, DataType})
Next
]]></code></stage><stage stageid="a16b1987-a205-4bf6-8a33-ed2167c201ff" name="Fields" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative></narrative><displayx>135</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="15198914-f283-4549-a823-c7b71d71d160" name="Utility Functions Test" type="SubSheetInfo"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6b30836d-2593-48c6-a021-b6b3e92ad88a" name="Start" type="Start"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5830837-58db-473d-b7dc-4651a10f79c6</onsuccess></stage><stage stageid="5a5bf1e7-2072-4226-96ba-ab3d0a656589" name="End" type="End"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5830837-58db-473d-b7dc-4651a10f79c6" name="Get Collection Fields" type="SubSheet"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Defined Collection 1]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Collection Fields" /></outputs><onsuccess>5a5bf1e7-2072-4226-96ba-ab3d0a656589</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="d402363f-8a48-4418-b0d9-2bef5037bc67" name="Input Collection" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e8e6edcb-f2fe-4582-9037-5ddb4ca15572" name="Collection Fields" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="980dd5f0-a047-4672-9a7a-18632a5826a0" name="Defined Collection 1" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><narrative></narrative><displayx>-150</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="My Text Field" type="text" /><field name="My Number Field" type="number" /><field name="My DateTime Field" type="datetime" /><field name="My TimeSpan Field" type="timespan" /><field name="My Flag Field" type="flag" /><field name="My Image Field" type="image" /></collectioninfo><initialvalue><row><field name="My Text Field" type="text" value="Test Text" /><field name="My Number Field" type="number" value="5" /><field name="My DateTime Field" type="datetime" value="2009-07-23 01:46:26Z" /><field name="My TimeSpan Field" type="timespan" value="0.00:03:42" /><field name="My Flag Field" type="flag" value="True" /><field name="My Image Field" type="image" value="" /></row><row><field name="My Text Field" type="text" value="asdf" /><field name="My Number Field" type="number" value="10" /><field name="My DateTime Field" type="datetime" value="" /><field name="My TimeSpan Field" type="timespan" value="0.00:00:00" /><field name="My Flag Field" type="flag" value="False" /><field name="My Image Field" type="image" value="" /></row></initialvalue></stage><stage stageid="0e6f80ff-bfb9-4d47-8e5a-5299a5873467" name="Read Collection Field" type="SubSheetInfo"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative>Reads a field with a given name and at the specified row from the collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d660720-4bed-4ea8-8ad6-56fa0b19cfb4" name="Start" type="Start"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection to read." stage="Collection" /><input type="text" name="Field Name" narrative="The field within the collection to read." stage="Field Name" /></inputs><onsuccess>c4bf6e49-1d07-4d60-8b44-fd35a2009654</onsuccess></stage><stage stageid="2a6d86a8-8937-4d4b-9da4-32813d06a0bf" name="End" type="End"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Value Read" /></outputs></stage><stage stageid="d43ae257-4559-4fa8-9b0b-1f49bd80a301" name="Row Index" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd207bc4-8fe0-4f01-94e6-b289cdb60e38" name="Collection" type="Collection"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="745ce225-df49-4b02-b12c-e9e2068ca6aa" name="Field Name" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4bf6e49-1d07-4d60-8b44-fd35a2009654" name="Read Field" type="Code"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /></inputs><outputs><output type="text" name="Value Read" stage="Value Read" /></outputs><onsuccess>2a6d86a8-8937-4d4b-9da4-32813d06a0bf</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Value_Read = GetStringValue(Coll.Rows(RowIndex), FieldName)]]></code></stage><stage stageid="43376e9f-73fa-4757-affa-330da5d1e6b1" name="Value Read" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative></narrative><displayx>105</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1c02ab-bf62-48df-b0de-79c4f254d5df" name="Set Collection Field" type="SubSheetInfo"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative>Updates a single value in a collection by the given field name and row index.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4fe6d4f3-e989-4636-b373-9a32fc41d450" name="Start" type="Start"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The index of the row in which to set the value. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection in which to set the value." stage="Collection" /><input type="text" name="Field Name" narrative="The name of the field in which to set the value" stage="Field Name" /><input type="text" name="New Value" narrative="The value as text to set." stage="New Value" /></inputs><onsuccess>c7b9c9ed-85d9-4449-a150-5182797dc6f3</onsuccess></stage><stage stageid="2be33601-0c29-45c7-bc7e-1a5a8d1c19b2" name="End" type="End"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Updated Collection" narrative="The collection which now has the value set." stage="Updated Collection" /></outputs></stage><stage stageid="e2d67695-6463-4e93-b5cd-e3b9805bb0cf" name="Row Index" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative></narrative><displayx>195</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26046a1c-efef-4b6b-baa7-1880ae887576" name="Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative></narrative><displayx>330</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9459f512-1cb5-4884-b551-4dcace90d77f" name="Field Name" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7b9c9ed-85d9-4449-a150-5182797dc6f3" name="Set Field" type="Code"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /><input type="text" name="New Value" expr="[New Value]" /></inputs><outputs><output type="collection" name="Updated Collection" stage="Updated Collection" /></outputs><onsuccess>2be33601-0c29-45c7-bc7e-1a5a8d1c19b2</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Coll.Rows(RowIndex)(FieldName) = New_Value

Updated_Collection = Coll]]></code></stage><stage stageid="2c198fde-25d6-4009-a434-256fd08044b1" name="New Value" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative></narrative><displayx>390</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532e300d-c8f5-4049-9b1e-490a9a85884c" name="Updated Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative></narrative><displayx>195</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6164801d-51c0-428e-976d-23828f70767d" name="Collection Contains Field" type="SubSheetInfo"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative>Tests a collection to see whether it contains a specific field.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ed16edd-07a7-459b-abc4-c29fc16117eb" name="Start" type="Start"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="Whether the collection contains the field will have been determined." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to see if the collection has." stage="Field" /></inputs><onsuccess>a76de6a5-ad0f-42b0-8cea-1cc827be1d45</onsuccess></stage><stage stageid="15854162-6197-477a-873b-73c9b453d0d3" name="End" type="End"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if the collection contains the field." stage="Success" /><output type="text" name="Error Message" narrative="Unused" stage="Error Message" /></outputs></stage><stage stageid="a76de6a5-ad0f-42b0-8cea-1cc827be1d45" name="Get Collection Fields" type="SubSheet"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>73ed00ea-d816-4343-8fe2-09924b85491f</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="09779833-6862-44cb-a355-04cb35350208" name="Input Collection" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-120</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1343f537-262d-4113-8953-31173a54fdf9" name="Field" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative></narrative><displayx>285</displayx><displayy>-120</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ed00ea-d816-4343-8fe2-09924b85491f" name="Loop Start Collection Fields" type="LoopStart"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11a28026-8164-4066-97bb-6f7cc6a3f6de</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="c2b21dab-e784-43a7-b09a-19e8bf2d5672" name="Loop End Collection Fields" type="LoopEnd"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid></stage><stage stageid="04208d31-4ee8-45a6-af69-2dd8140cc92a" name="Field Names" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-45</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d010b7fb-5d33-4636-bea8-2195b0f22738" name="Success" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative></narrative><displayx>135</displayx><displayy>240</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ac2d5cc5-ddee-4785-bf6a-410b0e478722" name="Error Message" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative></narrative><displayx>240</displayx><displayy>240</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11a28026-8164-4066-97bb-6f7cc6a3f6de" name="Match?" type="Decision"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>95c39a4f-2e55-45cb-a622-5cdec6b2d75b</ontrue><onfalse>c2b21dab-e784-43a7-b09a-19e8bf2d5672</onfalse></stage><stage stageid="6bd78de4-b21e-4741-af66-a88c72496d0f" name="anchor2" type="Anchor"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>-120</displayx><displayy>240</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess></stage><stage stageid="95c39a4f-2e55-45cb-a622-5cdec6b2d75b" name="Set Success" type="Calculation"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><narrative></narrative><displayx>-120</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6bd78de4-b21e-4741-af66-a88c72496d0f</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="e6748536-1050-482b-86e6-cd57cce3bc6d" name="Copy Rows" type="SubSheetInfo"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative>Copies the rows of the given collection into a new collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46e0886c-ea0a-4778-ad1e-9b7878e04a43" name="Append Rows to Collection" type="SubSheetInfo"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative>Combines two collections into one, provided they share the same set of fields</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3ec306e-f0c9-4bbc-a4da-a38b21969f5c" name="Reverse Collection" type="SubSheetInfo"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative>Reverses the order of the rows in the collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="98b20289-3b73-4776-9912-d679291e392e" name="Reverse Collection" type="Code"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CollectionIn" expr="[Collection In]" /></inputs><outputs><output type="collection" name="CollectionOut" stage="Collection Out" /></outputs><onsuccess>661b2b7b-7862-4db1-b71c-747437b534da</onsuccess><code><![CDATA[If CollectionIn.Columns.Count = 0 Then Throw new ApplicationException("Zero columns in collection")

CollectionOut = CollectionIn.Clone()

For I As integer = CollectionIn.Rows.Count - 1 To 0 Step -1
	Dim Objs(CollectionIn.Columns.Count - 1) As Object
	For J As integer = 0 to CollectionIn.Columns.Count - 1
		Objs(J) = collectionIn.Rows(I)(J)
	Next
	CollectionOut.Rows.Add(Objs)
Next]]></code></stage><stage stageid="48fd9b49-12a4-490d-8741-7cb0e6de6ac2" name="Collection In" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative></narrative><displayx>135</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="CIS" type="number" value="1" /><field name="Sort Code" type="text" value="123456" /><field name="Account Number" type="text" value="12345678" /><field name="Balance" type="number" value="1" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="3" /><field name="Sort Code" type="text" value="223456" /><field name="Account Number" type="text" value="22345678" /><field name="Balance" type="number" value="2" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="2" /><field name="Sort Code" type="text" value="323456" /><field name="Account Number" type="text" value="32345678" /><field name="Balance" type="number" value="3" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="5" /><field name="Sort Code" type="text" value="423456" /><field name="Account Number" type="text" value="42345678" /><field name="Balance" type="number" value="4" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="6" /><field name="Sort Code" type="text" value="523456" /><field name="Account Number" type="text" value="52345678" /><field name="Balance" type="number" value="5" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="4" /><field name="Sort Code" type="text" value="623456" /><field name="Account Number" type="text" value="62345678" /><field name="Balance" type="number" value="6" /><field name="Cancelled Items" type="text" value="" /></row></initialvalue></stage><stage stageid="862d18c4-1bd0-4542-b3e2-8baf8a977af8" name="Start" type="Start"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to be reversed." stage="Collection In" /></inputs><onsuccess>98b20289-3b73-4776-9912-d679291e392e</onsuccess></stage><stage stageid="661b2b7b-7862-4db1-b71c-747437b534da" name="End" type="End"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Reversed Collection" narrative="The reversed collection." stage="Collection Out" /></outputs></stage><stage stageid="1965b145-70ec-4ee0-a936-3c32f57e587e" name="Collection Out" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca7dbfca-b97f-43d4-9601-6fa4d4eacc4b" name="Rename Collection Fields" type="SubSheetInfo"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative>Renames the fields of a collection based on the fields of a given name mapping collection.</narrative><displayx>-60</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be8b9084-5d06-424d-8086-89d565e39887" name="Start" type="Start"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The main collection, whose headers are to be modified" stage="Main Collection" /><input type="collection" name="New Headers" narrative="A collection of new headers. This must be a one-row collection matching the fields of the first. The first row will contain the new field names under the corresponding field names" stage="New Headers" /></inputs><onsuccess>2dfc16b3-737a-4ff7-9843-9e66c78b23d4</onsuccess></stage><stage stageid="7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77" name="End" type="End"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="5c64c0b3-6819-410a-be71-587501d42504" name="New Headers" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative></narrative><displayx>375</displayx><displayy>-90</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="Name" /><field name="Column 2" type="text" value="Age" /></row></initialvalue></stage><stage stageid="2dfc16b3-737a-4ff7-9843-9e66c78b23d4" name="Rename Headers" type="Code"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="New Headers" expr="[New Headers]" /></inputs><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77</onsuccess><code><![CDATA[If Main_Collection IsNot Nothing AndAlso New_Headers IsNot Nothing Then
	If Main_Collection.Columns.Count = New_Headers.Columns.count Then
		For Each Col1 As DataColumn In Main_Collection.Columns
			If Not New_Headers.Columns.Contains(Col1.ColumnName) Then
				Success = False
				Error_Message = "New Headers collection does not contain the field '" & Col1.ColumnName & "' found in the Main Collection"
				Exit Sub
			End If
		Next

		'We can now assume that fields match
		'and start copying rows
		For Each C As DataColumn In Main_Collection.Columns
			Dim NewName As String = Cstr(New_Headers.Rows(0)(C.ColumnName))
			If String.IsNullOrEmpty(NewName) Then
				Throw New ApplicationException("Blank field names are not acceptable")
			Else
				C.ColumnName = Trim(NewName)
			End If
		Next

		Main_Collection.AcceptChanges()
		Amended_Collection = Main_Collection
		Success = True
	Else
		Success = False
		Error_Message = "Collection field definitions do not match - the number of columns in each is different."
	End If
Else
	Success = False
	Error_Message = "Neither Collection may be null"
End If]]></code></stage><stage stageid="73981b01-1a93-4c6e-a35f-fa6c194f63ec" name="Success" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative></narrative><displayx>240</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73dcc958-035e-40f7-ab25-a8f22d06bf4f" name="Error Message" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative></narrative><displayx>180</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0af7f983-37fd-47c4-971a-5c0ca70b60c4" name="Main Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-90</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="asdf" /><field name="Column 2" type="text" value="34" /></row></initialvalue></stage><stage stageid="e86fffbd-3537-4ed9-9e32-20c8f55b6cb6" name="Amended Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative></narrative><displayx>360</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6aa002-ceed-4ea9-ab37-e3cc338e349c" name="Collection Contains Value" type="SubSheetInfo"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative>Searches for the existence of a value or a regular expression in a specified column in a collection. This will return true and, if a regular expression was provided, the groups defined in that regex for the first matched value it finds in the collection.</narrative><displayx>-255</displayx><displayy>-105</displayy><displaywidth>270</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="29ece439-17ef-4972-aa97-b373f2d68616" name="Start" type="Start"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><displayx>-30</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>aa1a4d89-5218-4bbe-a743-0d3484968cb6</onsuccess></stage><stage stageid="ebc6a036-6449-4acd-ac3c-bf1c0cdb652a" name="End" type="End"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /></outputs></stage><stage stageid="63287049-53dd-4e10-b6fa-809c255a8f63" name="Collection" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14def48d-230f-4041-99c7-0af7c0dd5e0f" name="Column Name" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="965f0a82-f3be-4fcf-b43d-33b5a31b45d1" name="Exact Value" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>60</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2df8ab8-a7dc-408c-962c-efe2dd44d403" name="Regex" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative></narrative><displayx>-330</displayx><displayy>90</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c87975d-a017-4b35-923d-19816f41b5b3" name="Contains Search Term" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f7c0f14b-16b5-4e13-b3e9-71fd7bf59990" name="Groups" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="ca62b1b4-f73d-422a-b21a-ac4cfcc71041" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Inputs</narrative><displayx>-330</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="86ee4f07-c603-44e1-b307-e53cd7d9eff4" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Outputs</narrative><displayx>-180</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a408f364-ecb4-4548-9556-57f4a26f3ada" name="Both Search Strings Empty?" type="Decision"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>612f50dc-0fcc-4765-800b-e65e5bf3861f</ontrue><onfalse>7cdc88ed-891c-4f88-a51d-2da37bd56d4d</onfalse></stage><stage stageid="aa1a4d89-5218-4bbe-a743-0d3484968cb6" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>-75</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a408f364-ecb4-4548-9556-57f4a26f3ada</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="612f50dc-0fcc-4765-800b-e65e5bf3861f" name="anchor3" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>-30</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7e121ceb-3f72-4655-8e21-38d3e5be7cec</onsuccess></stage><stage stageid="7e121ceb-3f72-4655-8e21-38d3e5be7cec" name="anchor4" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>90</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess></stage><stage stageid="7cdc88ed-891c-4f88-a51d-2da37bd56d4d" name="Search Collection" type="Code"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /></outputs><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("Group", GetType(String))

For Each row as DataRow in coll.Rows

  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 1 to m.Groups.Count-1
      groups.Rows.Add(New Object() {m.Groups(i).Value})
    Next
    Return
  End If

Next]]></code></stage><stage stageid="365e481a-8567-48cf-babf-40039e151df7" name="Delete Column" type="SubSheetInfo"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative>Deletes a field from a collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4421e0d9-6181-4872-aa85-8ad310427d30" name="Start" type="Start"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want to delete a column from" stage="Input Collection" /><input type="text" name="Column Name" narrative="The column number to delete" stage="Column Name" /></inputs><onsuccess>000581d7-9978-4295-826f-a20472874878</onsuccess></stage><stage stageid="d0f8de6d-03ac-4a92-8658-0998d1849bdf" name="End" type="End"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="A collection with a column removed" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Message" /></outputs></stage><stage stageid="000581d7-9978-4295-826f-a20472874878" name="Remove Column" type="Code"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="BP Collection In" expr="[Input Collection]" /><input type="text" name="Column Name" expr="[Column Name]" /></inputs><outputs><output type="collection" name="BP Collection Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d0f8de6d-03ac-4a92-8658-0998d1849bdf</onsuccess><code><![CDATA[BP_Collection_Out = BP_Collection_In
BP_Collection_Out.Columns.Remove(Column_Name)
]]></code></stage><stage stageid="140b41b2-3138-4b5d-b5f3-4bddff6db48f" name="Input Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1ae60809-2da8-468d-8d88-e605b185530b" name="Output Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative></narrative><displayx>120</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="787dae64-5d33-4783-84ff-db2365c12e31" name="Message" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3216578-e35c-4bf0-84db-80b9d3fe07e3" name="Success" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="714ec185-fd95-4265-88e6-54eb452242b3" name="Column Name" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25782854-2b5d-4f7d-a1f4-671555060370" name="Remove Null Rows" type="SubSheetInfo"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative>Deletes rows in which a given key field is blank.</narrative><displayx>-180</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7b68a8ca-8280-464d-acac-807f219d226e" name="Set Column Names From First Row" type="SubSheetInfo"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative>If you have a collection with the column names all in the first row, this will set the column names to the values in that row and then detete the first row.
Handy for collections read using Get Table</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>270</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="966db302-1751-4a8a-bbbf-cbfc8ff28563" name="Start" type="Start"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>5732b352-4376-4727-b423-13df1e00f900</onsuccess></stage><stage stageid="80cc4a73-fa55-4504-bf38-941a29fd4499" name="End" type="End"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The amended collection" stage="Output Collection" /></outputs></stage><stage stageid="5732b352-4376-4727-b423-13df1e00f900" name="Set Column Name" type="Code"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>1129bf72-f0d4-4c3a-8823-68de39f5138b</onsuccess><code><![CDATA[
'Input_Collection.Columns(3).ColumnName="NewColumnName"
'Output_Collection = Input_Collection

Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   iThisColumn +=1
   Column.ColumnName=CStr(Input_Collection.Rows.Item(0).Item(iThisColumn))
Next
Output_Collection = Input_Collection

'If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
'	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
'End If

'If Not Coll.Columns.Contains(FieldName) Then
'   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
'End If

'Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="83beff52-ce08-4f4c-acdd-39a43fce3528" name="Input Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0735b980-7ff2-49c5-a67b-41a6444db630" name="Output Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative></narrative><displayx>120</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="299628df-bec6-4f77-8b4a-c6bc38824e1c" name="Remove First Row" type="Action"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative>First row was actually the header row, can now be deleted</narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="1129bf72-f0d4-4c3a-8823-68de39f5138b" name="Output Collection" type="LoopStart"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>299628df-bec6-4f77-8b4a-c6bc38824e1c</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid><looptype>ForEach</looptype><loopdata>Output Collection</loopdata></stage><stage stageid="35a49bfb-e611-4681-b332-cadbcfa74fc3" name="Output Collection" type="LoopEnd"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0febcf9-b538-4995-85c1-02dddff5fb51</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid></stage><stage stageid="d0febcf9-b538-4995-85c1-02dddff5fb51" name="anchor1" type="Anchor"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>120</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess></stage><stage stageid="7b3c5ed5-f585-4240-a2ab-8cb996684c24" name="Set Column Names From Expected Collection" type="SubSheetInfo"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative>Renames the fields of a collection to those of a collection containing expected field names.</narrative><displayx>-180</displayx><displayy>-210</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf" name="End" type="End"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="130f8b77-3ec8-46c9-8826-e401399e4c92" name="Rename Column" type="Code"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="collection" name="Expected Fields/Columns" expr="[Expected Fields/Columns]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf</onsuccess><code><![CDATA[Dim iTotalColumns as integer = Expected_Fields_Columns.Rows.Count-1
Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   If iThisColumn>=iTotalColumns Then Exit For
   iThisColumn +=1 
   Column.ColumnName=CStr(Expected_Fields_Columns.Rows.Item(iThisColumn).Item(0))
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="9e32e67d-d7f9-46b2-8df2-6fca9a395352" name="Input Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-75</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c66d8d30-cef9-4cab-8ee8-2acb512a3129" name="Start" type="Start"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /><input type="collection" name="Expected Fields/Columns" narrative="The expected column names" stage="Expected Fields/Columns" /></inputs><onsuccess>130f8b77-3ec8-46c9-8826-e401399e4c92</onsuccess></stage><stage stageid="c865f7af-a9f9-4fb9-88da-e04e43b0bac8" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Inputs</narrative><displayx>-180</displayx><displayy>-120</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c29dd25d-3cf7-4435-ba56-6f735329a71a" name="Output Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="235be3b3-8a37-4bac-b740-50cfcd6da05f" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Outputs</narrative><displayx>-180</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="688d2271-65ed-4be7-84b1-cbfe018c6777" name="Expected Fields/Columns" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="df1f7e11-20da-4f67-a68c-bc7c03be861a" name="Fill Blanks" type="SubSheetInfo"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7908b17c-920d-4114-9fa0-cd4f161c5185" name="Start" type="Start"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" narrative="A collection with blank text fields" stage="Blanks" /></inputs><onsuccess>06913dc6-a17f-4d64-965d-7cb7642f486f</onsuccess></stage><stage stageid="544cc959-75ad-4b6c-a150-ce414ae50424" name="End" type="End"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="No Blanks" narrative="The collection with empty string instead of blanks" stage="No Blanks" /></outputs></stage><stage stageid="34873761-d9a4-4a71-9c63-993645ca4e22" name="Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5cfec416-7db4-4734-9a1f-76d62db9bbd9" name="No Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="06913dc6-a17f-4d64-965d-7cb7642f486f" name="Fill Blanks" type="Code"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" expr="[Blanks]" /></inputs><outputs><output type="collection" name="No Blanks" stage="No Blanks" /></outputs><onsuccess>544cc959-75ad-4b6c-a150-ce414ae50424</onsuccess><code><![CDATA[try
  for each dr as datarow in blanks.rows
    for each c as datacolumn in blanks.columns
      if isdbnull(dr(c.columnname)) then
        dr(c.columnname) = ""
      end if
    next
  next
  no_blanks = blanks
catch e as exception

end try]]></code></stage><stage stageid="c491f60e-4aa7-4abb-a203-5a78c0b64469" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="c8499a69-da78-40b1-9e30-3b2b66b78a63" name="Start" type="Start"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The rows with blank keys will have been deleted." /><condition narrative="" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want null rows to be removed" stage="Input Collection" /><input type="text" name="Key Field" narrative="The key field to check, if blank the row will be deleted" stage="Key Field" /></inputs><onsuccess>85077240-20a2-46ad-81ba-a1eca720ae81</onsuccess></stage><stage stageid="e14452d8-589d-478a-ab1b-309897b8560b" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="13091eb3-458e-46d2-a20e-59eb5eb5d748" name="Input Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ab2855e-0511-49ff-ac26-c731dbf8c432" name="Output Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative></narrative><displayx>120</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cab44f8f-583a-4529-911c-392030a2dee3" name="Message" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1203642-ce03-48bd-ba00-aad2a0dcde1e" name="Success" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1478eda2-b43b-4609-aef4-ff3ad3c2a708" name="Key Field" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85077240-20a2-46ad-81ba-a1eca720ae81" name="Remove Null rows from collection" type="Code"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative>can't loop through the core customer details table collection as some of the rows are NULL.</narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CCD Table In" expr="[Input Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="CCD Table Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2e050fc0-fed0-49b4-bafc-a33a0aee5ad9</onsuccess><code><![CDATA[Try
	For Each row As DataRow in CCD_Table_In.Select( _
	 String.Format("[{0}] is null or trim([{0}]) = ''", Key_Field))
		row.Delete()
	Next

	CCD_Table_Out = CCD_Table_In
	Success = True

Catch ex as Exception
	Error_Message = ex.ToString()
	Success = False

End Try

]]></code></stage><stage stageid="9e92c3e9-666f-47a3-b5a4-712191368127" name="Remove dots from headers" type="SubSheetInfo"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative>Collections with dots in the field names cannot be properly indexed so this functinon renames the headers so that the fields contain no dots.</narrative><displayx>-165</displayx><displayy>-195</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e9143b5-5aa7-475d-a944-466bfbc2c71d" name="Rename Column1" type="Code"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ce865562-7be4-4739-95c5-3b5e05d7901f</onsuccess><code><![CDATA[For Each Column As DataColumn In Input_Collection.Columns
   Column.ColumnName=Microsoft.Visualbasic.Replace(Column.ColumnName,".","")
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="ce865562-7be4-4739-95c5-3b5e05d7901f" name="End" type="End"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="c2200054-2838-45a0-a8b2-c1da235391b0" name="Input Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-75</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c865c672-39f2-4b5d-b96c-f44c5f3b9a89" name="Start" type="Start"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have fields with no dots." /></postconditions><narrative></narrative><displayx>0</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>9e9143b5-5aa7-475d-a944-466bfbc2c71d</onsuccess></stage><stage stageid="02864eb4-432c-4b37-9199-c28dd7fe654b" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Inputs</narrative><displayx>-195</displayx><displayy>-120</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99cb4759-fd39-4084-a262-e2ac589fdc28" name="Output Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1388967-ebc6-462c-bad7-66359084fab0" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Outputs</narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4e265aee-0021-418d-8655-61d995e170a0" name="Append Field (Text)" type="SubSheetInfo"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative>Appends a field to a collection and allows you to provide a default value as text fot the field.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c8bd0a3b-3343-43fd-bef7-1414593f62b6" name="Field Name" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddaf3d76-462d-41ac-8cdd-92050ea01b79" name="Append Text" type="Code"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>072e40e3-3858-4528-aa1b-7b4cfb7861f9</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.String"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="7c2f4495-6f2c-4dc5-845c-58f3036c5ec9" name="Collection Out" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8493982d-24c5-4d6b-96c0-060ed614f8c3" name="Collection In" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6542d3cd-7831-4ebb-93dc-09b64ff85bbf" name="Value" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c1475ad-07b2-4993-abb1-4060046ce8eb" name="Start" type="Start"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have a new field appended to it." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>ddaf3d76-462d-41ac-8cdd-92050ea01b79</onsuccess></stage><stage stageid="072e40e3-3858-4528-aa1b-7b4cfb7861f9" name="End" type="End"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="4c0d7072-e36c-465b-89f0-fbe7e21e95fb" name="Append Field (Number)" type="SubSheetInfo"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative>Appends a field to a collection and allows you to provide a default number value for the field.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="433e0a45-d9b6-48e5-b62f-67815cc1461a" name="Start" type="Start"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><narrative></narrative><displayx>30</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>560df05e-a20c-4c85-addb-accc35d19f0e</onsuccess></stage><stage stageid="5dc78a95-36a2-4324-a366-ccd5f941ea7b" name="End" type="End"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="560df05e-a20c-4c85-addb-accc35d19f0e" name="Append Number" type="Code"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="number" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>5dc78a95-36a2-4324-a366-ccd5f941ea7b</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.Decimal"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="a8f65fc6-9524-4ba5-ab7c-4bf16b825bb8" name="Collection Out" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1265e994-416c-4b2d-ab0c-c81e1288f072" name="Field Name" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ac81567-c224-4270-a0ef-e57562e06fb5" name="Collection In" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9a670a2-2e34-4e79-a184-369ddc70c75e" name="Value" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979fe4e-6f4d-4683-8d7f-bb932ec88a2e" name="Rename Field" type="SubSheetInfo"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative>Renames a field within a collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5030c234-e021-4ff1-b9ea-751e186a63a8" name="Start" type="Start"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will be renamed." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to rename a field in." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the existing field to rename." stage="Field Name" /><input type="text" name="New Name" narrative="The new name for the field." stage="New Name" /></inputs><onsuccess>278ed0f4-d7d0-4ca7-908e-55569a965852</onsuccess></stage><stage stageid="404be5b2-7ad7-429a-9e8b-b6a561112f47" name="End" type="End"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with field renamed." stage="Collection Out" /></outputs></stage><stage stageid="67c49160-5821-48b0-82fd-371ecbaea386" name="Collection In" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f0ef8f48-7f60-47fc-89b2-3aa04ef39792" name="Field Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c1db25c-d091-4900-8b9e-529d60df0f8f" name="Collection Out" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="278ed0f4-d7d0-4ca7-908e-55569a965852" name="Rename" type="Code"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /><input type="text" name="New Name" expr="[New Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>404be5b2-7ad7-429a-9e8b-b6a561112f47</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		c.ColumnName = New_Name
		Exit For
	End If
Next
]]></code></stage><stage stageid="b2e64d6d-9ac8-43b9-aeed-e58e65d8067c" name="New Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c935b0c8-a0cb-4251-9e63-af4ed27f9a91" name="Delete Field" type="SubSheetInfo"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative>Deletes a field from a collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7662efd-3d51-4d9a-adbc-1a2e626613e5" name="Start" type="Start"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><narrative></narrative><displayx>30</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to delete the field from." stage="Collection In" /><input type="text" name="Field Name" narrative="The field to delete." stage="Field Name" /></inputs><onsuccess>b52dad46-ca6d-4860-82c7-f1d9320f66bc</onsuccess></stage><stage stageid="4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b" name="End" type="End"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the field removed." stage="Collection Out" /></outputs></stage><stage stageid="4eb487df-f7e9-4146-a35f-e5e7c6461d01" name="Collection In" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="719f7d25-ec64-43bd-9466-c822213aa069" name="Field Name" type="Data"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b32e1ce-deb0-4107-ac7c-c4af81ceedaf" name="Collection Out" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b52dad46-ca6d-4860-82c7-f1d9320f66bc" name="Delete Column1" type="Code"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		Collection_Out.Columns.Remove(c)
		Exit For
	End If
Next
]]></code></stage><stage stageid="63e447be-76ae-4566-a7e9-ead3373b7fe6" name="Merge Collection" type="SubSheetInfo"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative>Merges two collections with different structures (and where the field names across both collections are unique) and forms a single collection with a combination  of the two structures and associated data values.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d427bb44-b573-475a-aa7d-176f2803e033" name="Start" type="Start"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><preconditions><condition narrative="The merge will fail if both collections contain any field names which are identical." /></preconditions><postconditions><condition narrative="The collections will have been merged." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" narrative="The first collection to be merged." stage="Collection 1" /><input type="collection" name="Collection 2" narrative="The second collection to be merged." stage="Collection 2" /></inputs><onsuccess>6459a0e3-6f86-4efa-8b87-a9eb0b9a8460</onsuccess></stage><stage stageid="570e4b26-4aa8-48ac-b435-1ca8fe10f2cd" name="End" type="End"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 3" narrative="The resulting merged collection." stage="Collection 3" /></outputs></stage><stage stageid="6459a0e3-6f86-4efa-8b87-a9eb0b9a8460" name="Merge" type="Code"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2" expr="[Collection 2]" /></inputs><outputs><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>570e4b26-4aa8-48ac-b435-1ca8fe10f2cd</onsuccess><code><![CDATA[
For Each c As DataColumn in c2.Columns
	c1.Columns.Add(CloneColumn(c))
Next

For r As Integer = 0 To c1.Rows.Count - 1
	If r < c2.Rows.Count Then
		For Each c As DataColumn in c2.Columns
			c1.Rows(r)(c.ColumnName) = c2.Rows(r)(c.ColumnName)
		Next
	Else
		Exit For
	End If
Next

c3 = c1]]></code></stage><stage stageid="c325b6be-e358-4eab-8e9b-0b74a98490f3" name="Collection 1" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61e7bd9a-18d4-475d-b131-95dc839d1518" name="Collection 2" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3ff4ed5f-abbc-4668-9ebb-816c8f0884db" name="Collection 3" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="741d8892-31ef-497b-a1ab-dca99ebd1f06" name="Split Collection" type="SubSheetInfo"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative>Splits a collection into two colllections containing the fields as defined by templates.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61860248-5b8d-41de-8e28-092ca8b989e5" name="Split" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c2 = c2t.Clone()

c3 = c3t.Clone()

Dim r2, r3 As DataRow
Dim bAdd2, bAdd3 As Boolean

For Each r1 As DataRow In c1.Rows

	r2 = c2.NewRow()
	r3 = c3.NewRow()
	bAdd2 = False
	bAdd3 = False

	For Each c As DataColumn In c1.Columns

		If c2.Columns.Contains(c.ColumnName) Then
			r2(c.ColumnName) = r1(c.ColumnName)
			bAdd2 = True
		End If
		If c3.Columns.Contains(c.ColumnName) Then
			r3(c.ColumnName) = r1(c.ColumnName)
			bAdd3 = True
		End If

	Next

	If bAdd2 Then
		c2.Rows.Add(r2)
	End If
	If bAdd3 Then
		c3.Rows.Add(r3)
	End If

Next]]></code></stage><stage stageid="d00a67c4-977f-49ab-ac41-225ebdb3ad8d" name="Collection 3 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e2ce96fd-e590-46fa-a95d-effcca153782" name="Start" type="Start"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><preconditions><condition narrative="None." /><condition narrative="" /></preconditions><postconditions><condition narrative="Collections will be split." /><condition narrative="" /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" stage="Collection 1" /><input type="collection" name="Collection 2 Template" stage="Collection 2 Template" /><input type="collection" name="Collection 3 Template" stage="Collection 3 Template" /></inputs><onsuccess>2c7d51f8-a340-4629-9d93-0526f6ed07cc</onsuccess></stage><stage stageid="e08e6b18-850a-427c-9eba-5065c9c619dd" name="End" type="End"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 2" stage="Collection 2" /><output type="collection" name="Collection 3" stage="Collection 3" /></outputs></stage><stage stageid="67449419-0f6c-463b-bf1a-2d94b16c5be3" name="Collection 2" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>285</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78bbd50d-b3cd-4066-80e3-d4cb236662b8" name="Collection 3" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>345</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c7d51f8-a340-4629-9d93-0526f6ed07cc" name="Count Template 2 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 2 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>2dbb3bb5-1526-4f1c-818d-aa4eb0acc677</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5a6c9426-a48f-4861-b7fe-b020ea824cc5" name="Row Count" type="Data"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2dbb3bb5-1526-4f1c-818d-aa4eb0acc677" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>17c0ae90-3784-40c5-816f-a0dfb4c97eab</ontrue><onfalse>6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5</onfalse></stage><stage stageid="17c0ae90-3784-40c5-816f-a0dfb4c97eab" name="Count Template 3 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 3 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>525e699d-df7d-4c61-b5fd-0ae540b94a94</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="525e699d-df7d-4c61-b5fd-0ae540b94a94" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>01cbd6ed-952e-4ae8-8420-496581701364</ontrue><onfalse>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onfalse></stage><stage stageid="74cfea1c-af9f-4c0b-86aa-ac76097c3940" name="Collection 1" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2af4b9c5-d3f3-4ecc-9a3a-4b52f1cee481" name="Collection 2 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7cd5499-3bd2-49c8-a5e0-2c190b350abe" name="System Exception" type="Exception"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative></narrative><displayx>105</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Template collection cannot be empty&quot;" /></stage><stage stageid="6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5" name="anchor1" type="Anchor"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>0</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onsuccess></stage><stage stageid="01cbd6ed-952e-4ae8-8420-496581701364" name="Count Data Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 1&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>69ae2e43-547a-4cef-abc9-a57284282b82</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="69ae2e43-547a-4cef-abc9-a57284282b82" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>61860248-5b8d-41de-8e28-092ca8b989e5</ontrue><onfalse>4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef</onfalse></stage><stage stageid="4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef" name="Assign Outputs" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c3 = c3t

c2 = c2t
]]></code></stage><stage stageid="8140b508-3840-4291-8122-7d9633f50e96" name="Collection In" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cc074354-584f-4eba-ab53-2f96462259a0" name="Filter Collection" type="SubSheetInfo"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative>Filters a collection using the given query.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ee491db-1747-4f76-a969-78ebc05942c3" name="Start" type="Start"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be filtered." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to filter." stage="Collection In" /><input type="text" name="Filter" narrative="The filter query." stage="Filter" /></inputs><onsuccess>0c063487-d7ee-42db-8059-92687b655e7d</onsuccess></stage><stage stageid="bda88544-a5a8-4bf6-9c9b-c645f76b7fed" name="End" type="End"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The filtered collection." stage="Collection Out" /></outputs></stage><stage stageid="0c063487-d7ee-42db-8059-92687b655e7d" name="Filter Collection1" type="Code"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Select Condition" expr="[Filter]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>bda88544-a5a8-4bf6-9c9b-c645f76b7fed</onsuccess><code><![CDATA[Dim NewRow As DataRow

Collection_Out = Collection_In.Clone

For Each parentRow As DataRow In Collection_In.Select(Select_Condition)
	NewRow = Collection_Out.NewRow
	For Each c As DataColumn In NewRow.Table.Columns
		NewRow(c.ColumnName) = parentRow(c.ColumnName)
	Next
	Collection_Out.Rows.Add(NewRow)
Next

NewRow = Nothing
Collection_In = Nothing]]></code></stage><stage stageid="ab9df972-dcc0-4384-ae57-8f0207f70978" name="Collection Out" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee8d1e79-1554-41d5-9dec-d9cb9153d483" name="Collection In" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7b601fa9-308d-4e40-8366-62ebe909f792" name="Filter" type="Data"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f60641e-4454-45d1-b678-62b0a6c6b784" name="Start" type="Start"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Start Row" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." stage="Number of Rows to Copy" /><input type="collection" name="Source Collection" narrative="The collection to copy." stage="Source Collection" /></inputs><onsuccess>25337bba-f357-42a8-bc61-876a9582d5d0</onsuccess></stage><stage stageid="002b5c58-ec2b-4e02-91e5-68fbeffe2b84" name="End" type="End"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Output Collection" /></outputs></stage><stage stageid="1cd8f0a3-e382-4ad5-8948-7f0dc5cd17cd" name="Start Row" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>60</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="abc78fcd-9654-47c6-9aa9-5cd8f505bd60" name="Number of Rows to Copy" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>135</displayx><displayy>-120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c3aa2821-e68a-4985-9fd7-e0330638a935" name="Source Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-120</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="25337bba-f357-42a8-bc61-876a9582d5d0" name="Copy Rows1" type="Code"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>-30</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Source Collection" expr="[Source Collection]" /><input type="number" name="Start Row" expr="[Start Row]" /><input type="number" name="Number of Rows to Copy" expr="[Number of Rows to Copy]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>ff821741-f1ec-47ff-bd26-00c56a44a6c7</onsuccess><code><![CDATA[Try
	If Start_Row < 0 Then
		Throw New ApplicationException("Start Row must be at least zero.")
	End If
	Dim LastIndex As Integer = Source_Collection.Rows.Count -1
	If Start_Row > LastIndex Then
		Throw New ApplicationException("Start Row must not point beyond the end of the collection.")
	End If
	If Start_Row + Number_of_Rows_to_Copy -1 > LastIndex Then
		Throw New ApplicationException("The number of requested rows extends beyond the end of the collection (based on a start row of " & Start_Row.ToString() & ").")
	End If

	'Set up the new collection with columns
	Output_Collection = Source_Collection.Clone()

	'copy the requested rows one by one
	For I As integer = Start_Row To Start_Row + Number_of_Rows_to_Copy - 1
		Dim Values(Source_Collection.Columns.Count - 1) As Object
		For J As Integer = 0 To Source_Collection.Columns.Count - 1
			Values(J) = Source_Collection.Rows(I)(J)
		Next
		Output_collection.Rows.Add(Values)
	Next	
	
	Success = True
Catch Ex As Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="33698fa1-b8d8-467c-bb0d-b8e838d42c69" name="Output Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>45</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4f882206-da67-4422-ac01-a53a5d765354" name="Success" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>60</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6551589d-b7f2-48b7-a867-b398647d0180" name="Error Message" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>120</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff821741-f1ec-47ff-bd26-00c56a44a6c7" name="Success?" type="Decision"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>002b5c58-ec2b-4e02-91e5-68fbeffe2b84</ontrue><onfalse>fd5c51f5-e900-44ce-a169-84565580d402</onfalse></stage><stage stageid="fd5c51f5-e900-44ce-a169-84565580d402" name="System Exception" type="Exception"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative></narrative><displayx>90</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="c6165073-bfc9-495f-98e5-62a224f52226" name="Start" type="Start"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections will be combined." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The collection to append to." stage="Main Collection" /><input type="collection" name="Collection to Append" narrative="The collection to append." stage="Collection to Append" /></inputs><onsuccess>77e19cde-e0fa-40aa-8bea-05c4743275c2</onsuccess></stage><stage stageid="5d1a3d8d-2e99-49b5-9863-6a866e2e03dd" name="End" type="End"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Combined Collection" narrative="The combined collection." stage="Combined Collection" /></outputs></stage><stage stageid="e3a95b76-e1ba-4bf1-92c1-653ae937120a" name="Main Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="320afdfe-675f-44a8-b563-5cf2cf3212d3" name="Collection to Append" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="77e19cde-e0fa-40aa-8bea-05c4743275c2" name="Combine Collections" type="Code"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Collection to Append" expr="[Collection to Append]" /></inputs><outputs><output type="collection" name="Combined Collection" stage="Combined Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>35415fae-0f6d-4f78-b7b9-b39a6e3095ff</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Collection_to_Append.Columns.Count Then
	Error_Message = "Field definitions do not match - the number of columns in each is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns

	If Not Collection_to_Append.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain '" & Col1.ColumnName & "'"
		Exit Sub
	End If

	If Collection_to_Append.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of '" & Col1.ColumnName & "' do not match."
		Exit Sub
	End If

Next

If Main_Collection.Columns.Count = 0 Then
	Combined_Collection = Collection_to_Append
Else
	'We can now assume that fields match and start copying rows
	For Each R As DataRow in Collection_to_Append.Rows
		Main_Collection.ImportRow(R)
	Next
	Combined_Collection = Main_Collection
End If

Success = True]]></code></stage><stage stageid="d0521477-9847-4a70-834b-9c1d315bd817" name="Combined Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative></narrative><displayx>-90</displayx><displayy>75</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="35415fae-0f6d-4f78-b7b9-b39a6e3095ff" name="Success?" type="Decision"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>5d1a3d8d-2e99-49b5-9863-6a866e2e03dd</ontrue><onfalse>e4269f55-7633-4d19-9ebf-299956a4a5ec</onfalse></stage><stage stageid="e4269f55-7633-4d19-9ebf-299956a4a5ec" name="System Exception" type="Exception"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative></narrative><displayx>120</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="7923c865-f484-411d-815a-24fe9832f941" name="Success" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="710fce6c-64f2-4e2d-8c89-9c2c41b9e9cb" name="Error Message" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative></narrative><displayx>150</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdd84939-c1c2-4ec3-9ec2-f19a6b55f056" name="Remove Empty Rows" type="SubSheetInfo"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative>Removes empty rows from a collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46ac86fc-42a2-49f4-a2be-86a452176e2b" name="Start" type="Start"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have empty rows removed." /></postconditions><narrative></narrative><displayx>-15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to remove empty rows from" stage="Collection In" /></inputs><onsuccess>6c450e6a-55ae-4382-a419-e4c6d59fc580</onsuccess></stage><stage stageid="0e663c5b-fb8a-4f15-999d-feb951956864" name="End" type="End"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the empty rows removed" stage="Collection Out" /></outputs></stage><stage stageid="613bed47-0c41-4155-93a3-5b31823f6048" name="Collection In" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative></narrative><displayx>60</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af6c216c-aac3-4b4e-b7cb-bbf0a7863c49" name="Collection Out" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative></narrative><displayx>60</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c450e6a-55ae-4382-a419-e4c6d59fc580" name="Remove empty rows" type="Code"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>0e663c5b-fb8a-4f15-999d-feb951956864</onsuccess><code><![CDATA[
Dim bRemove as Boolean
Dim iRow as integer
' Loop through each row
For iRow = Collection_In.Rows.Count - 1 to 0 step -1
'For each Row as DataRow in Collection_In.Rows
	bRemove=True
	' Loop through every column for this row
	For each Column as DataColumn in Collection_In.Columns
		if Trim(Collection_In.Rows(iRow)(Column.ColumnName).ToString()) & "" <> "" then
			bRemove=False
			exit for
		end if
	Next

	if bRemove=True then
		Collection_In.Rows.Remove(Collection_In.Rows(iRow))
	end if
Next

Collection_Out = Collection_In.Copy]]></code></stage><stage stageid="28f98de9-8408-4312-9e37-37197c2d8822" name="Transpose Collection" type="SubSheetInfo"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative>Creates a new collection with the fields Name and Value and for each row in the original collection creates an entry for each column.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26ce26e2-1a34-4a20-97d8-34ab15954720" name="Start" type="Start"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be transposed." /></postconditions><narrative></narrative><displayx>30</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to transpose." stage="Collection In" /></inputs><onsuccess>c3e45cac-9a76-4b70-a119-ffed9ceeaeac</onsuccess></stage><stage stageid="c9852e45-8999-4b73-a581-4a3f66b95b3a" name="End" type="End"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The transposed collection." stage="Collection Out" /></outputs></stage><stage stageid="c3e45cac-9a76-4b70-a119-ffed9ceeaeac" name="Transpose" type="Code"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>c9852e45-8999-4b73-a581-4a3f66b95b3a</onsuccess><code><![CDATA[
New_Collection = GetDataTable("Name,Value", "System.String,System.String")
Dim New_Row As System.Data.DataRow

For Each r As System.Data.DataRow In Collection.Rows
	For Each c As System.Data.DataColumn In Collection.Columns
		New_Row = New_Collection.NewRow()
		New_Row("Name") = c.ColumnName
		New_Row("Value") = GetStringValue(r, c.ColumnName)
		New_Collection.Rows.Add(New_Row)
	Next
Next
]]></code></stage><stage stageid="d2f68cb8-90cf-4414-8554-daf4fa4c9f29" name="Collection Out" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="99b09a03-6901-47ee-af4d-d43bfcf3bb42" name="Collection In" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="90d519f8-3075-478e-a49f-b681d1ddd033" name="Field Exists" type="SubSheetInfo"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative>Finds out whether the collection contatins a given field.</narrative><displayx>-135</displayx><displayy>-120</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8605b0b2-ff16-473b-ba5d-1956390f48bd" name="Start" type="Start"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><narrative></narrative><displayx>75</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to check for." stage="Field" /></inputs><onsuccess>da5abfb8-f52a-4a03-8f9f-ec5e42dd4566</onsuccess></stage><stage stageid="26b8ca01-8895-483f-93ef-66df5bbb0a34" name="End" type="End"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>255</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the collection contains the field." stage="Exists" /></outputs></stage><stage stageid="da5abfb8-f52a-4a03-8f9f-ec5e42dd4566" name="Get Collection Fields" type="SubSheet"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>470c6c27-3ed4-43b7-8c01-3fc7415ec55e</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="a910c0ad-5130-4073-8f3a-8cf76bc7d74e" name="Input Collection" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="66e1609e-c3e7-4e35-82df-90254a0d842f" name="Field" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>-30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470c6c27-3ed4-43b7-8c01-3fc7415ec55e" name="Field Names" type="LoopStart"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>45</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eb7af2be-1265-40b6-8ea7-89fdda2b0ab1</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f" name="Field Names" type="LoopEnd"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>195</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid></stage><stage stageid="15f784c0-4879-4a2e-ab6f-c44f5c384d85" name="Field Names" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="905724f1-237f-4641-9511-289841ec3498" name="Exists" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>255</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7af2be-1265-40b6-8ea7-89fdda2b0ab1" name="Match?" type="Decision"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>c4532590-c3c0-4014-98f4-bc3e1f30e5df</ontrue><onfalse>54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f</onfalse></stage><stage stageid="d656772f-8ec9-4848-8f30-a4bda4f01837" name="anchor2" type="Anchor"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>210</displayx><displayy>255</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess></stage><stage stageid="c4532590-c3c0-4014-98f4-bc3e1f30e5df" name="Exists" type="Calculation"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><narrative></narrative><displayx>210</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d656772f-8ec9-4848-8f30-a4bda4f01837</onsuccess><calculation expression="True" stage="Exists" /></stage><stage stageid="2e050fc0-fed0-49b4-bafc-a33a0aee5ad9" name="Success?" type="Decision"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c491f60e-4aa7-4abb-a203-5a78c0b64469</ontrue><onfalse>510a1b6e-59d7-40a0-8886-483ef66093e9</onfalse></stage><stage stageid="510a1b6e-59d7-40a0-8886-483ef66093e9" name="FAIL" type="Exception"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative></narrative><displayx>120</displayx><displayy>15</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="UtilityException" detail="&quot;Error occurred removing null rows: &quot; &amp; [Message]" /></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>66</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[
try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(Process_Name)
 exists = true
 exit sub
next

catch e as exception
end try

exists = false]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[try

if wildcard then
	title = title.replace("*", ".*")
	title = title.replace("?", "\w")
end if

exists = false
for each p as system.diagnostics.process in system.diagnostics.process.getprocesses()
	if wildcard then
		if system.text.regularexpressions.regex.ismatch(p.mainwindowtitle, title) then
			exists = true
			exit sub
		end if
	else
		if p.mainwindowtitle.tolower = title.tolower then
			exists = true
			exit sub
		end if
	end if
next

catch e as exception

end try
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>15</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cd594031-696a-419e-a6c2-36688addfb0f" name="Titles CSV" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>-30</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage></process></object>
        <object id="6efb1579-126a-4563-b2e9-3d9e432c1a79" name="Utility - HTTP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - HTTP" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Communicates with web services using the HTTP protocol." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>2ba17e26-49eb-43ed-84dd-c40e67e990b0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="925e0261-2b2e-41ed-b555-4c5ccf8a00fc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f3a55ad6-3bfa-4401-baa9-0e50afe42879" type="Normal" published="True"><name>Post</name><view><camerax>109</camerax><cameray>56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ecff5a78-99b1-4ecb-a356-a075c487ef71" type="Normal" published="True"><name>Post JSON</name><view><camerax>28</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d30e8f45-db72-40d2-9f17-9700006fe152" type="Normal" published="True"><name>HTTP Request</name><view><camerax>50</camerax><cameray>47</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="519a0dc7-b254-478b-b2ed-c7883124e31b" type="Normal" published="True"><name>Load Certificate</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="704436d5-f51b-4369-b763-a4fdc6e894c2" type="Normal" published="True"><name>URL Encode</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="bee831af-f964-4218-87f3-d3378e2eab10" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>071f13b7-de3d-4625-9498-9da634d452b4</onsuccess></stage><stage stageid="11e111be-101c-4df7-9d5c-910a10c02e2d" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9c4d6f4e-1d32-4d1f-a37d-f279b42fa480" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Web.dll</reference><reference>System.Xml.dll</reference><reference>System.Web.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Net.Http.dll</reference></references><imports><import>System</import><import>System.Net</import><import>System.Data</import><import>System.Security.Cryptography.X509Certificates</import><import>System.Collections.Generic</import><import>System.Web</import><import>System.Media</import><import>System.IO</import><import>System.Text</import><import>Newtonsoft.Json</import><import>System.Net.Http.Headers</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[Private m_Certificates As New Dictionary(Of String, X509Certificate2)

Private Function GetCertificate(ByVal subject As String) As X509Certificate2
	Dim store As New X509Store(StoreName.My, StoreLocation.LocalMachine)
	Try
		store.Open(OpenFlags.ReadOnly)
		Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindBySubjectName, subject, True)
		For Each cert As X509Certificate2 In certs
			Return cert
		Next
	Finally
		store.Close()
	End Try
	Return Nothing
End Function

Function ToDictionary(webResponse As HttpWebResponse ) As Dictionary(Of String, String)

	Dim dict = New Dictionary(Of String, String)()

	For index As Integer = 0 To webResponse.Headers.Count - 1

		If webResponse.Headers.Keys.Count -1 >= index Then

			dict.Add(webResponse.Headers.Keys(index), webResponse.Headers(index) )

		End if

	Next

	Return dict

End Function]]></code></stage><stage stageid="b48af877-43b3-4056-b8b4-88bac82a5c80" name="Clean Up" type="SubSheetInfo"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d35cb9b6-000c-45e5-9a29-9001404a21d0" name="Start" type="Start"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f1054fe8-46c8-42ab-b236-5b07592ec5eb</onsuccess></stage><stage stageid="f1054fe8-46c8-42ab-b236-5b07592ec5eb" name="End" type="End"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ab202953-451b-4e7c-8cd5-c050e06e286a" name="Post" type="SubSheetInfo"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative>Sends a message to HTTP endpoint using the POST method. The collection data is encoded using "application/x-www-form-urlencoded"</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e2777b38-8eba-4a04-a611-28bcd6c4add6" name="Start" type="Start"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" /><input type="collection" name="Post Data" narrative="A collection of values to send as Post data" stage="Post Data" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: HTTP Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /></inputs><onsuccess>e42b0caa-40c1-4a89-a873-f6977581053b</onsuccess></stage><stage stageid="f51a79a9-1213-484c-bedc-065f44051a02" name="End" type="End"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Post Headers" narrative="The headers related to the Post query" stage="ResultHeadersJson" /></outputs></stage><stage stageid="14154308-012d-47e4-a707-8ca80b73651e" name="new" type="Note"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4228ae7a-9bb3-4de4-9bbf-00e32d925ecf" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e42b0caa-40c1-4a89-a873-f6977581053b" name="Get Body" type="Code"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="postData" expr="[Post Data]" /></inputs><outputs><output type="text" name="body" stage="Body" /></outputs><onsuccess>e9085eba-5f15-4b65-91ed-41abf7c6917f</onsuccess><code><![CDATA[Dim sb As New System.Text.StringBuilder
For Each r As DataRow In postData.Rows
	Dim first As Boolean = True
	For Each c As DataColumn In postData.Columns
		If first Then
			first = False
		Else
			sb.Append("&")
		End If
		Dim columnName As String = c.ColumnName
		Dim encodedCol As String = System.Web.HttpUtility.UrlEncode(columnName)
		sb.Append(encodedCol)
		sb.Append("=")
		Dim val As String = r(columnName).ToString
		Dim encodedVal As String = System.Web.HttpUtility.UrlEncode(val)
		sb.Append(encodedVal)
	Next
	Exit For 'Only one row is allowed
Next

body=sb.ToString()
]]></code></stage><stage stageid="1c58d0fb-9a9b-4d2f-861f-5c22ab835c31" name="Result" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>270</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b98abed4-9669-476c-87d9-3f485683d049" name="Address URL" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4c2a5eb-36de-4904-a963-a8513b7e8840" name="Post Data" type="Collection"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="071f13b7-de3d-4625-9498-9da634d452b4" name="Setup" type="Code"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11e111be-101c-4df7-9d5c-910a10c02e2d</onsuccess><code><![CDATA[System.Net.ServicePointManager.Expect100Continue = False]]></code></stage><stage stageid="f6ed43b3-714e-4161-b44b-b60490592281" name="Proxy Password" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="bcedbed1-3ed7-42d7-8f16-7e2071c3e187" name="Proxy Username" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66afe5b7-37e4-4ed7-a9fc-a78e1ab8890c" name="Proxy URL" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be7856fe-4027-4226-8caa-851bb6e7df21" name="Use Proxy" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="38c313e6-bc0d-49e5-a6ab-4042a0682d3d" name="Post JSON" type="SubSheetInfo"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative>Sends a message to HTTP endpoint using the POST method. The action expects a raw string and sets the content type to "application/json"</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="37166627-b66b-4a9c-a321-539933de2123" name="End" type="End"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Result Headers" narrative="The headers related to the Post Query" stage="ResultHeadersJson" /></outputs></stage><stage stageid="878a70a1-d658-4563-b27c-245f947b74be" name="Result" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6875cda6-dbbe-47b6-ab82-b62f89c90a88" name="JSON" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4956e14f-001c-4406-a401-38c63ff06696" name="Start" type="Start"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" /><input type="text" name="JSON" narrative="The JSON to send" stage="JSON" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers Collection" stage="Headers" /></inputs><onsuccess>6b571f09-555c-45a8-9475-957d41cafb24</onsuccess></stage><stage stageid="696696c8-af04-4075-aea0-a8024e2431fe" name="Address URL" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="582df200-7287-4dc1-a9a2-6c9e09276f77" name="Proxy Password" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="924eb1dd-b782-4f71-82b6-9923ea0093ec" name="Proxy Username" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed09a5ed-6c7b-4dd3-9bf0-8df61da66ea3" name="Proxy URL" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e35c8d6-3f97-4ae4-8566-35fb0981e145" name="Use Proxy" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a9fcaf1-4310-45cb-a775-ebfadc75ac8a" name="Headers" type="Collection"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9e64259d-1a91-444b-8620-b8cd186832d1" name="Accept" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58e7a470-3ec3-4033-bb19-0fee1bdcaaed" name="HTTP Request" type="SubSheetInfo"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative>Sends a message to HTTP endpoint using the specified HTTP method and content-type</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d0a11dcd-f002-46b5-aff6-1026c3be2da8" name="End" type="End"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /></outputs></stage><stage stageid="1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8" name="HTTP Request" type="Code"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="addressURL" expr="[Address URL]" /><input type="text" name="body" expr="[Body]" /><input type="text" name="contentType" expr="[Content Type]" /><input type="text" name="method" expr="[Method]" /><input type="text" name="proxyURL" expr="[Proxy URL]" /><input type="flag" name="useProxy" expr="[Use Proxy]" /><input type="text" name="proxyUsername" expr="[Proxy Username]" /><input type="password" name="proxyPassword" expr="[Proxy Password]" /><input type="collection" name="headers" expr="[Headers]" /><input type="text" name="accept" expr="[Accept]" /><input type="text" name="username" expr="[Username]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="certID" expr="[Certificate ID]" /><input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" /><input type="flag" name="usingFile" expr="[File]" /></inputs><outputs><output type="text" name="resultData" stage="Result" /><output type="text" name="resultHeadersJson" stage="ResultHeadersJson" /></outputs><onsuccess>d0a11dcd-f002-46b5-aff6-1026c3be2da8</onsuccess><code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)

	If forcePreAuth Then
	   'Sometimes a web server will require the authorisation header in the initial request
	   'In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	request.Method = method
	request.ContentType = contentType

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If
	End If

	For Each r As DataRow In headers.Rows
		For Each c As DataColumn In headers.Columns
			Dim columnName As String = c.ColumnName
			Dim val As String = r(columnName).ToString
			request.Headers.Add(columnName,val)
		Next
		Exit For 'Only one row is allowed
	Next

	' Normal stream writer, we aren't encoding a file etc.
	If Not usingFile Then

		If Not String.IsNullOrEmpty(body) Then
		  Dim requestStream As IO.Stream = request.GetRequestStream()
		  Using sw As New IO.StreamWriter(requestStream, New Text.UTF8Encoding(False))
			sw.Write(body)
		  End Using
		End If

	Else If usingFile Then
		' Prep the request body
		Dim byteArray = File.ReadAllBytes( body )
		Dim requestStream As IO.Stream = request.GetRequestStream()
		requestStream.Write(byteArray,0, byteArray.Length)
End If

	Using response As WebResponse = request.GetResponse()
	  resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
	  Dim responseStream As IO.Stream = response.GetResponseStream()
	  Dim sr As New IO.StreamReader(responseStream)
	  resultData = sr.ReadToEnd()
	End Using

Catch e As WebException

	Using response As WebResponse = e.Response
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		Using data As Stream = response.GetResponseStream()
			Using reader = New StreamReader(data)
				Dim text As String = reader.ReadToEnd()
				resultData = resultData + text
			End Using

		End Using
	End Using

End Try]]></code></stage><stage stageid="96e2df5a-429a-4030-9565-b8cbbf7be6b3" name="Result" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>375</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f28cc4e-4ae2-4b01-ad23-0b632027d627" name="Body" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e305dce1-1fd7-459b-8211-27c26350676d" name="Block1" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0e0138a9-ccaa-44b1-b742-ad843c39aca1" name="Recover1" type="Recover"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0645751f-e202-459a-b704-5fb0e0cbebe7</onsuccess></stage><stage stageid="0645751f-e202-459a-b704-5fb0e0cbebe7" name="Exception1" type="Exception"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>210</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="d8c39895-52d1-45ad-8cd0-be309896d0e5" name="Start" type="Start"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" /><input type="text" name="Body" narrative="The body text of the HTTP request" stage="Body" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." stage="Content Type" /><input type="text" name="Method" narrative="The method of the HTTP request." stage="Method" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" stage="Force Pre Authorization" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" stage="File" /></inputs><onsuccess>1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8</onsuccess></stage><stage stageid="c4e87c4e-8150-4a15-8fc5-ddc736b949ae" name="Address URL" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="038a7411-25dc-456c-8007-bb82f3d94de7" name="Proxy Password" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="8ef02e3a-8214-4163-b44d-a5081ed8b9e4" name="Proxy Username" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>210</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c6f3a8d-428e-4a61-815c-f32a8a117ae3" name="Proxy URL" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c4cc5f6-0531-4375-b9c1-3fcb529dde9b" name="Use Proxy" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>165</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a98d0d5-c3b8-42fb-933f-2168265f12d6" name="Content Type" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc9f21c4-39ba-4135-8356-f9a516bf6b99" name="Method" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b571f09-555c-45a8-9475-957d41cafb24" name="HTTP Request" type="SubSheet"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" expr="" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /></outputs><onsuccess>37166627-b66b-4a9c-a321-539933de2123</onsuccess><processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid></stage><stage stageid="33b3447c-a55e-4af3-be35-6cb5624d6a4f" name="Headers" type="Collection"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ac16a164-f018-4111-949f-3db9d4d873d9" name="Accept" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="23c8dd77-277a-4aac-8df7-31c951626abd" name="Body" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9085eba-5f15-4b65-91ed-41abf7c6917f" name="HTTP Request" type="SubSheet"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[Body]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="[Accept]" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" expr="" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /></outputs><onsuccess>f51a79a9-1213-484c-bedc-065f44051a02</onsuccess><processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid></stage><stage stageid="4bd01e67-49a4-4082-be0d-df1bb9cecb13" name="Username" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>255</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dac70b0c-83cb-4605-8f7b-d1d8d21922d3" name="Password" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>255</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="9091a189-b87b-4ed7-9747-1e1e9fe657f6" name="Load Certificate" type="SubSheetInfo"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3cff8803-c15f-4ab4-a032-d0afb9fa20ae" name="Start" type="Start"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" stage="Filename" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" stage="Subject" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" stage="Password" /></inputs><onsuccess>8962b858-f6e2-413c-9ceb-3d80dee88de2</onsuccess></stage><stage stageid="17fddf56-07f2-4942-8515-e1b183458a7f" name="End" type="End"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Certificate ID" narrative="The ID of the certificate" stage="Certificate ID" /></outputs></stage><stage stageid="e9b8de2b-8e54-4772-b186-046ca262c94c" name="Filename" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f0ec822-a1c0-4b6b-91ba-739b0b2762b8" name="Subject" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8962b858-f6e2-413c-9ceb-3d80dee88de2" name="Load" type="Code"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[Filename]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="subject" expr="[Subject]" /></inputs><outputs><output type="text" name="thumbprint" stage="Certificate ID" /></outputs><onsuccess>17fddf56-07f2-4942-8515-e1b183458a7f</onsuccess><code><![CDATA[Dim cert As X509Certificate2 = Nothing
If Not String.IsNullOrEmpty(filename) Then
  cert = New X509Certificate2(filename,password)
End If

If Not String.IsNullOrEmpty(subject) Then
  cert=GetCertificate(subject)
End If

thumbprint = cert.Thumbprint
m_Certificates.Add(thumbprint,cert)
]]></code></stage><stage stageid="745e7557-7761-4078-8ff7-334b6873f126" name="Certificate ID" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="471ae54f-286f-4472-b48c-114fc7d04bf9" name="Password" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="452476e7-b29f-4e5f-999a-c67789bbb0db" name="Certificate ID" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>300</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5de144f5-aa91-46e0-8f9c-ac8495d2ab0c" name="Force Pre Authorization" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-240</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83483da-e145-4802-8407-a40cf74fc86a" name="URL Encode" type="SubSheetInfo"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f640efd4-cb34-48ee-b07d-de356b07b09b" name="Start" type="Start"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="URL" narrative="The URL to encode" stage="URL" /></inputs><onsuccess>d0c241bd-a746-44fc-9fdd-5f73a4c55bf9</onsuccess></stage><stage stageid="0d4cffb2-879f-49d1-b815-43da8446a39c" name="End" type="End"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="URL" narrative="The encoded URL" stage="URL" /></outputs></stage><stage stageid="d0c241bd-a746-44fc-9fdd-5f73a4c55bf9" name="Encode URL" type="Code"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="URL" expr="[URL]" /></inputs><outputs><output type="text" name="Encoded URL" stage="URL" /></outputs><onsuccess>0d4cffb2-879f-49d1-b815-43da8446a39c</onsuccess><code><![CDATA[
Encoded_URL = HttpUtility.UrlEncode( URL )]]></code></stage><stage stageid="7a1cd30a-feef-4786-89fd-cf1838f4dfaa" name="URL" type="Data"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e627cc07-7d3a-40bd-a02a-0a2952f079d0" name="Headers" type="Collection"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-255</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="FF6600" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="495a88d6-260c-4b89-a04c-64a12af7b759" name="File" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>120</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="765d4221-5509-4c70-97c4-a946b7d3d186" name="ResultHeadersJson" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>375</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea993d2e-35df-484b-9c46-a2d69a172ceb" name="ResultHeadersJson" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="031e4c4f-fa80-4e54-b2ab-847483e49414" name="ResultHeadersJson" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative></narrative><displayx>-150</displayx><displayy>270</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="caabb2b2-6772-4932-8ad6-0695d1a170d9" name="Inputs" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>-300</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ae023e33-e349-4bf0-80e0-7e3794a1dbc2" name="Protected Variables" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>-270</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="76b976d1-2b36-4ea6-8c01-04fa5ea31f20" name="Outputs" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><narrative></narrative><displayx>-300</displayx><displayy>240</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4b809006-50ee-41b3-b1db-2bc0165f895f" name="Inputs" type="Block"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><narrative></narrative><displayx>-315</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>195</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2e4c34da-85e1-4b3d-86a2-de7a6b10fcf6" name="Outputs" type="Block"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><narrative></narrative><displayx>-315</displayx><displayy>165</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cad4106c-2c71-48d0-960d-4d2c78a91eff" name="Inputs" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>-300</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>375</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a42642fa-1d93-42e4-942a-cb7a7087efef" name="Outputs" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative></narrative><displayx>-300</displayx><displayy>345</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4a325f2f-9650-490c-b4bb-61928ef10e68" name="Inputs" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><narrative></narrative><displayx>-300</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>105</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="67c03883-48e2-4ef1-8e3a-98ca0652e901" name="Outputs" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><narrative></narrative><displayx>-300</displayx><displayy>90</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1d4b7d60-b4f9-48d1-8e90-6759e1bfc573" name="Input / Output" type="Block"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><narrative></narrative><displayx>-285</displayx><displayy>-45</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" name="Utility - JSON" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - JSON" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="An object for parsing JSON into a collection and turning a collection into JSON." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>8f20ac0c-296f-43c3-b0d9-59b5b2b7da1c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6a9ccb5a-8cc3-44ac-b343-39680558062f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="560472b9-cea4-41d5-bc36-c49d6c1b26e6" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5aeb4cb-cd25-4535-b3be-b46681b4e6b6" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e53062c7-68de-4763-b37a-456688d0d607" type="Normal" published="True"><name>JSON to Collection (skipping JArray)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="222ee4c2-914e-4b2b-8e13-443c1c76b3dd" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ff6524a3-da73-439c-a4ba-2aabb994009c</onsuccess></stage><stage stageid="ff6524a3-da73-439c-a4ba-2aabb994009c" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fd071f3-6769-4dd5-95cf-a911c73c42ff" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference></references><imports><import>System.Data</import><import>System.Drawing</import><import>Newtonsoft.Json</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>Newtonsoft.Json.Linq</import><import>System.Collections</import><import>System.Linq</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[    Private Class JSON
        Public Const Array As String = "JSON:Array"
        Public Const Null As String = "JSON:Null"
    End Class
    
    Private mUseNewParseMethod As Boolean

    Public Function ConvertToJSON(ByVal dt As DataTable) As String
        Dim o As Object = SerialiseGeneric(dt, True)
        Return JsonConvert.SerializeObject(o)
    End Function

    Public Function SerialiseGeneric(ByVal o As Object, ByVal removeArray As Boolean) As Object
        Dim dt As DataTable = TryCast(o, DataTable)
        If dt IsNot Nothing Then
            Return SerialiseDataTable(dt)
        End If

        Dim dr As DataRow = TryCast(o, DataRow)
        If dr IsNot Nothing Then
            Return SerialiseDataRow(dr, removeArray)
        End If

        Dim s As String = TryCast(o, String)
        If s IsNot Nothing AndAlso s = JSON.Null Then
            Return Nothing
        End If

        If o IsNot Nothing Then
            Return o
        End If

        Return Nothing
    End Function

    Public Function SerialiseDataTable(ByVal dt As DataTable) As Object
        If  IsSingleRow(dt) Then
            Return SerialiseGeneric(dt.Rows(0), False)
        Else
            Dim ja As New JArray()
            For Each r As DataRow In dt.Rows
                ja.Add(SerialiseGeneric(r, True))
            Next
            Return ja
        End If
    End Function

    Public Function IsSingleRow(ByVal dt As DataTable) As Boolean
        If dt.ExtendedProperties.Contains("SingleRow") Then
            Return CBool(dt.ExtendedProperties("SingleRow"))
        End If
        'Fallback for older versions of blueprism
        Return dt.Rows.Count = 1
    End Function

    Public Function SerialiseDataRow(ByVal dr As DataRow, ByVal removeArray As Boolean) As Object
        Dim jo As New JObject()
        For Each c As DataColumn In dr.Table.Columns
            Dim s As String = c.ColumnName
            If removeArray AndAlso s = JSON.Array Then
                Return SerialiseGeneric(dr(s), True)
            End If
            jo(s) = JToken.FromObject(SerialiseGeneric(dr(s), False))
        Next
        Return jo
    End Function

    Public Function ConvertToDataTable(ByVal json As String) As DataTable
        Dim o As Object = JsonConvert.DeserializeObject(json)
        Return DirectCast(DeserialiseGeneric(o, True), DataTable)
    End Function

    Private Function DeserialiseGeneric(ByVal o As Object, ByVal populate As Boolean) As Object
        Dim a As JArray = TryCast(o, JArray)
        If a IsNot Nothing Then
            Return If(mUseNewParseMethod,
                DeserialiseArrayWithoutJArray(a, populate),
                DeserialiseArray(a, populate)
            )
        End If

        Dim jo As JObject = TryCast(o, JObject)
        If jo IsNot Nothing Then
            Return DeserialiseObject(jo, populate)
        End If

        Dim jv As JValue = TryCast(o, JValue)
        If jv IsNot Nothing Then
            Return jv.Value
        End If

        Return JSON.Null
    End Function

    Private Function GetKey(ByVal kv As KeyValuePair(Of String, JToken)) As String
        If kv.Key IsNot Nothing Then
            Return kv.Key.ToString()
        End If
        Return ""
    End Function


    Private Function DeserialiseObject(ByVal o As JObject, ByVal populate As Boolean) As DataTable
        Dim dt As New DataTable

        For Each kv As KeyValuePair(Of String, JToken) In o
            Dim type As Type = GetTypeOf(DeserialiseGeneric(kv.Value, False))
            dt.Columns.Add(GetKey(kv), type)
        Next

        If populate Then
            Dim dr As DataRow = dt.NewRow()
            For Each kv As KeyValuePair(Of String, JToken) In o
                dr(getKey(kv)) = DeserialiseGeneric(kv.Value, True)
            Next
            dt.Rows.Add(dr)
        End If

        Return dt
    End Function

    Private Function DeserialiseArrayWithoutJArray(ByVal jarr As JArray, ByVal populate As Boolean) As DataTable
        Dim dt As New DataTable

        Dim first As Type = Nothing
        For Each e As Object In jarr
            If first Is Nothing Then
                first = GetTypeOf(DeserialiseGeneric(e, False))
            End If
            If GetTypeOf(DeserialiseGeneric(e, False)) IsNot first Then
                Throw New Exception("Data Type mismatch in array")
            End If
        Next

        Dim columns As New Specialized.OrderedDictionary()
        Dim allTypesInColumnsMatch = jarr.All(
            Function(e)
                If Not TypeOf e Is JObject Then Return False
                For Each pair As KeyValuePair(Of String, JToken) In DirectCast(e, JObject)
                    Dim val As Object = pair.Value
                    If TypeOf val Is JValue Then val = CType(val, JValue).Value
                    Dim tp = If(val, CObj("")).GetType()

                    If columns.Contains(pair.Key) Then
                        If tp <> columns(pair.Key) Then Return False
                    Else
                        columns(pair.Key) = tp
                    End If
                Next
                Return True

            End Function
        )

        If allTypesInColumnsMatch Then
            For Each pair As DictionaryEntry In columns
                Dim key As String = CStr(pair.Key)
                Dim tp as Type = CType(pair.Value, Type)
                If tp = GetType(JObject) OrElse tp = GetType(JArray) Then
                    dt.Columns.Add(key, GetType(DataTable))
                Else
                    dt.Columns.Add(key, tp)
                End If
            Next
        ElseIf first IsNot Nothing Then
            dt.Columns.Add(JSON.Array, first)
        End If

        If populate Then
            For Each e As Object In jarr
                Dim dr As DataRow = dt.NewRow()
                If allTypesInColumnsMatch Then
                    For Each pair As KeyValuePair(Of String, JToken) In DirectCast(e, JObject)
                        dr(pair.Key) = DeserialiseGeneric(pair.Value, True)
                    Next
                Else
                    dr(JSON.Array) = DeserialiseGeneric(e, True)
                End If

                dt.Rows.Add(dr)
            Next
        End If

        Return dt
    End Function

    Private Function DeserialiseArray(ByVal o As JArray, ByVal populate As Boolean) As DataTable
        Dim dt As New DataTable

        Dim first As Type = Nothing
        For Each e As Object In o
            If first Is Nothing Then
                first = GetTypeOf(DeserialiseGeneric(e, False))
            End If
            If GetTypeOf(DeserialiseGeneric(e, False)) IsNot first Then
                Throw New Exception("Data Type mismatch in array")
            End If
        Next
        If first IsNot Nothing Then
            dt.Columns.Add(JSON.Array, first)
        End If

        If populate Then
            For Each e As Object In o
                Dim dr As DataRow = dt.NewRow()
                dr(JSON.Array) = DeserialiseGeneric(e, True)
                dt.Rows.Add(dr)
            Next
        End If

        Return dt
    End Function

    Private Function GetTypeOf(ByVal o As Object) As Type
        If o Is Nothing Then Return GetType(String)
        Return o.GetType
    End Function]]></code></stage><stage stageid="c290e7f4-b01b-4012-9422-044432a3cc82" name="Clean Up" type="SubSheetInfo"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="662f70f7-7036-462d-b9bf-f35265dd971a" name="Start" type="Start"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>153f4275-2acd-48a5-b6e6-409fcb2441a8</onsuccess></stage><stage stageid="153f4275-2acd-48a5-b6e6-409fcb2441a8" name="End" type="End"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="885aaf30-a216-44c5-975b-ca58ce02f815" name="JSON to Collection" type="SubSheetInfo"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e5625896-d966-4a10-aa39-2e85611f490f" name="Start" type="Start"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>779de445-0658-4a45-a1ef-a38d6de24429</onsuccess></stage><stage stageid="66526e3e-8b9e-4452-9ca8-f70baa9aec4a" name="End" type="End"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="007e04e2-4ed0-4afd-87d3-c06d79f48d86" name="new" type="Note"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d92fd7fc-b028-457a-a14a-17d66c4b5513" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="779de445-0658-4a45-a1ef-a38d6de24429" name="JSON To Collection" type="Code"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>66526e3e-8b9e-4452-9ca8-f70baa9aec4a</onsuccess><code><![CDATA[result = ConvertToDataTable(json)]]></code></stage><stage stageid="da3984e5-ce52-4649-81c5-a71d452a5ba0" name="json" type="Data"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e93e91c-85e1-4c75-b74c-52d08c0724e6" name="Collection to JSON" type="SubSheetInfo"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c10fccbd-439b-447d-908a-58f20a540146" name="Start" type="Start"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Data" stage="Data" /></inputs><onsuccess>7923115c-5283-4694-b2c1-142afb4d3788</onsuccess></stage><stage stageid="ede1f653-07f1-42eb-8616-8d2d3dfb5244" name="End" type="End"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="JSON" stage="JSON" /></outputs></stage><stage stageid="8f488472-d2dd-4bbc-a98e-07d6a494ab3f" name="Result" type="Collection"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><narrative></narrative><displayx>90</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7923115c-5283-4694-b2c1-142afb4d3788" name="Collection To JSON" type="Code"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="data" expr="[Data]" /></inputs><outputs><output type="text" name="json" stage="JSON" /></outputs><onsuccess>ede1f653-07f1-42eb-8616-8d2d3dfb5244</onsuccess><code><![CDATA[json = convertToJSON(data)]]></code></stage><stage stageid="dbeac687-55ba-4b1a-9e9b-1a5f1e763886" name="Data" type="Collection"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="60425486-0e54-4004-afef-6ccb7e96828d" name="JSON" type="Data"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><narrative></narrative><displayx>75</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68820997-9906-40ef-b5f3-325f6f0a25b9" name="JSON to Collection (skipping JArray)" type="SubSheetInfo"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="14799289-a9b9-4b93-aeb6-f0240547be63" name="Start" type="Start"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>8cb729e4-705c-400b-8d1d-0b54dd51fb94</onsuccess></stage><stage stageid="21187841-67f3-4ed1-a3b0-de763bb1e801" name="End" type="End"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="8cb729e4-705c-400b-8d1d-0b54dd51fb94" name="JSON To Collection Without JArray" type="Code"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>21187841-67f3-4ed1-a3b0-de763bb1e801</onsuccess><code><![CDATA[Try
	mUseNewParseMethod = True
	result = ConvertToDataTable(json)
Finally
	mUseNewParseMethod = False
End Try]]></code></stage><stage stageid="b3a37b86-f505-4522-80d4-2c9e45ab723c" name="json" type="Data"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98ca8a8f-1ce6-4cb7-85e6-9fff8b1b06f9" name="Result" type="Collection"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><narrative></narrative><displayx>45</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage></process></object>
        <object id="1b13f5b8-01d1-441e-bd7f-54884a24d71f" name="Utility - Strings" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Strings" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Utility functions for manipulating text." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>60</camerax><cameray>-35</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65117a41-f7ff-4f3f-abd1-7a3cbe18cfda" type="Normal" published="True"><name>Remove Non-word Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8fea7a8-24d9-41c8-9397-a3839e6ffdc1" type="Normal" published="True"><name>Generate New GUID</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e70e8f13-02df-4b14-bb74-6fd5c4c95928" type="Normal" published="True"><name>Delete Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a710d42-8f41-45d0-9e74-1eddf74c0e75" type="Normal" published="True"><name>Split Lines by Length</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e6bab90c-ddfd-48c0-af38-804fe4f770ed" type="Normal" published="True"><name>Split Lines</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a5871062-5ad2-4950-afbc-cb5b1b7a7f0b" type="Normal" published="True"><name>Split Text</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2c09338-7850-4daf-a545-8972d333b826" type="Normal" published="True"><name>Join Text</name><view><camerax>65</camerax><cameray>75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a854bb6a-4399-4e51-8fc3-64f9e1d4f896" type="Normal" published="True"><name>Join Lines</name><view><camerax>152</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fcddf4bf-83af-4431-88db-cc2c88390cec" type="Normal" published="True"><name>Get Newline Character</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="06780f7c-9622-4d84-9db3-bb56a2ff9f36" type="Normal" published="True"><name>Extract Regex Values</name><view><camerax>70</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a6b6398e-c21a-4c4e-9742-65ccad8370d9" type="Normal" published="True"><name>Test Regex Match</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5110b353-010b-4874-97bd-8b7621c24384" type="Normal" published="True"><name>Format Number</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef8de52d-842b-45f0-8f1b-619bc97d4bbc" type="Normal" published="True"><name>PadLeft</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="818441a5-ffec-4841-b0ea-00712caf63aa" type="Normal" published="True"><name>Get XML Elements</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e8af11f7-dfd4-4c86-9935-e83828b9e711" type="Normal" published="True"><name>Get XML Attribute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f9add4d4-31de-4c0f-a109-0b51fa576a23" type="Normal" published="True"><name>Get Collection as CSV</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5b26213-5463-4b2d-b10f-b188876b436f" type="Normal" published="True"><name>Get CSV As Collection</name><view><camerax>248</camerax><cameray>-87</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="040cc29a-27ac-402c-8a66-328554dd4bc0" type="Normal" published="True"><name>Escape Sendkeys String</name><view><camerax>0</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="527ca986-a03f-4231-880e-5b1c244b035e" type="Normal" published="True"><name>Compare Font Text</name><view><camerax>150</camerax><cameray>139</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0244396a-1d3d-4892-b6cb-461468f4c7e1" type="Normal" published="True"><name>InStr</name><view><camerax>0</camerax><cameray>-2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ab28c01-86eb-458d-b8d9-74f98926d266" type="Normal" published="True"><name>InStrRev</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Text</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic.FileIO</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

Private Function SplitStringInto( _
 ByVal fldName As String, _
 ByVal txt As String, _
 ByVal ParamArray splitters() As String) As DataTable
	Dim dt As New DataTable()
	dt.Columns.Add(fldName, GetType(String))

	For Each s As String In txt.Split(splitters, StringSplitOptions.None)
		dt.Rows.Add(New Object() {s})
	Next

	Return dt
End Function

Public Shared Function ParseCsvToList(ByVal csv As String) As List(Of String())
	Dim result = New List(Of String())()

	Using sr As New StringReader(csv)
		Using lineParser As New TextFieldParser(sr)
			lineParser.TextFieldType = FieldType.Delimited
			lineParser.SetDelimiters(",")
			While Not lineParser.EndOfData

				Dim fields As String() = lineParser.ReadFields()
				result.Add(fields)
			End While
		End Using
	End Using

	Return result
End Function


''' -----------------------------------------------------------------------------
''' <summary>
''' Serialises a datatable to the supplied stream.
''' </summary>
''' <param name="Writer">The stream writr to which the datatable should
''' be serialised. Eg this may correspond to a file stream.</param>
''' <param name="Table">The datatable to be serialised.</param>
''' <param name="IncludeHeaderRow">When true, the column headers will
''' be wrtten out on the first row.</param>
''' -----------------------------------------------------------------------------
Public Shared Sub WriteDataTable(ByVal Writer As StringBuilder, ByVal Table As DataTable, ByVal IncludeHeaderRow As Boolean)
	If IncludeHeaderRow Then
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Table.Columns(i).ColumnName)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(",")
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	End If

	For Each Row As DataRow In Table.Rows
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Row(i).ToString)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(",")
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	Next
End Sub



''' -----------------------------------------------------------------------------
''' <summary>
''' Writes a csv data cell, escaping quotes and new lines where necessary.
''' </summary>
''' <param name="Writer">The writer to which the item should be written.</param>
''' <param name="Value">The value to be written.</param>
''' -----------------------------------------------------------------------------
Private Shared Sub WriteItem(ByVal Writer As StringBuilder, ByVal Value As String)
	If Value.IndexOfAny(("""," & vbCrLf).ToCharArray) > -1 Then
		Writer.Append("""" & Value.Replace("""", """""") & """")
	Else
		Writer.Append(Value)
	End If
End Sub


'Splits text into lines of approximately equal length, looking for
'gaps between words as splitting points in order to avoid ugly
'line splitting in the middle of words. Useful for mainframe memos
'where a long message needs to be broken into lines of up to 80
'characters.
'
Private Shared Function SplitTextByLengthEngine(Texttosplit As String, MaxLineLength As Integer) As List(of String)
	Dim RetVal as New List(Of String)
	MaxLineLength =  Math.Min(MaxLineLength, TexttoSplit.Length)

	'We look for the last space within (MaxLineLength + 1) and then work backwards
	'(always by at least one) to find the last non-space character. We can then
	'chop at this point, assuming such exists. Otherwise we just chop at the
	'requested line length accepting we will be splitting a word.
	Dim LastIndex as integer = TexttoSplit.Substring(0, Math.Min(MaxLineLength + 1, TextToSplit.Length)).LastIndexOf(" ")

	If TextToSplit.Length <= MaxLineLength OrElse LastIndex = -1 Then
		RetVal.Add(TexttoSplit.Substring(0, MaxLineLength))
		Dim RemainingText As String = TexttoSplit.SubString(MaxLineLength,TextToSplit.Length - MaxLineLength).Trim()
		If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
	Else
		'Track backwards to find previous non-space character
		Dim Index As Integer = LastIndex - 1
		While Index >= 0 Andalso TextToSplit.SubString(Index, 1) = " "
			Index -=1
		End While
		If Index >= 0 Then
			RetVal.Add(TextToSplit.SubString(0, Index + 1))
			Dim RemainingText As String = TexttoSplit.SubString(Index + 1, TextToSplit.Length - (Index + 1)).Trim()
			If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
		Else
			'Must all be spaces. We assume this are to be ignored
		End If
	End If

	Return RetVal
End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b6df3b6c-090d-4126-a16c-8caa889b0646" name="Generate New GUID" type="SubSheetInfo"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><narrative>Generates a new globally unique identifier as text.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be35a29d-2b71-42e1-9ca7-4534046d5dfc" name="Start" type="Start"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd80e756-d12c-4dc7-9d64-bbde733f60b7</onsuccess></stage><stage stageid="bd80e756-d12c-4dc7-9d64-bbde733f60b7" name="Get GUID" type="Code"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="id" stage="GUID" /></outputs><onsuccess>4930704e-00c1-456a-8aad-02220fd81c99</onsuccess><code><![CDATA[dim g as new Guid
id = guid.newguid.tostring]]></code></stage><stage stageid="695dad7d-b634-454c-9171-baf489698067" name="GUID" type="Data"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4930704e-00c1-456a-8aad-02220fd81c99" name="End1" type="End"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="GUID" narrative="The new guid" stage="GUID" /></outputs></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><narrative></narrative><displayx>30</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a130f3e8-fad5-413c-a068-75ac20600244" name="Remove Non-word Characters" type="SubSheetInfo"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative>Trims non word characters from the begining and end of the text. Non word characters are any character that is NOT in the ranges a-z A-Z _ and 0-9</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dd85470c-e10b-4f0b-b729-c006136517eb" name="Start" type="Start"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="The text to remove the non word characters from" stage="Text" /></inputs><onsuccess>a2426b0a-eab8-4571-a6d9-fa89c49559be</onsuccess></stage><stage stageid="3eae8050-c325-49f6-9e3f-ee12400ca5d4" name="End" type="End"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Trimmed Text" narrative="The text with the non word characters removed" stage="Trimmed Text" /></outputs></stage><stage stageid="a2426b0a-eab8-4571-a6d9-fa89c49559be" name="Trim" type="Code"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="text" name="Trimmed Text" stage="Trimmed Text" /></outputs><onsuccess>3eae8050-c325-49f6-9e3f-ee12400ca5d4</onsuccess><code><![CDATA[
dim r as new regex("^\W*|\W*$")
Trimmed_Text = r.replace(text, "")
]]></code></stage><stage stageid="1f3570bd-8411-4e92-8fd3-1dd418411570" name="Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">    qwerqwer    </initialvalue><private /><alwaysinit /></stage><stage stageid="0967c44a-1a53-49a7-8bb4-e1f6733a41b0" name="Trimmed Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00a08897-25f2-48e0-aa88-e40bb27b94e7" name="Split Lines" type="SubSheetInfo"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative>Splits multiple line text into a collection text values with a single row per line.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f6c9d2f-247d-42a7-bc18-8b4283b21c80" name="Start" type="Start"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /></inputs><onsuccess>ee14a8f3-9fd3-4342-abcf-3cbe1d57431a</onsuccess></stage><stage stageid="370a75cf-d54f-438d-b7b1-0f931038d7a2" name="End" type="End"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="b655e5fa-2cb9-487a-b4e8-8faf44531e8d" name="Text to Split" type="Data"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee14a8f3-9fd3-4342-abcf-3cbe1d57431a" name="Split" type="Code"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>370a75cf-d54f-438d-b7b1-0f931038d7a2</onsuccess><code><![CDATA[Split_Values = SplitStringInto("Value", _
 Text_to_Split, vbCrLf, vbLf, vbCr)]]></code></stage><stage stageid="5c6c7749-e4c1-45ef-9fb7-a7b7ca77214d" name="Split Values" type="Collection"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative></narrative><displayx>120</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Value" type="text" /></collectioninfo></stage><stage stageid="99d3d4f8-598b-44be-9744-5142537aff99" name="Split Text" type="SubSheetInfo"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative>Splits text with a given delimiter into a collection of text values.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="97069dc2-f2a1-4f61-a3f6-e26e88d1da58" name="Start" type="Start"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /><input type="text" name="Split Char" narrative="The split delimiter" stage="Split Char" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" stage="Collection Field Name" /></inputs><onsuccess>d1694d87-2fff-467b-9a07-5f5dd570bd41</onsuccess></stage><stage stageid="2972f0ee-292a-4bb0-bed5-c9a19f8945f6" name="End" type="End"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="33bff0c5-22b9-4ab3-ac0a-c352221a4f79" name="Text to Split" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative></narrative><displayx>195</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1694d87-2fff-467b-9a07-5f5dd570bd41" name="Split Text" type="Code"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="text" name="Split Char" expr="[Split Char]" /><input type="text" name="Collection Field Name" expr="[Collection Field Name]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>2972f0ee-292a-4bb0-bed5-c9a19f8945f6</onsuccess><code><![CDATA[Split_Values = SplitStringInto( _
 Collection_Field_Name, _
 Text_to_Split, Split_Char)]]></code></stage><stage stageid="17ffca42-be51-4343-90e3-035d29366b7f" name="Split Values" type="Collection"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative></narrative><displayx>225</displayx><displayy>90</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="05ba6aed-e91b-4383-9001-69b78a2e474d" name="Split Char" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative></narrative><displayx>255</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20afce2f-59e1-4fc1-896c-ab71d2f871b2" name="Collection Field Name" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="786d2d47-37c8-4324-8e43-8fc75f0eca95" name="Join Text" type="SubSheetInfo"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative>Joins values from a collection into a single line of text using a given delimiter between values.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ccd8aec8-19c3-4d48-a184-a8895ed1ebbf" name="Start" type="Start"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="text" name="Join Character" narrative="The delimeter between text values" stage="Join Character" /><input type="flag" name="Trim Values" narrative="Set true to apply trimming to the values" stage="Trim Values" /></inputs><onsuccess>b05ea94b-f0d1-4047-b854-04877801ef0b</onsuccess></stage><stage stageid="7dbff5b3-7cd4-406a-9650-265fb88988ef" name="End" type="End"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="13059fce-ee5a-4fbc-a76c-efc5db5d1240" name="Values" type="Collection"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Value" type="text" /></collectioninfo></stage><stage stageid="b0cf2931-5486-4779-b457-e8af03062df8" name="Join Character" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019a4343-9b5c-4400-8b76-5efbf2156032" name="Join Lines" type="SubSheetInfo"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative>Joins values from a collection into multiline text.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f376101-4dd4-43b4-85a0-19dd1090df02" name="Start" type="Start"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="flag" name="Trim Lines" narrative="Set true to apply trimming to the lines" stage="Trim Lines" /></inputs><onsuccess>816591dd-a42d-436b-9fd0-4ca095d78e29</onsuccess></stage><stage stageid="f2d9cbef-9cdb-4daa-bbb6-5d3dc0548c2e" name="Values" type="Collection"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="579d0466-882d-47ce-a2c3-d4a7f25eaa8c" name="Joined Text" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative></narrative><displayx>90</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="724a0223-71bd-48d0-bcca-f4d554fcf91b" name="End" type="End"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="8bcc24ca-f588-4c3c-b09b-fe08b425b5db" name="Joined Text" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative></narrative><displayx>90</displayx><displayy>135</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3b84350-20a1-442e-bebb-0232a5b73299" name="Join Text" type="SubSheet"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" expr="[Values]" /><input type="text" name="Join Character" expr="[Join Character]" /><input type="flag" name="Trim Values" expr="[Trim Lines]" /></inputs><outputs><output type="text" name="Joined Text" stage="Joined Text" /></outputs><onsuccess>724a0223-71bd-48d0-bcca-f4d554fcf91b</onsuccess><processid>a2c09338-7850-4daf-a545-8972d333b826</processid></stage><stage stageid="816591dd-a42d-436b-9fd0-4ca095d78e29" name="Get Carriage Return" type="Code"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Join Character" stage="Join Character" /></outputs><onsuccess>e3b84350-20a1-442e-bebb-0232a5b73299</onsuccess><code><![CDATA[Join_Character = vbcrlf]]></code></stage><stage stageid="9a8e3b40-f136-4397-b62b-4a69cd010c37" name="Join Character" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative></narrative><displayx>105</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13a0e17b-9b82-4dd6-8e3a-313890d8caf3" name="For Each Value" type="LoopStart"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e4c0da52-0523-4109-b705-3fadd035597b</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid><looptype>ForEach</looptype><loopdata>Values</loopdata></stage><stage stageid="98f2416b-599a-42d1-a76f-d41ea3e23572" name="Next Value" type="LoopEnd"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dbff5b3-7cd4-406a-9650-265fb88988ef</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid></stage><stage stageid="b05ea94b-f0d1-4047-b854-04877801ef0b" name="Reset Output" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>13a0e17b-9b82-4dd6-8e3a-313890d8caf3</onsuccess><calculation expression="&quot;&quot;" stage="Joined Text" /></stage><stage stageid="49168356-8449-4cb3-9798-0796b15b77a3" name="Append Value" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>98f2416b-599a-42d1-a76f-d41ea3e23572</onsuccess><calculation expression="[Joined Text] &amp; [Values.Item Value] &amp; [Join Character]" stage="Joined Text" /></stage><stage stageid="54cf1a89-b26c-4916-ab45-8f1e80b9b86f" name="Trim Lines" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6aa04814-e2fd-4630-b391-bfe892ddc8df" name="Trim Values" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e4c0da52-0523-4109-b705-3fadd035597b" name="Trim?" type="Decision"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Trim Values]" /><ontrue>91ef5da4-e47e-4442-98ec-d46cbd8d8692</ontrue><onfalse>49168356-8449-4cb3-9798-0796b15b77a3</onfalse></stage><stage stageid="91ef5da4-e47e-4442-98ec-d46cbd8d8692" name="Do Trim" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>10ac89cc-d24c-4622-ad92-34ebe2365083</onsuccess><calculation expression="Trim([Values.Item Value])" stage="Values.Item Value" /></stage><stage stageid="10ac89cc-d24c-4622-ad92-34ebe2365083" name="anchor1" type="Anchor"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>150</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>49168356-8449-4cb3-9798-0796b15b77a3</onsuccess></stage><stage stageid="b837f601-57e9-4136-8dee-db8ca9ebf15f" name="Format Number" type="SubSheetInfo"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative>Formats a number into comma-delimited triplets, as appropriate. Eg 123456.789 becomes 123,456.789</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df1e573a-3e89-43a8-8e6a-61f1840b3869" name="Start" type="Start"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The number will have been formatted." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input Number" narrative="The number to format" stage="Input Number" /></inputs><onsuccess>df4ce97f-4b9c-4087-a9bf-c6e35eba156b</onsuccess></stage><stage stageid="dd89bdff-2f14-4268-98f4-7ef3747a5233" name="End" type="End"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Formatted Currency Numbers" narrative="The resulting formatted number" stage="Formatted Currency Value" /></outputs></stage><stage stageid="b0f25370-1f87-4edd-b03a-0a3ac16537fb" name="Input Number" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>987654123456.789</initialvalue><private /><alwaysinit /></stage><stage stageid="df4ce97f-4b9c-4087-a9bf-c6e35eba156b" name="Format" type="Code"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input" expr="[Input Number]" /></inputs><outputs><output type="text" name="Output" stage="Formatted Currency Value" /></outputs><onsuccess>dd89bdff-2f14-4268-98f4-7ef3747a5233</onsuccess><code><![CDATA[Output = Input.ToString("N")]]></code></stage><stage stageid="a6d6d631-89c5-4460-9771-6a15a0e1d7d5" name="Formatted Currency Value" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative></narrative><displayx>90</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3013d63-9017-4dd9-bcf6-5e0d09ab372f" name="PadLeft" type="SubSheetInfo"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative>Ensures that a string (usually a number) is of fixed width, by padding with a special character on the left.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af05cd75-42db-4c09-875d-3fedfc3ca0a2" name="Start" type="Start"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The supplied text will have been padded to be at least the number of desired characters." /></postconditions><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Input String" narrative="The string to pad" stage="Input String" /><input type="number" name="Target Width" narrative="The total number of characters required after padding" stage="Target Width" /><input type="text" name="Padding Character" narrative="The character to pad with" stage="Padding Character" /></inputs><onsuccess>6527cdd9-47d7-4784-bd96-e63afa4ec955</onsuccess></stage><stage stageid="f432b972-ae44-4485-943b-87848fd43487" name="End" type="End"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Padded String" narrative="The resultant padded string" stage="Input String" /></outputs></stage><stage stageid="888a814c-a03d-43f0-b6d6-30501b8b3250" name="Input String" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">123</initialvalue><private /><alwaysinit /></stage><stage stageid="ea8d90c7-c341-4859-919c-4ecc076162eb" name="Target Width" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="56c037f3-4ff0-4923-974c-e925c84e69c8" name="Padding Character" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6527cdd9-47d7-4784-bd96-e63afa4ec955" name="Blank Padding Character?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Padding Character]) = 0" /><ontrue>26f66718-649a-4472-965d-0e1e125e7473</ontrue><onfalse>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onfalse></stage><stage stageid="26f66718-649a-4472-965d-0e1e125e7473" name="Use Space for Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="&quot; &quot;" stage="Padding Character" /></stage><stage stageid="6acfdd2b-9298-4841-9111-003fc203edd0" name="anchor2" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>0</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onsuccess></stage><stage stageid="b6b30eec-0ee3-4316-a9af-d0a55d5ec137" name="anchor3" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e13c9c2d-2cbe-4262-828c-6307a805d9c1</onsuccess></stage><stage stageid="e13c9c2d-2cbe-4262-828c-6307a805d9c1" name="Long Enough?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Input String]) &gt;= [Target Width]" /><ontrue>f432b972-ae44-4485-943b-87848fd43487</ontrue><onfalse>87af11ea-fa7e-45cf-b02a-fd6edeae0b85</onfalse></stage><stage stageid="87af11ea-fa7e-45cf-b02a-fd6edeae0b85" name="Insert Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="[Padding Character] &amp; [Input String]" stage="Input String" /></stage><stage stageid="92edef27-4b78-40dd-97bd-e5a4f9169214" name="Get XML Elements" type="SubSheetInfo"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative>Gets a collection of xml elements with a given name from an xml document.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04bec0f1-e8bb-4c30-a5d1-b7eee243e6f9" name="Start" type="Start"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The xml to get elements from" stage="XML" /><input type="text" name="Element Name" narrative="The name of the xml elements to get" stage="Element Name" /></inputs><onsuccess>17f4a862-c7e3-44c3-a373-5b325fdaab8a</onsuccess></stage><stage stageid="e4b99f55-7171-46d6-992b-db797e99b1ed" name="End" type="End"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Elements" narrative="The collection of xml elements that match the given name and for each element its outer xml" stage="Elements" /></outputs></stage><stage stageid="31472749-70ee-477e-a042-fcf5a25a4099" name="XML" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>60</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;PotentialGrading&gt;  &lt;ServiceIdentifier&gt;ABC&lt;/ServiceIdentifier&gt;  &lt;Episode ID="a97fe424-0d1f-4e7c-9e9a-9b3c9e03d594"&gt;   &lt;Patient DateOfBirth="18/02/1970" Gender="M" PartPostcode="YO51" EthnicOrigin="W" Country="United Kingdom"    Region="North Yorkshire" RegisteredBlind="0" RegisteredPartiallySighted="1" HealthProvider="PCT"    Insurance="Cheap as Chips Insurance"&gt;The patient ID goes here&lt;/Patient&gt;   &lt;Screening Date="2007/09/06" GradingCodeSet="NGC" ImageCount="4"&gt;    &lt;Item Code="Examiner Classification" Value="1" /&gt;    &lt;Item Code="Eye Screening Urgency" Value="2" /&gt;    &lt;Item Code="Opthalmologist Care" Value="2" /&gt;    &lt;Item Code="Technical Gradability Code" Value="1" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="right" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="left" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="right" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="left" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="right" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="left" /&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="right"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="left"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="right" /&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="left" /&gt;    &lt;Image Length="104644" CameraID="Camera1" CameraModelID="CameraModel1" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(5)L.jpg&lt;/Image&gt;    &lt;Image Length="107565" CameraID="Camera2" CameraModelID="CameraModel2" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(6)L.jpg&lt;/Image&gt;    &lt;Image Length="107441" CameraID="Camera3" CameraModelID="CameraModel3" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(5)R.jpg&lt;/Image&gt;    &lt;Image Length="112472" CameraID="Camera4" CameraModelID="CameraModel4" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(6)R.jpg&lt;/Image&gt;   &lt;/Screening&gt;   &lt;Notes&gt;Free text notes go here&lt;/Notes&gt;  &lt;/Episode&gt; &lt;/PotentialGrading&gt; </initialvalue><private /><alwaysinit /></stage><stage stageid="68a0eeb2-9377-4b12-8f31-5ae52e7109e4" name="Element Name" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>90</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Image</initialvalue><private /><alwaysinit /></stage><stage stageid="7b46fe82-142a-411b-bf80-b2f0047952da" name="Get Elements" type="Code"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Element" expr="[Element Name]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess><code><![CDATA[
dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument
dim list as xmlnodelist

doc.loadxml(xml)
list = doc.getelementsbytagname(element)

for each n as xmlnode in list
	row = table.newrow()
	row("XML") = n.outerxml
	table.rows.Add(row)
next

Elements = table
]]></code></stage><stage stageid="d693d2fb-a196-4ddc-b2e9-b41cbe618fc3" name="Elements" type="Collection"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="17f4a862-c7e3-44c3-a373-5b325fdaab8a" name="Blank XML?" type="Decision"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([XML])) = 0" /><ontrue>6eb4f747-35c0-4e57-acbf-be93ac0a1bbb</ontrue><onfalse>7b46fe82-142a-411b-bf80-b2f0047952da</onfalse></stage><stage stageid="6eb4f747-35c0-4e57-acbf-be93ac0a1bbb" name="anchor1" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><narrative></narrative><displayx>240</displayx><displayy>-30</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a460ec9b-8afb-4b37-8ae0-7545448b025d</onsuccess></stage><stage stageid="a460ec9b-8afb-4b37-8ae0-7545448b025d" name="anchor2" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><narrative></narrative><displayx>240</displayx><displayy>165</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess></stage><stage stageid="97b59270-9eda-4994-9fce-24d8b5d856a4" name="Get XML Attribute" type="SubSheetInfo"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative>Gets the value of an xml attribute with a given name from an xml document fragment.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="802dd6e8-6b25-42b9-9af6-931049d4062a" name="Start" type="Start"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The xml document to get attributes from" stage="XML" /><input type="text" name="Attribute Name" narrative="The name of the xml attribute to get" stage="Attribute Name" /></inputs><onsuccess>76737597-b716-4a52-8cbc-dfe9b5ad1f0c</onsuccess></stage><stage stageid="bc64fcfd-4386-47ec-b799-19c5454d8374" name="End" type="End"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The text value of the requested attribute" stage="Attribute Value" /></outputs></stage><stage stageid="18f2ae57-8ed9-457b-8763-82dedb14a5e0" name="XML" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative></narrative><displayx>-90</displayx><displayy>75</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;iGrading&gt;&lt;Response transactionID="de3dc0b1-6b22-4b67-a13a-d42fff6188b9" status="Success" method="SubmitPotentialGradingWithImages" description="" /&gt;&lt;/iGrading&gt;</initialvalue><private /><alwaysinit /></stage><stage stageid="1941e7f9-164d-4aa2-b06e-cb3a579a30e4" name="Attribute Name" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative></narrative><displayx>-90</displayx><displayy>105</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">method</initialvalue><private /><alwaysinit /></stage><stage stageid="c9ec2a39-8f5d-42cc-856f-33bdb2c16477" name="Attribute Value" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative></narrative><displayx>-90</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76737597-b716-4a52-8cbc-dfe9b5ad1f0c" name="Get Attribute" type="Code"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Attribute" expr="[Attribute Name]" /></inputs><outputs><output type="text" name="Value" stage="Attribute Value" /></outputs><onsuccess>bc64fcfd-4386-47ec-b799-19c5454d8374</onsuccess><code><![CDATA[
dim i as integer = XML.indexof(Attribute)

if i > 0 then
	i += Attribute.length + 2
	value = XML.substring(i)
	value = value.substring(0, value.indexof(""""))
else
	value = ""
end if]]></code></stage><stage stageid="ebd306f5-f0a3-46cf-8a04-9bde5bf5cc3d" name="Get Collection as CSV" type="SubSheetInfo"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative>Turns a collection into a list of comma seperated values.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e2d9aba-666e-457b-adb8-c5991d17ba24" name="Start" type="Start"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /></inputs><onsuccess>e5946197-de00-4008-9491-d0ab28eaf2ee</onsuccess></stage><stage stageid="a619ae29-9260-47d3-b15c-f47342810991" name="End" type="End"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Collection CSV" narrative="The CSV representation of the Input Collection" stage="Output CSV" /></outputs></stage><stage stageid="18eea322-16ab-4d30-a555-5ac6638b468f" name="Input Collection" type="Collection"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative></narrative><displayx>120</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5946197-de00-4008-9491-d0ab28eaf2ee" name="Serialise to CSV" type="Code"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="text" name="Output CSV" stage="Output CSV" /></outputs><onsuccess>a619ae29-9260-47d3-b15c-f47342810991</onsuccess><code><![CDATA[
Dim SB As New StringBuilder
WriteDataTable(SB, Input_Collection, True)
Output_CSV = SB.ToString()]]></code></stage><stage stageid="9e68e0db-adac-4a32-bd92-c7d5bfe31468" name="Output CSV" type="Data"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative></narrative><displayx>90</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47ea7760-3b58-442b-8271-c90d3c08f114" name="Split Lines by Length" type="SubSheetInfo"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative>Splits text into lines of a given length using word boundries to find the split point.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="51996cc8-b76e-4de1-899a-66c678dbe1f3" name="Start" type="Start"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The single line of text that needs to be split" stage="Text to Split" /><input type="number" name="Maximum Line Length" narrative="The maximum length of the line" stage="Maximum Line Length" /><input type="flag" name="Split Strictly by Length" narrative="Set true if the line should be split at character boundries instead of words" stage="Split Strictly by Length" /></inputs><onsuccess>0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a</onsuccess></stage><stage stageid="52e75580-936a-4647-a154-e984ab8d199a" name="End" type="End"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Line Count" stage="Line Count" /><output type="collection" name="Split Lines" stage="Split Lines" /></outputs></stage><stage stageid="0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a" name="Split Lines By Length" type="Code"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><narrative></narrative><displayx>0</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="number" name="Maximum Line Length" expr="[Maximum Line Length]" /><input type="flag" name="Strict Split" expr="[Split Strictly by Length]" /></inputs><outputs><output type="collection" name="Split Lines" stage="Split Lines" /><output type="number" name="Line Count" stage="Line Count" /></outputs><onsuccess>52e75580-936a-4647-a154-e984ab8d199a</onsuccess><code><![CDATA[Dim Values as List(Of String) = Nothing
If Strict_Split Then
      Values = New List(Of String)
      While Text_to_Split.Length > 0
            Dim NewLine As String = Text_to_Split.SubString(0, Math.Min(Maximum_Line_Length, Text_to_Split.Length))
            NewLine = NewLine.Trim()
            Values.Add(NewLine)

            If Text_to_Split.Length > NewLine.Length Then
                  Text_to_Split = Text_to_Split.SubString(NewLine.Length, Text_to_Split.Length - NewLine.Length)
            Else
                  Text_to_Split = ""
            End If
            Text_to_Split = Text_to_Split.Trim()
      End While
Else
      Values = SplitTextByLengthEngine(Text_to_Split, Maximum_Line_length)
End If

Split_Lines = New DataTable()
Split_Lines.Columns.Add("Line Text", GetType(String))
For Each s as String in Values
      Split_Lines.Rows.Add(New Object() {s})
Next

Line_Count = Values.Count]]></code></stage><stage stageid="c20b3e81-de90-46c1-a347-f094034ff28c" name="Text to Split" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative></narrative><displayx>75</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp</initialvalue><private /><alwaysinit /></stage><stage stageid="e329d1c6-7a17-4af0-aa33-d6fb517adb68" name="Split Lines" type="Collection"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative></narrative><displayx>135</displayx><displayy>45</displayy><displaywidth>120</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line Text" type="text" /></collectioninfo></stage><stage stageid="50f47d4a-73f4-46d2-93e1-24a2470d2df9" name="Maximum Line Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="d1f11813-b465-4a95-9194-630fb1424d37" name="Line Count" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89c59225-5fb8-45a8-9fb8-a102420ddbc5" name="Split Strictly by Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8d911bb3-c87f-4748-b226-9d2faaf45c95" name="Get CSV As Collection" type="SubSheetInfo"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>Turns a list of comma seperated values into a collection.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="90168461-d901-4bf7-886d-42176fe2fe34" name="Start" type="Start"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV" narrative="The CSV to be converted into a collection" stage="CSV" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /></inputs><onsuccess>33e5caa5-61ec-4ef6-9ae8-01466a277896</onsuccess></stage><stage stageid="f06f6c62-eada-49b0-bf89-fdbb436e13fe" name="End" type="End"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="d5778bd8-695a-4c5e-8e8a-3764ae34f57f" name="CSV" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><narrative></narrative><displayx>225</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5b7df42-71fd-41f6-af35-62ed6f68caa0" name="Output Collection" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><narrative></narrative><displayx>45</displayx><displayy>15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="617f911a-8f73-4ce5-b428-f1441214c602" name="First Row Is Header" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><narrative></narrative><displayx>285</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ff699bd2-cd5a-4996-927a-e579b22b0313" name="Schema" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><displayx>390</displayx><displayy>-105</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="e1587123-3967-4743-b475-5499f8c41803" name="Get Newline Character" type="SubSheetInfo"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><narrative>Gets the text representing the two newline characters used under windows (Carriage return followed by Line feed)</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b09f1e76-fb7c-4ef1-9a47-db4a1377d056" name="Start" type="Start"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>af411d25-0e83-4e28-b4f3-30f43beb9b88</onsuccess></stage><stage stageid="bee4d44f-957c-415f-be9c-614e97d6f255" name="End" type="End"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Newline Character" narrative="The new line text" stage="Newline Character" /></outputs></stage><stage stageid="af411d25-0e83-4e28-b4f3-30f43beb9b88" name="Get Newline Character" type="Code"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Newline Character" stage="Newline Character" /></outputs><onsuccess>bee4d44f-957c-415f-be9c-614e97d6f255</onsuccess><code><![CDATA[Newline_Character = VbCrLf]]></code></stage><stage stageid="dde302f4-2b62-45c0-a8f3-190c52116470" name="Newline Character" type="Data"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><narrative></narrative><displayx>90</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd7d11e6-2bc7-40ed-ab47-1180482d82ed" name="Delete Characters" type="SubSheetInfo"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative>Removes the given characters from the text.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6e15c3f7-07db-4e3d-a24d-84be7e09b06e" name="Start" type="Start"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" stage="Characters to Delete" /></inputs><onsuccess>89bfbefd-b0a3-472a-b72c-75105d0a7895</onsuccess></stage><stage stageid="c7719606-01b9-4626-9a24-4d9cf42d1e75" name="End" type="End"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Amended Sample" /></outputs></stage><stage stageid="78d405b1-aa60-46a6-af38-fb4bba55e752" name="Text Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66318e10-ff11-43c1-9b3c-6ce27546458f" name="Characters to Delete" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89bfbefd-b0a3-472a-b72c-75105d0a7895" name="Replace" type="Code"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Delete" expr="[Characters to Delete]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>c7719606-01b9-4626-9a24-4d9cf42d1e75</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Delete.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, "")
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="930e7d0f-68a5-4d40-a291-e2dcfa4918c6" name="Amended Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative></narrative><displayx>90</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a0bb945-2946-4e17-8e4a-b8d7eb5e1060" name="Escape Sendkeys String" type="SubSheetInfo"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative>Escapes characters to be sent via the sendkeys method, to ensure that all characters are interpreted literally. If left unescaped, some characters such as % carry a special meaning rather than their literal value.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5bb1d666-6ef6-4371-a0f4-111fdf5ee69e" name="Start" type="Start"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sendkeys Text" narrative="The text to be escaped" stage="Sendkeys Text" /></inputs><onsuccess>5ea70bdd-732c-4a8e-b5cb-a747f97e1090</onsuccess></stage><stage stageid="7bfda30d-2f75-46ec-b5e2-88a965528b49" name="End" type="End"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Escaped Sendkeys Text" narrative="The escaped sendkeys text, which can be sent via the sendkeys method without fear of misinterpretation" stage="Escaped Sendkeys Text" /></outputs></stage><stage stageid="5ea70bdd-732c-4a8e-b5cb-a747f97e1090" name="Escape Text" type="Code"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SendKeys Text" expr="[Sendkeys Text]" /></inputs><outputs><output type="text" name="Escaped Sendkeys Text" stage="Escaped Sendkeys Text" /></outputs><onsuccess>7bfda30d-2f75-46ec-b5e2-88a965528b49</onsuccess><code><![CDATA[Escaped_Sendkeys_Text = Regex.Replace(SendKeys_Text, "[\[\]{}+^%~()]", "{$0}")]]></code></stage><stage stageid="c0e80092-2acc-4552-b6ab-9e3fa5abb07a" name="Escaped Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative></narrative><displayx>150</displayx><displayy>90</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="172f06e8-629e-434a-9bee-084a177606eb" name="Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e2f3e3d-72e1-4483-b79e-49e9f1387d8a" name="Compare Font Text" type="SubSheetInfo"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative>Compares two items of text read using Font Recognition for equality, where "equality" means that the two text samples match following the removal of conflicting font characters.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a092a3a-7389-4bd7-8d31-a3ed761ff97c" name="Start" type="Start"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><narrative></narrative><displayx>150</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sample 1" narrative="The first item to be compared" stage="Sample 1" /><input type="text" name="Sample 2" narrative="The second item to be compared" stage="Sample 2" /><input type="collection" name="Conflicting Characters" narrative="A collection of conflicting font characters, as read from a read stage for the font of interest" stage="Conflicting Characters" /></inputs><onsuccess>2aac81fd-1231-450b-94e5-3a5928ddb08b</onsuccess></stage><stage stageid="f07d147e-0807-4996-8746-e6b232b63283" name="End" type="End"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>330</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Samples Equal" narrative="Indicates whether the samples are equal, once conflicting characters are removed" stage="Samples Equal" /><output type="text" name="Amended Sample 1" narrative="The first sample, with conflicting characters removed" stage="Sample 1" /><output type="text" name="Amended Sample 2" narrative="The second sample, with conflicting characters removed" stage="Sample 2" /></outputs></stage><stage stageid="fbb964d4-b0d6-4729-b88d-04d1cbfd0cb5" name="Sample 1" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4187bcbb-ee93-4b01-b7b6-4e4944c8967a" name="Sample 2" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative></narrative><displayx>285</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16d61c29-acde-49f1-a0dc-5b93885cb724" name="Conflicting Characters" type="Collection"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative></narrative><displayx>0</displayx><displayy>-15</displayy><displaywidth>120</displaywidth><displayheight>60</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2aac81fd-1231-450b-94e5-3a5928ddb08b" name="For Each Character Group" type="LoopStart"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>45</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dde2966f-3ac6-4a0a-9613-7f8c83db2d3a</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid><looptype>ForEach</looptype><loopdata>Conflicting Characters</loopdata></stage><stage stageid="5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e" name="Next Character Group" type="LoopEnd"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>180</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cd3e8b56-7767-489d-96de-6c9d0740de02</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid></stage><stage stageid="cd3e8b56-7767-489d-96de-6c9d0740de02" name="Determine Equality" type="Calculation"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f07d147e-0807-4996-8746-e6b232b63283</onsuccess><calculation expression="[Sample 1] = [Sample 2]" stage="Samples Equal" /></stage><stage stageid="7c680a7d-326b-4d7b-b298-02df94778092" name="Samples Equal" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative></narrative><displayx>225</displayx><displayy>330</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a589a76f-6d45-4f76-a3d8-a7220c5409ed" name="Extract Regex Values" type="SubSheetInfo"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e85db034-efea-43db-9f60-c5d086ce0f5a" name="Start" type="Start"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><narrative></narrative><displayx>45</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /><input type="collection" name="Named Values" narrative="A collection of named values to extract from the target string" stage="Named Values" /></inputs><onsuccess>526b7aa5-2df6-4a52-a8d5-fef9e3c9e776</onsuccess></stage><stage stageid="78d491bd-ce28-422a-8d1f-334ba9248f4e" name="End" type="End"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><narrative></narrative><displayx>45</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Named Values" narrative="Results of the named values extracted from the regex" stage="Named Values" /></outputs></stage><stage stageid="e0d2e8e4-b2f1-4cab-a39c-7252cd042e68" name="Regex Pattern" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-105</displayy><displaywidth>300</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">(?&lt;Lower&gt;\d+)\s*(-|to)\s*(?&lt;Upper&gt;\d+)</initialvalue><private /><alwaysinit /></stage><stage stageid="d1344ba9-2a6f-4a88-bc72-0188e2ead8b7" name="Target String" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><displayx>240</displayx><displayy>-60</displayy><displaywidth>300</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">100-200</initialvalue><private /><alwaysinit /></stage><stage stageid="70580e44-41d3-40b3-9b12-3460963b2f5f" name="Named Values" type="Collection"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative></narrative><displayx>240</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" /><field name="Value" type="text" /></collectioninfo><initialvalue><row><field name="Name" type="text" value="Lower" /><field name="Value" type="text" value="" /></row><row><field name="Name" type="text" value="Upper" /><field name="Value" type="text" value="" /></row></initialvalue></stage><stage stageid="526b7aa5-2df6-4a52-a8d5-fef9e3c9e776" name="Extract Values" type="Code"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><narrative></narrative><displayx>45</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /><input type="collection" name="Named Values" expr="[Named Values]" /></inputs><outputs><output type="collection" name="Named Values Out" stage="Named Values" /></outputs><onsuccess>78d491bd-ce28-422a-8d1f-334ba9248f4e</onsuccess><code><![CDATA[For Each Row As DataRow in Named_Values.Rows
	Row("Value") = ""
Next


Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
If M IsNot Nothing AndAlso M.Success Then
	If M.Groups IsNot Nothing AndAlso M.Groups.Count > 0 Then
		For Each Row As DataRow in Named_Values.Rows
			Dim GroupName As String = CStr(Row("Name"))
			Dim G As Group = M.Groups(GroupName)
			If G.Success Then
				Row("Value") = G.Value
			End If
		Next
	End If
End If

Named_Values_Out = Named_Values]]></code></stage><stage stageid="33e5caa5-61ec-4ef6-9ae8-01466a277896" name="ParseCSV" type="Code"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV" expr="[CSV]" /><input type="collection" name="Schema" expr="[Schema]" /><input type="flag" name="FirstRowIsHeader" expr="[First Row Is Header]" /></inputs><outputs><output type="collection" name="outputCollection" stage="Output Collection" /></outputs><onsuccess>f06f6c62-eada-49b0-bf89-fdbb436e13fe</onsuccess><code><![CDATA[Const SchemaColumnName As String = "Column Name"
Const DefaultColumnName As String = "Column "
Const nonSchemaHeadingIndex As Integer = 0

Dim emptySchema As Boolean = Schema Is Nothing OrElse Schema.Rows.Count = 0

Dim csvValuesList = ParseCsvToList(CSV)

' If we want to parse with no schema and want the first row be used as headings 
' we need to know what the headings will be.
Dim nonSchemaHeadings = csvValuesList(nonSchemaHeadingIndex)

' Arrange the column headings into the table first.
If emptySchema Then
	For Each columnHeader As String In nonSchemaHeadings
		Dim colName As String = If(FirstRowIsHeader, columnHeader,
											 DefaultColumnName & outputCollection.Columns.Count)
		outputCollection.Columns.Add(colName, GetType(String))
	Next
Else
	For Each columnHeader As DataRow In Schema.Rows
		Dim colName As String = columnHeader(SchemaColumnName).ToString
		outputCollection.Columns.Add(colName, GetType(String))
	Next
End If

' If the first row is being used for headings then skip those headings / values in csvValuesList.
Dim startListIndex As Integer = If(FirstRowIsHeader, nonSchemaHeadingIndex + 1, nonSchemaHeadingIndex)

' Insert the csv values into the table row by row.
For i As Integer = startListIndex To csvValuesList.Count - 1
	Dim currentRow As Datarow = outputCollection.NewRow
	outputCollection.Rows.Add(currentRow)

	Dim csvArray = csvValuesList(i)
	For columnIndex As Integer = 0 To csvArray.Length - 1
		currentRow.Item(columnIndex) = csvArray(columnIndex)
	Next
Next]]></code></stage><stage stageid="feb4e385-2919-4066-86ad-53cb6226c867" name="InStr" type="SubSheetInfo"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text.</narrative><displayx>-150</displayx><displayy>-180</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="353f092b-3d6f-4fda-bdab-cd5798047c44" name="End" type="End"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text or -1 if not found" stage="Position" /></outputs></stage><stage stageid="f594335d-8723-4704-a8ae-e8dbcfe492c7" name="Text" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a43e2c2-c8c1-4dfd-b58f-2775e2ea7d0e" name="Search String" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9bbb24e-51f9-489f-9944-30d9612c396a" name="Start Byte" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="65e660c1-4379-4323-9e01-6cd7ae38f150" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Inputs</narrative><displayx>-180</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="424c6e04-b000-4dce-8eb7-ba00b0fea671" name="InStr" type="Code"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>353f092b-3d6f-4fda-bdab-cd5798047c44</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStr(Start_Byte,InText, Search_String, 1)]]></code></stage><stage stageid="7f283fb0-e9fa-4e24-82d1-aae53fd5afe1" name="Position" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>165</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d00b9153-969d-4db4-b737-b1ac835c7b2a" name="Compare Method" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="4bbb2261-2d01-49a5-88e8-c8d37745fd60" name="InStrRev" type="SubSheetInfo"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text but matches in reverse.</narrative><displayx>-150</displayx><displayy>-135</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3ddcb7e5-570f-430d-8374-ed9066da51c0" name="Start" type="Start"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>4991333f-9a42-4dc3-b73b-a8bc97edab6d</onsuccess></stage><stage stageid="251f9278-c41e-44a0-835b-bfc48910933d" name="Text" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>-30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="393bbd43-ae95-438d-b358-f51cc69d5e5c" name="Search String" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>0</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a898a11a-c6ca-4a70-abcd-42f38192de24" name="Start Byte" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative></narrative><displayx>-180</displayx><displayy>30</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="73737012-9282-4e33-9d87-c4718367216d" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Inputs</narrative><displayx>-180</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4991333f-9a42-4dc3-b73b-a8bc97edab6d" name="InStrRev" type="Code"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>ba288c3f-ff29-4df2-af77-a2823f65f60c</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStrRev(InText, Search_String, Start_Byte, 1)]]></code></stage><stage stageid="63d5b70d-b54a-4451-b957-9ea177292994" name="Position" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>150</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57a39985-6197-4f21-bdff-e46bd897faa6" name="Compare Method" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d0bb7b29-fbb3-43cd-ab69-7f76a9c657e5" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Outputs</narrative><displayx>-165</displayx><displayy>120</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b27c7a93-8e3b-4ed8-b105-e08cd2c96fdf" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Outputs</narrative><displayx>-165</displayx><displayy>135</displayy><displaywidth>150</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bc4f3574-a096-4b9f-b836-0bc100bf2a18" name="Start" type="Start"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><narrative></narrative><displayx>15</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>424c6e04-b000-4dce-8eb7-ba00b0fea671</onsuccess></stage><stage stageid="ba288c3f-ff29-4df2-af77-a2823f65f60c" name="End" type="End"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text from the end or -1 if not found" stage="Position" /></outputs></stage><stage stageid="73739a66-400b-488a-bd7a-63a2f0d2a4ef" name="Test Regex Match" type="SubSheetInfo"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>Check if a given Text value matches a regular expression.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="568b67f8-4216-4af4-bea8-1c83bbff7e16" name="Start" type="Start"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /></inputs><onsuccess>2ad0c111-6108-4ca5-945b-22aab4b6bb27</onsuccess></stage><stage stageid="46282093-d3a9-4e38-b030-95b332ec5371" name="End" type="End"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Matched?" narrative="Whether or not the regex match" stage="Regex Match" /></outputs></stage><stage stageid="32d3ef8a-d0b2-4093-afc5-98bad356c881" name="Regex Pattern" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-120</displayy><displaywidth>300</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5747c96e-0ce3-4e78-b446-17b9cef5b655" name="Target String" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><displayx>165</displayx><displayy>-75</displayy><displaywidth>300</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ad0c111-6108-4ca5-945b-22aab4b6bb27" name="Test Regex Match1" type="Code"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><narrative></narrative><displayx>-30</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /></inputs><outputs><output type="flag" name="Regex Match" stage="Regex Match" /></outputs><onsuccess>46282093-d3a9-4e38-b030-95b332ec5371</onsuccess><code><![CDATA[
Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
Regex_Match =  M IsNot Nothing AndAlso M.Success]]></code></stage><stage stageid="24d6e567-f121-4d8a-a4ee-1402f8f2832d" name="Regex Match" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative></narrative><displayx>45</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dde2966f-3ac6-4a0a-9613-7f8c83db2d3a" name="Delete from Sample 1" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 1]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 1" /></outputs><onsuccess>50c19466-f7e4-4066-a4c1-d18f65876de0</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage><stage stageid="50c19466-f7e4-4066-a4c1-d18f65876de0" name="Delete from Sample 2" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 2]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 2" /></outputs><onsuccess>5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage></process></object>
        <object id="9cd0a967-eb01-4e38-bc91-31ace18db7eb" name="Webservices - OAuth2.0" xmlns="http://www.blueprism.co.uk/product/process"><process name="Webservices - OAuth2.0" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Business Object for authorization using OAuth2.0" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>0309f0b3-8c71-468a-b6e2-ce934f4511bf</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="daf2aeae-ccbf-47e7-be80-d7f9f7cda452" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67318fea-06de-4ab4-b24e-c296aa10321f" type="Normal" published="True"><name>Request</name><view><camerax>260</camerax><cameray>69</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7652b71d-b844-4e53-b2af-59d9ec31a0ac" type="Normal" published="False"><name>Request Token</name><view><camerax>0</camerax><cameray>-7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfc2c33-3381-4972-abb6-b529f18cfa44" type="Normal" published="False"><name>Request Resource</name><view><camerax>320</camerax><cameray>193</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="28c240f1-b990-40b4-95fc-035aea399ac1" type="Normal" published="False"><name>Refresh Token</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ae9fd1e-48b3-41c1-9b9d-a822c0f60126" type="Normal" published="True"><name>Load Certificate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="45775d87-040d-40a6-b73b-5971c041501c" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8a5639e4-7770-49e5-961e-6e539e072fe3</onsuccess></stage><stage stageid="8a5639e4-7770-49e5-961e-6e539e072fe3" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c3627a11-b60c-467d-b514-2a81e17d44d5" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>System.Text</import><import>System.Security.Cryptography</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[Private Shared ReadOnly Jan1st1970 As New DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)

Public Shared Function currentTimeMillis() As Long
	Return CLng((DateTime.UtcNow - Jan1st1970).TotalMilliseconds)
End Function]]></code></stage><stage stageid="16647fe3-8725-4eb4-ac44-7f2a3d396da2" name="Clean Up" type="SubSheetInfo"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d6b6c2e2-5fe2-4ce9-9c12-3ca7d86e4172" name="Start" type="Start"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bf7a5e90-a6ba-48df-bc5f-f87e6dd329e9</onsuccess></stage><stage stageid="bf7a5e90-a6ba-48df-bc5f-f87e6dd329e9" name="End" type="End"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1358dda6-d7a9-42b3-a857-9cee53b075a1" name="Request" type="SubSheetInfo"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative>Request a token and then use it immediately to request the resource</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="49eac0fa-75de-4797-ae9d-1793392b2cc5" name="Start" type="Start"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" stage="Token URL" /><input type="text" name="Resource URL" narrative="The url for the resource" stage="Resource URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" stage="Certificate ID" /><input type="text" name="Method" narrative="HTTP Method" stage="Method" /><input type="text" name="Content Type" narrative="HTTP Content Type" stage="Content Type" /><input type="text" name="Body" narrative="HTTP Body" stage="Body" /></inputs><onsuccess>f8f33cad-f70a-4f0f-a3af-e78ddb123389</onsuccess></stage><stage stageid="f29a7d05-311f-4d69-bb79-a295ed678ee7" name="new" type="Note"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f9725ca-938f-4127-a1b7-abacdad87e9d" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3fb70227-b46b-4284-9d51-1cf18d58d84a" name="Token URL" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c05a019-4565-449b-a509-0526e280254e" name="Resource URL" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>195</displayx><displayy>-105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019eb6f8-4781-4098-aee7-11fa57c63a63" name="Username" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>270</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="02a7084c-766b-462e-8696-feca3622186b" name="Password" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>330</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="d4e3bc71-0a4e-4e05-a931-979d5e4b87ed" name="Request Token" type="SubSheetInfo"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2cd4ceab-8e1d-41d0-ba80-1c33daf765f9" name="End" type="End"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Token" narrative="The resulting token as a collection" stage="Token" /></outputs></stage><stage stageid="14735bd9-9b52-4305-83b9-050508831c0a" name="Request Token" type="Action"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Request URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="&quot;grant_type=client_credentials&quot;" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="[Username]" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="[Password]" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="[Certificate ID]" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" expr="True" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>ca7a6451-d288-4763-9b1c-24b9399ad05e</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="1683c17c-6c04-4bb6-b020-4715f06f7c08" name="Result" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca7a6451-d288-4763-9b1c-24b9399ad05e" name="Parse JSON" type="Action"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[Result]" /></inputs><outputs><output type="collection" name="Result" stage="Token" /></outputs><onsuccess>2cd4ceab-8e1d-41d0-ba80-1c33daf765f9</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="d0931d2f-5f90-42c5-b30a-420eb0e53315" name="Token" type="Collection"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>90</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6f7bca05-6f56-44bc-b1bc-a6650093c669" name="Request URL" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a017716c-2c9e-4970-9e12-0001d03a8612" name="Start" type="Start"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Request URL" narrative="The url for the token request" stage="Request URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" stage="Certificate ID" /></inputs><onsuccess>14735bd9-9b52-4305-83b9-050508831c0a</onsuccess></stage><stage stageid="7c8fcfbe-eba5-406d-8704-0c95499a43a3" name="Username" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d1983e3-95b7-44d5-82fb-affade540f80" name="Password" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="a9ebba89-880f-4f91-9b86-6b60d3b593f1" name="Request Token" type="SubSheet"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Request URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /></inputs><outputs><output type="collection" name="Token" narrative="The resulting token as a collection" stage="Token" /></outputs><onsuccess>4fb0385d-aa21-497c-b051-d7180524f54b</onsuccess><processid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</processid></stage><stage stageid="ded9724a-ffe3-4375-88b2-0149c26055cb" name="Request Resource" type="SubSheetInfo"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2f9ca3d9-381d-435c-81a9-50c40b3d7f80" name="End" type="End"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" stage="Result" /></outputs></stage><stage stageid="ffaaa3bd-1c38-401f-9078-52a6c4cd59b2" name="Get Access Token" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>150</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>894804c9-f098-42f0-a061-70e59c75bc6d</onsuccess><calculation expression="[ResultData.access_token]" stage="Access Token" /></stage><stage stageid="0dfeedf9-28ff-4299-ab83-e162c09bb214" name="Access Token" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>225</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1120a7e2-3a7b-47db-bb24-00dc8f53e672" name="Request Resource" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>150</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Resource URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[Body]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="[Content Type]" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="[Certificate ID]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>2f9ca3d9-381d-435c-81a9-50c40b3d7f80</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="894804c9-f098-42f0-a061-70e59c75bc6d" name="Add Row" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>150</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Headers&quot;" /></inputs><onsuccess>488dfdc4-eed9-4fe0-ac8b-ee3428d07149</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="c6b185a9-11b7-4975-a383-baf0304e4fca" name="Headers" type="Collection"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>225</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Authorization" type="text" /></collectioninfo></stage><stage stageid="488dfdc4-eed9-4fe0-ac8b-ee3428d07149" name="Set Auth" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>150</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1120a7e2-3a7b-47db-bb24-00dc8f53e672</onsuccess><calculation expression="&quot;Bearer &quot; &amp; [Access Token]" stage="Headers.Authorization" /></stage><stage stageid="33d3eda7-7c80-4dd9-96c3-f810a377efea" name="Token Type" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7572632-0116-49be-862c-ebda9ae96b3b" name="Token Type" type="ChoiceStart"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>4e1cfb66-0bef-4124-a7b9-c8805be5ee9c</groupid><choices><choice expression="Lower([Token Type]) = &quot;bearer&quot;"><name>Bearer</name><distance>60</distance><ontrue>ffaaa3bd-1c38-401f-9078-52a6c4cd59b2</ontrue></choice><choice expression="Lower([Token Type]) = &quot;mac&quot;"><name>MAC</name><distance>105</distance><ontrue>c838ffd2-6697-474c-bcf5-245a8bd5f149</ontrue></choice></choices></stage><stage stageid="7682a7be-bcb9-4249-a237-7d6ca90f1eba" name="Otherwise1" type="ChoiceEnd"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>55e01eb9-1362-4f39-928b-676accdf1759</onsuccess><groupid>4e1cfb66-0bef-4124-a7b9-c8805be5ee9c</groupid></stage><stage stageid="c838ffd2-6697-474c-bcf5-245a8bd5f149" name="Get MAC Header" type="Code"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>-105</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="macKey" expr="[MAC Key]" /><input type="text" name="macID" expr="[MAC ID]" /><input type="text" name="domainName" expr="[Domain]" /></inputs><outputs><output type="text" name="accessToken" stage="Access Token" /></outputs><onsuccess>d87bdfbf-df9a-4c03-a3d5-b919507debee</onsuccess><code><![CDATA[Dim key As Byte() = Encoding.UTF8.GetBytes(macKey)
Dim mac As New HMACSHA1(key)

Dim epoch As Long = currentTimeMillis()
Dim timestamp As Long = epoch \ 1000

Dim ts As String = timestamp.ToString()

'notifications.e2.app.aexp.com is hardcoded here but will change depending on the environment.
'Each of the environments (Dev, Test and Prod) will have their own host name
Dim baseString As String = _
	  ts & vbLf _
    & ts & vbLf _
	& "POST" & vbLf _
	& "%2Faaa%2F" & vbLf _
	& domainName & vbLf _
	& "443" & vbLf _
	& vbLf

Dim baseBytes As Byte() = Encoding.UTF8.GetBytes(baseString)
Dim rawHmac As Byte() = mac.ComputeHash(baseBytes)
Dim macValue As String = Convert.ToBase64String(rawHmac)

Dim sb As New StringBuilder()
sb.Append("id=""")
sb.Append(macID)
sb.Append(""",ts=""")
sb.Append(ts)
sb.Append(""",nonce=""")
sb.Append(ts)
sb.Append(""",mac=""")
sb.Append(macValue)
sb.Append("""")

accessToken = sb.ToString()
]]></code></stage><stage stageid="14c6d072-a68c-4004-b6af-a2b8bea0d8d8" name="End" type="End"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>-105</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" stage="Result" /></outputs></stage><stage stageid="7890b5bd-d874-4614-867b-fbe8d908ed1a" name="Request Resource" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>-105</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Resource URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;GET&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="[Certificate ID]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>14c6d072-a68c-4004-b6af-a2b8bea0d8d8</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="d87bdfbf-df9a-4c03-a3d5-b919507debee" name="Add Row" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>-105</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Headers&quot;" /></inputs><onsuccess>416074df-5112-4888-ad6c-991fb3b3474c</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="416074df-5112-4888-ad6c-991fb3b3474c" name="Set Auth" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>-105</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7890b5bd-d874-4614-867b-fbe8d908ed1a</onsuccess><calculation expression="&quot;MAC &quot; &amp; [Access Token]" stage="Headers.Authorization" /></stage><stage stageid="55e01eb9-1362-4f39-928b-676accdf1759" name="Exception1" type="Exception"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Unknown Token Type&quot;" /></stage><stage stageid="121d6fb5-4e5a-47bb-8058-b9f1b72d0f86" name="Get Token Type" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a7572632-0116-49be-862c-ebda9ae96b3b</onsuccess><calculation expression="[ResultData.token_type]" stage="Token Type" /></stage><stage stageid="dbb0e412-52d3-4384-aed3-264bf402b427" name="Resource URL" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="af874112-9010-423a-ae9e-17007d17f62c" name="Start" type="Start"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Resource URL" narrative="The url for the resource" stage="Resource URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="collection" name="Token" narrative="Token data in a collection" stage="ResultData" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" stage="Certificate ID" /><input type="text" name="Method" narrative="HTTP Method" stage="Method" /><input type="text" name="Content Type" narrative="HTTP Content Type" stage="Content Type" /><input type="text" name="Body" narrative="HTTP Body" stage="Body" /></inputs><onsuccess>121d6fb5-4e5a-47bb-8058-b9f1b72d0f86</onsuccess></stage><stage stageid="ad15b1d1-b73c-4186-a115-2b62679dfce3" name="Username" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>285</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7535c438-0949-449e-83bd-c1df3bd1ae59" name="Password" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>345</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="09684205-735c-4e93-9335-22224e1567a5" name="ResultData" type="Collection"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4fb0385d-aa21-497c-b051-d7180524f54b" name="Request Resource" type="SubSheet"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Resource URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="[Method]" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="[Content Type]" /><input type="text" name="Body" narrative="HTTP Body" expr="[Body]" /></inputs><outputs><output type="text" name="Result" stage="Result" /></outputs><onsuccess>8f6bf73c-8f61-4f3b-9be7-0c3e9569315b</onsuccess><processid>1cfc2c33-3381-4972-abb6-b529f18cfa44</processid></stage><stage stageid="8f6bf73c-8f61-4f3b-9be7-0c3e9569315b" name="End1" type="End"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>120</displayx><displayy>270</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Result" /></outputs></stage><stage stageid="66542415-bebb-40cc-bd9e-5cdb486a1d14" name="Result" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>225</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95a72b66-67a3-40c4-aa7a-5c95dcd11b29" name="Result" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>195</displayx><displayy>270</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fed22b00-60a7-461a-84bf-1cc1e2c20ed0" name="Refresh Token" type="SubSheetInfo"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b768c95-9372-4316-ac26-e4f86459ad89" name="End" type="End"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5677136-b1ec-4657-94b7-36376cc9f13d" name="Start" type="Start"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Request URL" narrative="The url for the token request" stage="Request URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="collection" name="Token" narrative="Token data in a collection" stage="Token" /></inputs><onsuccess>c176a1c4-7f84-4fc9-a276-727b91852d79</onsuccess></stage><stage stageid="c176a1c4-7f84-4fc9-a276-727b91852d79" name="Refresh Token" type="Action"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Request URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="&quot;grant_type=refresh_token&amp;refresh_token=&quot; &amp; [Token.refresh_token]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="[Username]" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="[Password]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>5b768c95-9372-4316-ac26-e4f86459ad89</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="e20dcd70-ebf1-416a-a3c2-1468f525809a" name="Request URL" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61b9983f-e15b-4496-bcec-49f4faf1070b" name="Username" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6eedacbc-6f3c-409a-bbc6-de3dcce2b593" name="Password" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="2e2c47b8-ffab-4216-9657-51a9b74960b2" name="Token" type="Collection"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="721bd85c-0f81-4a98-9c95-2a4fd7799ff5" name="Result" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09e72fd2-38b2-48e7-944b-6c507d4d00bf" name="MAC Key" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fec9423c-6e89-4396-bfd3-111d790478fa" name="MAC ID" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="129d13ec-0ee1-4b67-82a5-fbff307d203c" name="Domain" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>-195</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc9eee36-8f24-42d9-8138-a82a978bdb44" name="NON WORKING - Under development" type="Block"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><narrative></narrative><displayx>-255</displayx><displayy>0</displayy><displaywidth>210</displaywidth><displayheight>270</displayheight><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="c0de3cf8-6c50-42b9-aacf-c2327acf9356" name="Token" type="Collection"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>390</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f8f33cad-f70a-4f0f-a3af-e78ddb123389" name="Token Row Count" type="Action"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Token&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Count" /></outputs><onsuccess>f5ab79a6-f113-44f5-83aa-0fa96a1ef7d7</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="77fed05c-6b21-488a-bfcc-d76320b583c1" name="Count" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5ab79a6-f113-44f5-83aa-0fa96a1ef7d7" name="Token Empty" type="Decision"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Count]=0" /><ontrue>a9ebba89-880f-4f91-9b86-6b60d3b593f1</ontrue><onfalse>a19404db-3052-4350-8fd8-9b2ca20b304d</onfalse></stage><stage stageid="a19404db-3052-4350-8fd8-9b2ca20b304d" name="anchor1" type="Anchor"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4fb0385d-aa21-497c-b051-d7180524f54b</onsuccess></stage><stage stageid="490b22f5-ccb6-4798-b1da-86b9e0216db7" name="Load Certificate" type="SubSheetInfo"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da16d9e4-7e4a-4967-994c-b342aa89736e" name="End" type="End"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Certificate ID" stage="Certificate ID" /></outputs></stage><stage stageid="54d1754a-7e02-4b40-855d-3fe5d945202b" name="Load" type="Action"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" expr="[Filename]" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" expr="[Subject]" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" expr="[Password]" /></inputs><outputs><output type="text" name="Certificate ID" narrative="The ID of the certificate" stage="Certificate ID" /></outputs><onsuccess>da16d9e4-7e4a-4967-994c-b342aa89736e</onsuccess><resource object="Utility - HTTP" action="Load Certificate" /></stage><stage stageid="d5f5cd2d-3aa4-4310-b403-6efd0ce446c0" name="Certificate ID" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1019723-a7e7-431c-a168-1503598e04e2" name="Start" type="Start"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" stage="Filename" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" stage="Subject" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" stage="Password" /></inputs><onsuccess>54d1754a-7e02-4b40-855d-3fe5d945202b</onsuccess></stage><stage stageid="c31cc48e-ec21-4038-91b9-1682bae939af" name="Password" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><narrative></narrative><displayx>210</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="f6df3764-dcc7-4043-8421-f34731b2df9c" name="Subject" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20146d7e-e545-4e86-bc22-69ce3c23fff5" name="Filename" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18cff729-a04a-4d34-91c9-80e1428679ad" name="Certificate ID" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>450</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f1c0ddf2-dd2f-440a-973e-a5a235079020" name="Certificate ID" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="968061dc-e7ea-4d0e-8476-6a41cbbe9970" name="Certificate ID" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>525</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48562cbe-1f7f-4334-b7c2-f4c7409f2ac3" name="Method" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>465</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27a2c2f2-d405-4f86-ad60-bbc346beb763" name="Method" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>510</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a010495-6036-41e9-8142-3f4050ceeba8" name="Content Type" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>585</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a4e8f78-0708-40cc-afae-5adc724e9ff2" name="Body" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><narrative></narrative><displayx>645</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ef8820a-31cf-4ad0-82c0-61cf077afe8d" name="Content Type" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>570</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="99cdc666-eea1-4822-8131-b19f910b1e97" name="Body" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative></narrative><displayx>630</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="7ba7c602-a272-4b92-a90b-229ea298a38b" name="Webservices - REST" xmlns="http://www.blueprism.co.uk/product/process"><process name="Webservices - REST" version="6.5.0.12573" bpversion="6.5.0.12573" narrative="Connects to REST based webservice API's" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>5ac23e07-b8e0-406f-b697-05f5f5bad2f1</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="206bb6ee-e6ba-4f39-b20c-e23f5f307a8b" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="45072ac5-d810-496f-9529-1bd859241e0b" type="Normal" published="True"><name>Get</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63" type="Normal" published="True"><name>Post</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4cc8c263-9485-48a7-9d85-cb0d25683a40" type="Normal" published="True"><name>Put</name><view><camerax>0</camerax><cameray>47</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5" type="Normal" published="True"><name>Delete</name><view><camerax>15</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1" type="Normal" published="True"><name>Setup OAuth</name><view><camerax>0</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="574ad120-65a9-4c4d-bd85-69a98d3f6c61" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d92cee9e-a6ed-4df3-8411-6e16b8669483</onsuccess></stage><stage stageid="d92cee9e-a6ed-4df3-8411-6e16b8669483" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="97ead676-4140-4289-ad6b-5294ffc6ebbf" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="15ee3686-616c-411c-ab56-476c349e4113" name="Clean Up" type="SubSheetInfo"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="02146cc7-4928-4bae-a02c-42908b228c73" name="Start" type="Start"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a4e10117-0b86-421d-b7bb-bd691e357b00</onsuccess></stage><stage stageid="a4e10117-0b86-421d-b7bb-bd691e357b00" name="End" type="End"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2f55b486-845c-473d-be09-c045226877f3" name="Get" type="SubSheetInfo"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><narrative>Action to get a resource via the REST API using the GET method.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2d82fb63-67ec-47d5-8b6f-3e49ab4880c0" name="Start" type="Start"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /></inputs><onsuccess>4acd6a3b-907c-4493-86ac-2413a56b7f66</onsuccess></stage><stage stageid="8056afa2-f43c-48aa-817b-13af7a4d9337" name="End" type="End"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="143989eb-07ed-46cd-8fb2-b014ffb10808" name="new" type="Note"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c018dde-6e5a-424b-bbd2-4488261debe3" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2f58aa91-f860-4ca4-9acb-5f02e2b5a380" name="Post" type="SubSheetInfo"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative>Action to create a resource via the REST API using the POST method.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e2611545-18f9-4b7c-9dfe-a5d008d9c98b" name="Put" type="SubSheetInfo"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative>Action to update a resource via the REST API using the PUT method.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="161e5dad-bace-4b18-86ce-e2377c8b8c41" name="Delete" type="SubSheetInfo"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><narrative>Action to delete a resource via the REST API using the DELETE method.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bf05bd02-fa23-405e-8eef-2ea744b7d8a4" name="Address URL" type="Data"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00768fb3-354f-4cff-94bc-d41768d53b61" name="Start" type="Start"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /><input type="collection" name="Data" narrative="The data to be passed to the REST API." stage="Data" /></inputs><onsuccess>f061dcb0-b584-432b-b496-6d5e84add45c</onsuccess></stage><stage stageid="19956b49-eba1-4835-b630-7509ba4094a2" name="Address URL" type="Data"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9dc76b2-6396-4047-b20d-204b41ae3ccc" name="Data" type="Collection"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f061dcb0-b584-432b-b496-6d5e84add45c" name="Convert data to JSON" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Data" expr="[Data]" /></inputs><outputs><output type="text" name="JSON" stage="JSON" /></outputs><onsuccess>0ac97749-8120-423f-aa8c-239ad0626af4</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="47cc4d30-bd02-4d73-b45e-a1b6bac28573" name="JSON" type="Data"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be274dda-1caf-4fc4-b1b2-6b8cbc98750a" name="Convert response" type="Action"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[Response]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>8056afa2-f43c-48aa-817b-13af7a4d9337</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="056e289e-9189-4e09-a287-b964b5b48190" name="Response" type="Data"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2b90464-c4a1-4e85-aec0-6ad3c1b502b2" name="Result" type="Collection"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><narrative></narrative><displayx>105</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="282d0cca-3226-437b-86a6-c979d7136b8c" name="End" type="End"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="0c69da42-34d9-404a-bb46-c54757f9db29" name="Convert response" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[Response]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>282d0cca-3226-437b-86a6-c979d7136b8c</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="399911e4-9c13-4a67-8104-17b68d48fc02" name="Result" type="Collection"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative></narrative><displayx>105</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="76c5f166-5779-49c3-9690-4812a8702ddf" name="Response" type="Data"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative></narrative><displayx>165</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a8b5eac-b144-432a-afcc-b21152724dc1" name="Start" type="Start"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /><input type="collection" name="Data" narrative="The data to be passed to the REST API." stage="Data" /></inputs><onsuccess>f791f896-d073-4ac4-9b21-30c6cfab2213</onsuccess></stage><stage stageid="44394618-c159-40b5-a235-016c41c2235d" name="Address URL" type="Data"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28c4adf5-d8a5-492f-b2d9-3022551bf1e0" name="Data" type="Collection"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f791f896-d073-4ac4-9b21-30c6cfab2213" name="Convert data to JSON" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Data" expr="[Data]" /></inputs><outputs><output type="text" name="JSON" stage="JSON" /></outputs><onsuccess>c5f2c977-d290-4c31-a8fb-a43704d69c5a</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="42441cfc-0902-4db6-9424-d196b2dde4ef" name="JSON" type="Data"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6e208d83-fe82-46f4-b024-60df20f67f1f" name="End" type="End"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="fee30318-0209-47aa-84ec-b3a5ee03c836" name="Convert response" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>390</displayx><displayy>150</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[Response]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="383d320f-6cfe-42a8-9a63-a52457c1da9c" name="Result" type="Collection"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative></narrative><displayx>105</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0655c33e-a13e-4640-ad4f-cb72effed093" name="Response" type="Data"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative></narrative><displayx>165</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="92cf8979-c738-4567-8f12-78c2bf98bacb" name="Start" type="Start"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /></inputs><onsuccess>4fb8a80f-165f-42f0-bcef-f66982f1732a</onsuccess></stage><stage stageid="49d72e7b-d71f-4ab6-91e3-4ce578f6cecd" name="End" type="End"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4271315-10ce-41cd-928a-a6c9378b17ab" name="Address URL" type="Data"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ceef9616-c8c6-4ff8-8323-13424e66ecc3" name="Response" type="Data"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><narrative></narrative><displayx>165</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="605fc049-f65b-46e5-9c3d-2a394303823f" name="Make OAuth Request" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>60</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;POST&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="[JSON]" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>0c69da42-34d9-404a-bb46-c54757f9db29</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="987c8693-c16a-4631-aab8-421d93c08418" name="Setup OAuth" type="SubSheetInfo"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative>Sets the REST VBO up for use with OAuth2.0 </narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9b8fb7f1-1fa8-445f-9a21-dc7774a82d0a" name="Start" type="Start"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" stage="Token URL" /><input type="text" name="Username" narrative="Username for HTTP Basic authentication" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic authentication" stage="Password" /><input type="text" name="Certificate Filename" narrative="OPTIONAL: Filename for the Client Authentication certificate" stage="Filename" /><input type="text" name="Certificate Subject" narrative="OPTIONAL: Subject for the Client Authentication Certificate" stage="Subject" /><input type="password" name="Certificate Password" narrative="The password for the Client Authentication certificate if needed" stage="Certificate Password" /></inputs><onsuccess>b212f6ab-4161-464c-aae8-38faf80f2d6c</onsuccess></stage><stage stageid="82ee50b6-75c1-4faf-a8e9-14462321cc00" name="End" type="End"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c2090365-b827-4309-b71c-9a2cb81ad4a2" name="Token URL" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>30</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="1b69fdb8-6b39-4ef9-b6c5-211340c0153d" name="Username" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="e24691b5-efa4-424d-b1f1-dc3f612e53e8" name="Password" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>30</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="f2d94949-6633-4f28-810b-7ec1dd9287af" name="Certificate ID" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="064a27f7-8011-436d-91ef-f20087d099e2" name="Token" type="Collection"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="f5fc7485-f181-4f31-8a27-f703118ff4b6" name="Make OAuth Request" type="Action"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;GET&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>be274dda-1caf-4fc4-b1b2-6b8cbc98750a</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="6a94567e-9f64-4f00-ac7b-1b6ab6c81f6e" name="Make OAuth Request" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;PUT&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="[JSON]" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>4be7e5b8-5243-42a0-bdde-837188a9f868</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="b7ad19e2-aa95-4b53-9231-fa19db9c6801" name="Make OAuth Request" type="Action"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><narrative></narrative><displayx>75</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;DELETE&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>49d72e7b-d71f-4ab6-91e3-4ce578f6cecd</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="b212f6ab-4161-464c-aae8-38faf80f2d6c" name="Load Certificate" type="Action"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" expr="[Filename]" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" expr="[Subject]" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" expr="[Password]" /></inputs><outputs><output type="text" name="Certificate ID" stage="Certificate ID" /></outputs><onsuccess>ccd8a634-c1bf-40fc-996a-d5b21538f517</onsuccess><resource object="Webservices - OAuth2.0" action="Load Certificate" /></stage><stage stageid="e459aef7-c93c-461a-b95c-9eb523e3d241" name="Filename" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="567a6615-4d89-428b-9bed-648f364e256a" name="Subject" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>30</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c6f1fc08-8438-4dbe-8d4b-7fc5cdaaa29c" name="Global" type="Block"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>-15</displayx><displayy>-105</displayy><displaywidth>270</displaywidth><displayheight>135</displayheight><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="330afb7e-2be0-46c4-b413-ccdc811039e4" name="Certificate Password" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative></narrative><displayx>150</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="94f965cd-a8e4-4392-a4fe-4cf2cb4685d8" name="Use OAuth" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>150</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="ccd8a634-c1bf-40fc-996a-d5b21538f517" name="Set Use OAuth" type="Calculation"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><narrative></narrative><displayx>-60</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>82ee50b6-75c1-4faf-a8e9-14462321cc00</onsuccess><calculation expression="True" stage="Use OAuth" /></stage><stage stageid="2970ec68-c495-466e-8a7a-8d36da8d39e3" name="Make HTTP request" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>60</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>0c69da42-34d9-404a-bb46-c54757f9db29</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="0ac97749-8120-423f-aa8c-239ad0626af4" name="Use OAuth" type="Decision"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Use OAuth]" /><ontrue>605fc049-f65b-46e5-9c3d-2a394303823f</ontrue><onfalse>2970ec68-c495-466e-8a7a-8d36da8d39e3</onfalse></stage><stage stageid="2e08d7d3-68d0-4afb-837f-51fed8e5208b" name="Make HTTP request" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>75</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;PUT&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>4be7e5b8-5243-42a0-bdde-837188a9f868</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="c5f2c977-d290-4c31-a8fb-a43704d69c5a" name="Use OAuth" type="Decision"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Use OAuth]" /><ontrue>6a94567e-9f64-4f00-ac7b-1b6ab6c81f6e</ontrue><onfalse>2e08d7d3-68d0-4afb-837f-51fed8e5208b</onfalse></stage><stage stageid="0ed81f3d-606c-4360-be7b-7db023c451e9" name="Make HTTP request" type="Action"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;GET&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>be274dda-1caf-4fc4-b1b2-6b8cbc98750a</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="4acd6a3b-907c-4493-86ac-2413a56b7f66" name="Use OAuth" type="Decision"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Use OAuth]" /><ontrue>f5fc7485-f181-4f31-8a27-f703118ff4b6</ontrue><onfalse>0ed81f3d-606c-4360-be7b-7db023c451e9</onfalse></stage><stage stageid="2c78a3d5-e864-477c-af30-dcd775c2de6a" name="Make HTTP request" type="Action"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>15</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;DELETE&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>49d72e7b-d71f-4ab6-91e3-4ce578f6cecd</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="4fb8a80f-165f-42f0-bcef-f66982f1732a" name="Use OAuth" type="Decision"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Use OAuth]" /><ontrue>b7ad19e2-aa95-4b53-9231-fa19db9c6801</ontrue><onfalse>2c78a3d5-e864-477c-af30-dcd775c2de6a</onfalse></stage><stage stageid="4be7e5b8-5243-42a0-bdde-837188a9f868" name="Anchor1" type="Anchor"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>150</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6e208d83-fe82-46f4-b024-60df20f67f1f</onsuccess></stage></process></object>
        <work-queue id="3" name="Invalid-eDMER" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <work-queue id="2" name="New-eDMER" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <work-queue id="4" name="Results" xmlns="http://www.blueprism.co.uk/product/work-queue" />
        <environment-variable id="Process eDMERs - Blood Pressure Keyword" name="Process eDMERs - Blood Pressure Keyword" type="text" value="BloodPressureValue" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Bundle Patient Section Resource Name" name="Process eDMERs - Bundle Patient Section Resource Name" type="text" value="patient" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Bundle Questionnaire Section Resource Name" name="Process eDMERs - Bundle Questionnaire Section Resource Name" type="text" value="questionnaireresponse" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Class Keyword" name="Process eDMERs - Class Keyword" type="text" value="Class" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Date Consent and Cert Given - Section LinkId" name="Process eDMERs - Date Consent and Cert Given - Section LinkId" type="text" value="columns5Panel2" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Date Consent and Certification Given - Section LinkId</description>
        </environment-variable>
        <environment-variable id="Process eDMERs - Date Consent and Cert Given Keyword" name="Process eDMERs - Date Consent and Cert Given Keyword" type="text" value="DateConsentandCertificationGiven" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Date Of Birth Keyword" name="Process eDMERs - Date Of Birth Keyword" type="text" value="birthDate" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Details - Narrative Section LinkId" name="Process eDMERs - Details - Narrative Section LinkId" type="text" value="panel6" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - DL Keyword" name="Process eDMERs - DL Keyword" type="text" value="DriversLicenseNumber" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Failure email recepient addresses" name="Process eDMERs - Failure email recepient addresses" type="text" value="marzieh.mehrnejad@gov.bc.ca" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Get New URL" name="Process eDMERs - Get New URL" type="text" value="http://dmft-dev.pathfinder.gov.bc.ca/api/queue/dmer" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Cardiovascular Section LinkId" name="Process eDMERs - History-Cardiovascular Section LinkId" type="text" value="panel4" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-CNS Section LinkId" name="Process eDMERs - History-CNS Section LinkId" type="text" value="HistoryPanel4" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Drugs and Alcohol Section LinkId" name="Process eDMERs - History-Drugs and Alcohol Section LinkId" type="text" value="HistoryPanel9" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Endocrine Section LinkId" name="Process eDMERs - History-Endocrine Section LinkId" type="text" value="HistoryPanel8" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Hearing Section LinkId" name="Process eDMERs - History-Hearing Section LinkId" type="text" value="panel3" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Musculoskeletal Section LinkId" name="Process eDMERs - History-Musculoskeletal Section LinkId" type="text" value="columnsHx1Panel" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Other Conditions Section LinkId" name="Process eDMERs - History-Other Conditions Section LinkId" type="text" value="historyOtherConditions" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Psychiatric Section LinkId" name="Process eDMERs - History-Psychiatric Section LinkId" type="text" value="HistoryPanel7" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Respiratory Section LinkId" name="Process eDMERs - History-Respiratory Section LinkId" type="text" value="HistoryPanel6" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - History-Vision Section LinkId" name="Process eDMERs - History-Vision Section LinkId" type="text" value="panel2" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Invalid eDMER Queue" name="Process eDMERs - Invalid eDMER Queue" type="text" value="Invalid-eDMER" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Queue which invalid eDMERs are stored in.</description>
        </environment-variable>
        <environment-variable id="Process eDMERs - List New URL" name="Process eDMERs - List New URL" type="text" value="http://dmft-dev.pathfinder.gov.bc.ca/api/queue/dmer/list/New" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Narrative Keyword" name="Process eDMERs - Narrative Keyword" type="text" value="Narrative" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - New eDMER Queue" name="Process eDMERs - New eDMER Queue" type="text" value="New-eDMER" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Queue which the new eDMERs are stored in.</description>
        </environment-variable>
        <environment-variable id="Process eDMERs - Opinion Keyword" name="Process eDMERs - Opinion Keyword" type="text" value="doespatienthaveaconditionthatmayaffectdriving" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Opinion Section LinkId" name="Process eDMERs - Opinion Section LinkId" type="text" value="panel5" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Patient Panel LinkId" name="Process eDMERs - Patient Panel LinkId" type="text" value="patientInformation" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - PUT URL" name="Process eDMERs - PUT URL" type="text" value="http://dmft-dev.pathfinder.gov.bc.ca/api/queue/dmer/processed?" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Reason For Examination and Class Panel LinkId" name="Process eDMERs - Reason For Examination and Class Panel LinkId" type="text" value="panel" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Recommendation Section LinkId" name="Process eDMERs - Recommendation Section LinkId" type="text" value="columns5Panel" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Results Queue" name="Process eDMERs - Results Queue" type="text" value="Results" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision Acuity Corrected Keyword" name="Process eDMERs - Vision Acuity Corrected Keyword" type="text" value="AcuityCorrected" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision Acuity Uncorrected Keyword" name="Process eDMERs - Vision Acuity Uncorrected Keyword" type="text" value="AcuityUncorrected" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision Field Meet Criteria Keyword" name="Process eDMERs - Vision Field Meet Criteria Keyword" type="text" value="MeetCriteria" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision Field Normal Keyword" name="Process eDMERs - Vision Field Normal Keyword" type="text" value="VisualFieldNormal" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision&amp;Physical-Blood Pressure Section LinkId" name="Process eDMERs - Vision&amp;Physical-Blood Pressure Section LinkId" type="text" value="visionScreeningBloodPressure" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision&amp;Physical-Vis Acuity Uncrctd Sect LinkId" name="Process eDMERs - Vision&amp;Physical-Vis Acuity Uncrctd Sect LinkId" type="text" value="visionScreeningVisualAcuityUncorrected2" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Vision&amp;Physical-Visual Acuity Uncorrected Section LinkId</description>
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision&amp;Physical-Visual Acuity Crctd Sect LinkId" name="Process eDMERs - Vision&amp;Physical-Visual Acuity Crctd Sect LinkId" type="text" value="visionScreeningVisualAcuityCorrected2" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description>Vision&amp;Physical-Visual Acuity Corrected Section LinkId</description>
        </environment-variable>
        <environment-variable id="Process eDMERs - Vision&amp;Physical-Visual Field Section LinkId" name="Process eDMERs - Vision&amp;Physical-Visual Field Section LinkId" type="text" value="visionScreeningVisualField" xmlns="http://www.blueprism.co.uk/product/environment-variable">
            <description />
        </environment-variable>
        <process-group id="d881e2bb-af1b-44d9-98fa-2447ce07df51" name="DMFT" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="d3140278-0670-47f3-9706-277ae31379ea" />
                <process id="c9f6ddba-a007-4380-8b38-7dcc7889681b" />
                <process id="3fd61e05-593b-43a0-ada4-c37717418d0a" />
                <process id="58c6fe3e-c09a-494d-8a30-966d13429374" />
            </members>
        </process-group>
        <object-group id="35f2ebbe-c9ab-49cf-bd07-88a41be78081" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" />
                <object id="c28cdbe1-9417-4ded-80c1-19fc3f6ab7f0" />
                <object id="da53ac89-1fa5-4b10-b36d-3163ee14255e" />
                <object id="6f9680f1-616c-4884-b58c-42ed51446377" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
                <object id="6efb1579-126a-4563-b2e9-3d9e432c1a79" />
                <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" />
                <object id="1b13f5b8-01d1-441e-bd7f-54884a24d71f" />
                <object id="9cd0a967-eb01-4e38-bc91-31ace18db7eb" />
                <object id="7ba7c602-a272-4b92-a90b-229ea298a38b" />
            </members>
        </object-group>
        <object-group id="0cf4f200-9d2e-4bdb-b033-fd1cae933485" name="DMFT-Business Objects" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="a7b9bdca-487e-46b4-bf24-b19ab823b7e0" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>